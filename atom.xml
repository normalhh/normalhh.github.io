<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-21T09:43:50.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/02/21/Beyond%20Compare4%20For%20Mac%E6%97%A0%E9%99%90%E8%AF%95%E7%94%A8/"/>
    <id>http://yoursite.com/2017/02/21/Beyond Compare4 For Mac无限试用/</id>
    <published>2017-02-21T09:43:50.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【转载】Beyond-Compare-4-for-Mac-无限试用"><a href="#【转载】Beyond-Compare-4-for-Mac-无限试用" class="headerlink" title="【转载】Beyond Compare 4 for Mac 无限试用"></a>【转载】Beyond Compare 4 for Mac 无限试用</h1><p><strong>本文转自：<a href="https://blog.yeatse.com/2016/02/18/beyond-compare-4-for-mac-infinite-trial/" target="_blank" rel="noopener">https://blog.yeatse.com/2016/02/18/beyond-compare-4-for-mac-infinite-trial/</a></strong></p><p>终端命令：<br>    $ cd /Applications/Beyond\ Compare.app/Contents/MacOS/<br>    $ mv BCompare BCompare.real<br>新建文本文件命名为BCompare，内容如下：</p><pre><code>#!/bin/bashrm &quot;/Users/$(whoami)/Library/Application Support/Beyond Compare/registry.dat&quot;&quot;`dirname &quot;$0&quot;`&quot;/BCompare.real $@</code></pre><p>保存之后执行：<br>    $ chmod +x BCompare<br>完！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;【转载】Beyond-Compare-4-for-Mac-无限试用&quot;&gt;&lt;a href=&quot;#【转载】Beyond-Compare-4-for-Mac-无限试用&quot; class=&quot;headerlink&quot; title=&quot;【转载】Beyond Compare 4 for M
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>用Android Studio和Gradle构建项目实现极少配置打包APK文件</title>
    <link href="http://yoursite.com/2017/01/11/%E7%94%A8Android-Studio%E5%92%8CGradle%E6%9E%84%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0%E6%9E%81%E5%B0%91%E9%85%8D%E7%BD%AE%E6%89%93%E5%8C%85APK%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2017/01/11/用Android-Studio和Gradle构建项目实现极少配置打包APK文件/</id>
    <published>2017-01-11T08:43:08.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近因为公司与太保合作的一个项目，本身使用的是一个已有项目的源码直接修改进行开发的，当时那个已有项目是用Eclipse构建的，后来在集成太保推送SDK的时候，对方要求在不同的环境使用不同的ApplicationId,也就相当于Eclipse里的packageName，但是在Gradle构建的Android项目中，packageName与ApplicationId是两个不同的概念。为了达到上面的要求，首先我将Eclipse构建的项目迁移到Android Studio中，这个工作量对我来说也算挺大的了，因为整个项目有多个依赖类库，造成了改造的时候依赖的各种混乱。种种恶心的问题不一而足，就不在这里细说了。下面单单说一下如何达成在不同的环境使用不同的ApplicationId进行打包，并达到成功获取推送信息的目的。</p><p>首先要将Project Structure中创建3个Signing配置，如下图所示：<br><img src="https://ww1.sinaimg.cn/large/006tKfTcgw1fbmsopwgoxj316c0d40tf.jpg" alt=""><br>其中debug可以不用配置，但为了方便我还是配了一下，另外两个Sit和Release两个我配的都是使用生产的签名文件，为了让用户测试方便。<br>之后在Flavors标签中添加两个配置，如图所示：<br><img src="https://ww2.sinaimg.cn/large/006tKfTcjw1fbn3fsuor8j31420ncabi.jpg" alt=""><br>其中图片中显示的<code>Unrecognized value</code>，这个等一下再解释，添加好之后什么都不用修改进入下一个标签页Build Types，同样的Buid Type我们也添加两个新的配置，把每一个配置修改一下，debug中的配置如图：<br><img src="https://ww1.sinaimg.cn/large/006tKfTcgw1fbmswgmebzj314u0p40u2.jpg" alt=""><br>Debuggable是指打包的应用是否支持Debug，<br>Jni Debuggable是指打包的应用是否支持Native方法Debug，我这里都是false，因为我只是集成了一些so文件，并不需要调试Native的方法<br>Signing Config就用到了我们刚刚创建的签名配置，下拉菜单中也是可以看到的，这里debug我就使用的deubg的配置，sit使用sit的签名配置，release使用release的签名配置。<br>接下来就是重点了：那好笔和纸，做好笔记哟。</p><p><strong>打开Project根目录下的build.gradle文件</strong>，最上面添加一条<code>apply from: &quot;config.gradle&quot;</code>，表示可以接受在config.gradle文件中的配置的参数数据。接着在Project根目录下添加config.gradle文件，这个就是我们需要使用的配置信息所在的文件了。下面贴出来我的Project中的config.gradle文件的源码，以免会有遗漏的东西导致出问题：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">from:</span> <span class="string">"config.gradle"</span></span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">"https://plugins.gradle.org/m2/"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:2.2.3'</span></span><br><span class="line">        classpath <span class="string">"com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"</span></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task clean(<span class="string">type:</span> Delete) &#123;</span><br><span class="line">    delete rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来配置项目主要Module中的build.config文件，<br><img src="https://ww1.sinaimg.cn/large/006tKfTcgw1fbn407gwk4j31720gugn1.jpg" alt=""><br>上图中可以很清楚的了解到这3项内容就是我们在Project Structure中的signing标签页所创建的配置。所以在这里不再细说了。<br>然后看buildTypes，这里面有三个配置也是我们当时创建好的。但是为了多渠道打包方便，这里需要做一些改造。</p><ol><li><code>buildConfigField &quot;boolean&quot;, &quot;LOG_DEBUG&quot;, &quot;true&quot;</code>这句话是在BuildConfig文件中添加一个布尔值参数，名称为“LOG_DEBUG”，值为“true”，BuildConfig是在每一次编译项目的时候都会自动生成的一个java类，通过这里的配置，我们可以向这个java类中增加我们需要的变量。下面两条类似，主要是为了规定当前配置下，所使用的SERVERURL的地址。这样配置完之后，Sync一下Gradle脚本，我们就可以在项目中直接引用这个变量了。例如：<br><img src="https://ww3.sinaimg.cn/large/006tKfTcgw1fbn4g4foeaj30s205qt9b.jpg" alt=""><br>在改造过程中，为了不影响项目业务逻辑中所写的代码，所以只是替换了Constants这个类中的配置信息。这样我只需要一套配置信息就可以了，在不同的打包模式下，会自动修改替换BuildConfig中的对应变量的值。从而达到零修改多渠道打包的目的。<br>2.<br><img src="https://ww1.sinaimg.cn/large/006tKfTcgw1fbn44r4lrcj31iu128tf2.jpg" alt=""><br>而在上一张图中可以看到有这样一个值<code>rootProject.ext.android.devServerUrl</code>，这个其实就是我们引用的项目根目录下的config.gradle文件中配置的变量值。config.gradle文件中是这样的：</li></ol><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ext &#123;</span><br><span class="line">    android = [<span class="string">compileSdkVersion:</span> <span class="number">22</span>,</span><br><span class="line"><span class="symbol">               buildToolsVersion:</span> <span class="string">"25.0.2"</span>,</span><br><span class="line">               <span class="string">sitApplicationId    :</span> <span class="string">"com.cpic.sit"</span>,</span><br><span class="line">               <span class="string">proApplicationId    :</span> <span class="string">"com.cpic.pro"</span>,</span><br><span class="line">               <span class="string">minSdkVersion    :</span> <span class="number">16</span>,</span><br><span class="line">               <span class="string">targetSdkVersion :</span> <span class="number">22</span>,</span><br><span class="line"><span class="symbol">               versionCode:</span> <span class="number">1</span>,</span><br><span class="line"><span class="symbol">               sitVersionName:</span> <span class="string">"1.0.8"</span>,</span><br><span class="line"><span class="symbol">               proVersionName:</span> <span class="string">"1.0.1"</span>,</span><br><span class="line"><span class="symbol">               devServerUrl:</span> <span class="string">"\"https://dev.cpic.com.cn/dev/\""</span>,</span><br><span class="line"><span class="symbol">               sitServerUrl:</span> <span class="string">"\"https://sit.cpic.com.cn/sit/\""</span>,</span><br><span class="line"><span class="symbol">               proServerUrl:</span> <span class="string">"\"https://pro.cpic.com.cn/pro/\""</span>,</span><br><span class="line"><span class="symbol">               devAPIUrl:</span> <span class="string">"\"https://dev.cpic.com.cn/dev-http/\""</span>,</span><br><span class="line"><span class="symbol">               sitAPIUrl:</span> <span class="string">"\"https://sit.cpic.com.cn/sit-http/\""</span>,</span><br><span class="line"><span class="symbol">               proAPIUrl:</span> <span class="string">"\"https://pro.cpic.com.cn/pro-http/\""</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了方便打包，我将本来是写在项目的Constants类中的url地址配在了config.gradle文件里。名称也根据环境的不同做了区分，分别加上了dev/sit/pro的前缀。我们在打包配置文件中引用的时候直接通过rootProject.ext.android.devServerUrl就可以取到这里的值了。<code>signingConfig signingConfigs.debug</code>这句就是使用Signing中的debug配置，所以在打debug包的时候就使用这个语句配置，打sit包使用<code>signingConfig signingConfigs.sit</code>进行配置，打生产包的时候<code>signingConfig signingConfigs.release</code>进行配置，很好理解。<br>上图中还有一个manifestPlaceholders的参数，这个参数后面的中括号中带了一堆的值，这个参数的作用是替换在AndroidManifest文件中所指定的参数的值，举个例子：<code>JPUSH_CHANNEL_VALUE: &quot;pro&quot;</code>就表示用“pro”替换AndroidManifest中以“JPUSH_CHANNEL_VALUE”为参数的值。而在清单文件中，我们有一项极光推送的配置是这样写的：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"JPUSH_CHANNEL"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:value</span>=<span class="string">"$&#123;JPUSH_CHANNEL_VALUE&#125;"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>所以，你可以知道，我们就是要将android:value=的值替换成”pro”。同样的我们又增加了一个<code>THE_APPLICATION_ID: rootProject.ext.android.sitApplicationId</code>这样的参数，这个参数引用了config.gradle配置文件中的sitApplicationId。这里替换的就比较多了，在清单文件中一共有6处需要做这样的替换，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">permission</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:name</span>=<span class="string">"$&#123;THE_APPLICATION_ID&#125;.permission.JPUSH_MESSAGE"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:protectionLevel</span>=<span class="string">"signature"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"$&#123;THE_APPLICATION_ID&#125;.permission.JPUSH_MESSAGE"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- 极光推送 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">activity</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.ui.PushActivity"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:configChanges</span>=<span class="string">"orientation|keyboardHidden"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:exported</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:theme</span>=<span class="string">"@android:style/Theme.NoTitleBar"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:windowSoftInputMode</span>=<span class="string">"adjustPan"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.ui.PushActivity"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.DEFAULT"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"$&#123;THE_APPLICATION_ID&#125;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Required SDK 核心功能 since 1.8.0 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.service.DaemonService"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:exported</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.intent.DaemonService"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"$&#123;THE_APPLICATION_ID&#125;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Required SDK核心功能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.service.PushReceiver"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:exported</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span> <span class="attr">android:priority</span>=<span class="string">"1000"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Required 显示通知栏 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"$&#123;THE_APPLICATION_ID&#125;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.USER_PRESENT"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.net.conn.CONNECTIVITY_CHANGE"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Optional --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.PACKAGE_ADDED"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.PACKAGE_REMOVED"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"package"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Required SDK核心功能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.service.AlarmReceiver"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- User defined. 用户自定义的广播接收器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">".push.MyReceiver"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:enabled</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.intent.REGISTRATION"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Required 用户注册SDK的intent --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.intent.MESSAGE_RECEIVED"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Required 用户接收SDK消息的intent --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.intent.NOTIFICATION_RECEIVED"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Required 用户接收SDK通知栏信息的intent --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.intent.NOTIFICATION_OPENED"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Required 用户打开自定义通知栏的intent --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.intent.ACTION_RICHPUSH_CALLBACK"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- Optional 用户接受Rich Push Javascript 回调函数的intent --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.intent.CONNECTION"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--  --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 接收网络变化 连接/断开 since 1.6.3 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"$&#123;THE_APPLICATION_ID&#125;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对应的极光推送所需要的APP_KEY的值，我们也可以这样替换，以及百度推送的MyPushKey和env的值也是这样的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Required . Enable it you can get statistics data with channel --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"JPUSH_CHANNEL"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:value</span>=<span class="string">"$&#123;JPUSH_CHANNEL_VALUE&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"JPUSH_APPKEY"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:value</span>=<span class="string">"$&#123;JPUSH_APPKEY_VALUE&#125;"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;/&gt;值来自开发者平台取得的AppKey --&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 百度推送 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- push应用定义消息receiver声明 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">".push.MyPushMessageReceiver"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 接收push消息 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.action.MESSAGE"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 接收bind,unbind,fetch,delete等反馈消息 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.action.RECEIVE"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.action.notification.CLICK"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.PushServiceReceiver"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:process</span>=<span class="string">":bdservice_v1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.BOOT_COMPLETED"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.net.conn.CONNECTIVITY_CHANGE"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.action.notification.SHOW"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.action.media.CLICK"</span>/&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 以下四项为可选的action声明，可大大提高service存活率和消息到达速度 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MEDIA_MOUNTED"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.USER_PRESENT"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.ACTION_POWER_CONNECTED"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.ACTION_POWER_DISCONNECTED"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Push服务接收客户端发送的各种请求 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.RegistrationReceiver"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:process</span>=<span class="string">":bdservice_v1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.action.METHOD"</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.action.BIND_SYNC"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.PACKAGE_REMOVED"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">data</span> <span class="attr">android:scheme</span>=<span class="string">"package"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.PushService"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:exported</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:process</span>=<span class="string">":bdservice_v1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.action.PUSH_SERVICE"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 4.4版本新增的CommandService声明，提升小米和魅族手机上的实际推送到达率 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"com.baidu.android.pushservice.CommandService"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:exported</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在百度开发者中心查询应用的API Key --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"api_key"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:value</span>=<span class="string">"DzifCKe1j4NYwD0X3LvBrIpF"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- appCode --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"MyPushKey"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:value</span>=<span class="string">"$&#123;BAIDU_APPCODE_VALUE&#125;"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta-data</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"env"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:value</span>=<span class="string">"$&#123;ENV_VALUE&#125;"</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- push结束 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">"com.example.mysdk.service.ReceiptService"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:exported</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:name</span>=<span class="string">".service.CpicPushService"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">android:exported</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">".common.UpdateReceiver"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>这样才能在打包的时候，节省我们大量的重复劳动</p><ol><li>之后就是打包渠道的配置了，打包渠道就是在ProjectStructure中Flavors标签页按照正常来讲，会有各大应用市场的渠道要配置，比如360，应用宝，谷歌play，豆瓣等等。然而我们现在只讨论区分各个环境所应该使用的配置，因此我这里的配置是这样写的</li></ol><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">productFlavors &#123;</span><br><span class="line">   sitConfig &#123;</span><br><span class="line">       applicationId rootProject.ext.android.sitApplicationId</span><br><span class="line">       minSdkVersion rootProject.ext.android.minSdkVersion</span><br><span class="line">       targetSdkVersion rootProject.ext.android.maxSdkVersion</span><br><span class="line">       versionName rootProject.ext.android.sitVersionName</span><br><span class="line">       versionCode rootProject.ext.android.versionCode</span><br><span class="line">       <span class="comment">// dex突破65535的限制</span></span><br><span class="line">       multiDexEnabled <span class="literal">true</span></span><br><span class="line">   &#125;</span><br><span class="line">   proConfig &#123;</span><br><span class="line">       applicationId rootProject.ext.android.proApplicationId</span><br><span class="line">       minSdkVersion rootProject.ext.android.minSdkVersion</span><br><span class="line">       targetSdkVersion rootProject.ext.android.maxSdkVersion</span><br><span class="line">       versionName rootProject.ext.android.proVersionName</span><br><span class="line">       versionCode rootProject.ext.android.versionCode</span><br><span class="line">       <span class="comment">// dex突破65535的限制</span></span><br><span class="line">       multiDexEnabled <span class="literal">true</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为我们全部引用的是config.gradle文件中的配置信息，所以导致我们的Android Studio无法识别到这些参数的值，因此才会有上面的<code>Unrecognized value</code>的情况出现。</p><ol><li>最后就是打包的APK文件名的生成规则，这里我就用的很简单的规则去生成了，你们也可以研究一下更加复杂的生成规则，具体的内容我也不细讲了，直接贴出来源码</li></ol><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改生成的apk名字</span></span><br><span class="line">applicationVariants.all&#123; variant-&gt;</span><br><span class="line">   variant.outputs.each &#123; output-&gt;</span><br><span class="line">       <span class="keyword">def</span> oldFile = output.outputFile</span><br><span class="line">       <span class="keyword">def</span> newName = <span class="string">''</span>;</span><br><span class="line">       <span class="keyword">if</span>(variant.buildType.name.equals(<span class="string">'release'</span>))&#123;</span><br><span class="line"><span class="comment">//                println(variant.productFlavors[0].name)</span></span><br><span class="line">           <span class="keyword">def</span> releaseApkName = <span class="string">'pro-'</span> + rootProject.ext.android.proVersionName + <span class="string">'-'</span> + variant.buildType.name +<span class="string">'.apk'</span></span><br><span class="line">           output.outputFile = <span class="keyword">new</span> File(oldFile.parent, releaseApkName)</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(variant.buildType.name.equals(<span class="string">'sit'</span>))&#123;</span><br><span class="line">           newName = <span class="string">'sit-'</span> + rootProject.ext.android.sitVersionName + <span class="string">'-'</span> + variant.buildType.name +<span class="string">'.apk'</span></span><br><span class="line">           output.outputFile = <span class="keyword">new</span> File(oldFile.parent, newName)</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em><strong>注：以上Module配置文件的代码全部都要写在<code>android {</code>里面才不会报错。</strong></em></p><p>下面就可以检验我们配置的成果了：<br><img src="https://ww4.sinaimg.cn/large/006tKfTcjw1fbn5xwnwuzj30fy0hkwfb.jpg" alt=""><br>选择需要的打包方式<br><img src="https://ww4.sinaimg.cn/large/006tKfTcjw1fbn5z1974vj30oe0gi74u.jpg" alt=""><br>选择需要打包的渠道<br><img src="https://ww1.sinaimg.cn/large/006tKfTcjw1fbn5yflmwdj30ow0gy74v.jpg" alt=""></p><p>这样打包一次只会打包单一渠道的。如果想要一次性打包多渠道，可以参考网上的教程折腾一下。<br>以上内容均为本博主个人劳动创作，转载请注明出处，谢谢！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近因为公司与太保合作的一个项目，本身使用的是一个已有项目的源码直接修改进行开发的，当时那个已有项目是用Eclipse构建的，后来在集成太保推送SDK的时候，对方要求在不同的环境使用不同的ApplicationId,也就相当于Eclipse里的packageName，但是在
      
    
    </summary>
    
      <category term="Andriod" scheme="http://yoursite.com/categories/Andriod/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Andriod/Code/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Gradle" scheme="http://yoursite.com/tags/Gradle/"/>
    
      <category term="打包" scheme="http://yoursite.com/tags/%E6%89%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>Webview自定义缓存网页加载的图片资源</title>
    <link href="http://yoursite.com/2017/01/06/Webview%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%93%E5%AD%98%E7%BD%91%E9%A1%B5%E5%8A%A0%E8%BD%BD%E7%9A%84%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90/"/>
    <id>http://yoursite.com/2017/01/06/Webview自定义缓存网页加载的图片资源/</id>
    <published>2017-01-06T04:55:18.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>因为公司与客户公司合作越来越多，公司的手机应用项目类型也从纯原生应用变成了原生+Web混编的方式，使得项目周期大幅缩减，但随之而来的也产生了新的问题：网页载入速度缓慢的情况下如何提高用户体验度。因此就需要使用缓存机制。然而公司并不是要使用Webview本身自带的缓存机制，而是有针对性的进行缓存，比如只将图片缓存，再次载入页面就使用本地缓存的图片代替网页图片，以提高网页的载入速度。</p><p>基于以上需求，需要在webview初始化的时候重写WebViewClient的shouldInterceptRequest方法。<br>源码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.HONEYCOMB)</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> WebResourceResponse <span class="title">shouldInterceptRequest</span><span class="params">(WebView view, String url)</span> </span>&#123;</span><br><span class="line">            WebResourceResponse response = <span class="keyword">null</span>;</span><br><span class="line">            response = cacheImages(url);</span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> WebResourceResponse <span class="title">shouldInterceptRequest</span><span class="params">(WebView view, <span class="keyword">final</span> WebResourceRequest request)</span> </span>&#123;</span><br><span class="line">            Uri uri = request.getUrl();</span><br><span class="line">            WebResourceResponse response = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (uri != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">final</span> String url = uri.toString();</span><br><span class="line">                response = cacheImages(url);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果response为null,webview会自动获取网络图片</span></span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>因为在API21的时候谷歌废弃了<code>shouldInterceptRequest(WebView view, String url)</code>这个方法，因此在写的时候需要重写两个方法，并添加API的注解<code>@TargetApi(Build.VERSION_CODES.HONEYCOMB)</code>和<code>@TargetApi(Build.VERSION_CODES.LOLLIPOP)</code>对不同的API版本的系统进行区分。<br>而对应的在载入页面的时候所调用的方法也一起放在这里<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">saveImages</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            SaveImage saveImage = <span class="keyword">new</span> SaveImage();</span><br><span class="line">            saveImage.execute();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">cachedImageIsExist</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">            File file = <span class="keyword">new</span> File(path);</span><br><span class="line">            <span class="comment">// 判断文件存在且大小不能为0</span></span><br><span class="line">            <span class="keyword">if</span> (file.exists() &amp;&amp; file.length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> File <span class="title">getDirPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            File file = <span class="keyword">new</span> File(MConstants.CACHEPATH);</span><br><span class="line">            <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">                file.mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> file;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> WebResourceResponse <span class="title">cacheImages</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">            WebResourceResponse response = <span class="keyword">null</span>;</span><br><span class="line">            <span class="comment">// 如果本地没有则缓存到本地</span></span><br><span class="line">            <span class="keyword">if</span> (url.contains(<span class="string">"image.do"</span>)) &#123;</span><br><span class="line">                String imageName = url.substring(url.lastIndexOf(<span class="string">"/"</span>) + <span class="number">1</span>, url.length()) + <span class="string">".png"</span>;</span><br><span class="line">                <span class="keyword">if</span> (cachedImageIsExist(MConstants.CACHEPATH + imageName)) &#123;</span><br><span class="line">                    InputStream cachedImage = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        cachedImage = <span class="keyword">new</span> FileInputStream(MConstants.CACHEPATH + imageName);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                        KLog.e(e.getMessage());</span><br><span class="line">                    &#125;</span><br><span class="line">                    response = <span class="keyword">new</span> WebResourceResponse(<span class="string">"image/png"</span>, <span class="string">"UTF-8"</span>, cachedImage);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    imageUrls.add(url);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> response;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/***</span></span><br><span class="line"><span class="comment">         * 功能：用线程保存图片</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@author</span> wangyp</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">SaveImage</span> <span class="keyword">extends</span> <span class="title">AsyncTask</span>&lt;<span class="title">String</span>, <span class="title">Void</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> String <span class="title">doInBackground</span><span class="params">(String... params)</span> </span>&#123;</span><br><span class="line">                String result = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    File file = getDirPath();</span><br><span class="line">                    <span class="comment">// 从最后一个"/"截取到最末尾,并加上 ".png"后缀</span></span><br><span class="line">                    <span class="keyword">for</span> (String imgUrl : imageUrls) &#123;</span><br><span class="line">                        String ext = imgUrl.substring(imgUrl.lastIndexOf(<span class="string">"/"</span>) + <span class="number">1</span>, imgUrl.length()) + <span class="string">".png"</span>;</span><br><span class="line">                        file = <span class="keyword">new</span> File(MConstants.CACHEPATH + ext);</span><br><span class="line">                        URL url = <span class="keyword">new</span> URL(imgUrl);</span><br><span class="line">                        HttpURLConnection conn = (HttpURLConnection) url.openConnection();</span><br><span class="line">                        KLog.e(conn.getHeaderField(<span class="string">"Content-Length"</span>));</span><br><span class="line">                        <span class="keyword">if</span> (!file.exists() || !conn.getHeaderField(<span class="string">"Content-Length"</span>).equals(String.valueOf(file.length()))) &#123;</span><br><span class="line">                            <span class="comment">// 文件不存在或大小不一致则下载图片</span></span><br><span class="line">                            InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">                            conn.setRequestMethod(<span class="string">"GET"</span>);</span><br><span class="line">                            conn.setConnectTimeout(<span class="number">20000</span>);</span><br><span class="line">                            <span class="keyword">if</span> (conn.getResponseCode() == <span class="number">200</span>) &#123;</span><br><span class="line">                                inputStream = conn.getInputStream();</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4096</span>];</span><br><span class="line">                            <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">                            FileOutputStream outStream = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">                            <span class="keyword">while</span> ((len = inputStream.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                                outStream.write(buffer, <span class="number">0</span>, len);</span><br><span class="line">                            &#125;</span><br><span class="line">                            outStream.close();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    result = <span class="string">"图片已保存至："</span> + file.getAbsolutePath();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    result = <span class="string">"保存失败！"</span> + e.getLocalizedMessage();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPostExecute</span><span class="params">(String result)</span> </span>&#123;</span><br><span class="line">                KLog.e(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>从上面的代码可以看出来，我们是用“image.do”这个Url中存在的字符串进行区分是否需要缓存。当包含了“image.do”的时候则进行缓存的判断，本地存在同名的png图片文件，则替换页面需要载入的网络资源为本地已缓存图片，如果不存在，则将url添加到需要缓存的图片的地址列表里。最后在<code>onPageFinished</code>方法中启动异步线程任务下载图片。而在下载的时候对文件是否已存在进行判断，如果存在则跳过，如果不存在则下载，这样就可以节省一些流量，当然了，文件是否损坏的判断方式，我采用的是直接判断文件的大小，这个大小需要网页端将文件大小存放在http头部信息中的“Content-Length”字段里面。<br>这仅仅是一个简单的思路和方法，有问题的话欢迎留言告诉我。<br><strong>==转载请注明原文出处，谢谢。==</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为公司与客户公司合作越来越多，公司的手机应用项目类型也从纯原生应用变成了原生+Web混编的方式，使得项目周期大幅缩减，但随之而来的也产生了新的问题：网页载入速度缓慢的情况下如何提高用户体验度。因此就需要使用缓存机制。然而公司并不是要使用Webview本身自带的缓存机制，而
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Android/Code/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Webview" scheme="http://yoursite.com/tags/Webview/"/>
    
      <category term="缓存" scheme="http://yoursite.com/tags/%E7%BC%93%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>【转】自定义百度网盘分享密码（Javascript）</title>
    <link href="http://yoursite.com/2016/08/23/%E3%80%90%E8%BD%AC%E3%80%91%E8%87%AA%E5%AE%9A%E4%B9%89%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E5%88%86%E4%BA%AB%E5%AF%86%E7%A0%81%EF%BC%88Javascript%EF%BC%89/"/>
    <id>http://yoursite.com/2016/08/23/【转】自定义百度网盘分享密码（Javascript）/</id>
    <published>2016-08-23T06:38:05.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载自Giuem：<a href="https://www.giuem.com/baidu-pan-customize-share-password-by-javascript/" target="_blank" rel="noopener">自定义百度网盘分享密码（Javascript）</a></p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>分析代码发现，百度网盘的自定义密码是在本地生成的<br>makePrivatePassword函数<br>makePrivatePassword函数的使用<br>这也就给了我们玩耍的机会。</p><h1 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h1><p><a href="http://www.82cat.com/2016/02/17/275/" target="_blank" rel="noopener">不二</a> 和 <a href="http://www.82cat.com/2016/02/17/275/" target="_blank" rel="noopener">LiesAuer</a> 他们都是采用构造请求的方法，我觉得不够 hacker，而且不太方便。<br>所以我决定采用 JS 的方式修改密码。<br>方法很简单：修改 makePrivatePassword 这一函数即可。</p><h1 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h1><p>说明：代码可以转载，但请不要说是你原创之类的话！！！<br>压缩版<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:<span class="built_in">require</span>([<span class="string">"function-widget-1:share/util/service/createLinkShare.js"</span>]).prototype.makePrivatePassword=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> prompt(<span class="string">"请输入自定义的密码"</span>,<span class="string">"1234"</span>)&#125;</span><br></pre></td></tr></table></figure></p><p>原版<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>([<span class="string">"function-widget-1:share/util/service/createLinkShare.js"</span>]).prototype.makePrivatePassword = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> prompt(<span class="string">"请输入自定义的密码"</span>, <span class="string">"1234"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>别急，你可别复制走代码就用了，一不小心就会出现这样的错误：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught Error: Cannot find module `<span class="keyword">function</span>-widget-1:share/util/service/createLinkShare.js`(…)</span><br></pre></td></tr></table></figure></p><p>首先，选择要分享的文件，点击分享按钮。<br>这时候，按 F12 打开控制台，切换至 Console ，输入代码按回车即可。当然，你也可以存为书签，点一下书签。<br>然后点击创建私密链接，会弹出输入框，输入密码即可！<br>注意使用代码前要先点一下 分享 按钮，相关模块才会载入，这时候用代码才有效果。<br><img src="https://dn-giuem.qbox.me/bdpanpawdemo.gif" alt=""></p><h1 id="密码类型"><a href="#密码类型" class="headerlink" title="密码类型"></a>密码类型</h1><p>必须是 4 个字符。<br>如：</p><ul><li>abcd</li><li>1234</li><li>ab12</li><li>啊a （中文相当于两个字符）<br>其他类型请各位自己探索，可在下方给我留言。<br><em>PS:好像如果密码有中文，第一次访问时会提示错误，刷新一下才正常。</em></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;转载自Giuem：&lt;a href=&quot;https://www.giuem.com/baidu-pan-customize-share-password-by-javascript/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;自定义百度网盘分享密码（Jav
      
    
    </summary>
    
      <category term="Share" scheme="http://yoursite.com/categories/Share/"/>
    
      <category term="玩儿" scheme="http://yoursite.com/categories/Share/%E7%8E%A9%E5%84%BF/"/>
    
    
      <category term="Baiduyunpan" scheme="http://yoursite.com/tags/Baiduyunpan/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Android的Activity劫持提示功能</title>
    <link href="http://yoursite.com/2016/06/29/Android%E7%9A%84Activity%E5%8A%AB%E6%8C%81%E6%8F%90%E7%A4%BA%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2016/06/29/Android的Activity劫持提示功能/</id>
    <published>2016-06-28T16:55:18.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天被要求写一个关于Android Activity被劫持的检测以及提示功能，这个其实还是蛮简单的。<br>可能有人还不了解这个Activity劫持是什么意思，其实在Android系统当中，程序可以枚举当前运行的进程而不需要声明其他权限，我们可以写一个程序来实现，启动一个后台的服务，这个服务不断的扫描当前运行的进程，当发现目标进程启动时，就启动一个伪装的Activity。如果这个Activity是登录界面，那么就能获取到用户的账号和密码。<br>因此在用户使用App的时候如果被恶意跳转到别的界面，这个时候我们需要作出预警提示用户，告诉用户当前的界面已经不是我们的App了，具有潜在的风险。代码的工作原理很简单，就是在我们所写的Activity对象的onStop()方法中进行判断将要跳转的界面是否是安全的。</p><h2 id="正篇"><a href="#正篇" class="headerlink" title="正篇"></a>正篇</h2><p>下面插入所用到的检测方法的工具类的源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.tp.claim.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.ActivityManager;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.ApplicationInfo;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AntiHijackingUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"AntiHijackingUtil"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 白名单列表</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;String&gt; safePackages;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">safePackages = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">configSafePackages</span><span class="params">(List&lt;String&gt; packages)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> PackageManager pm;</span><br><span class="line"><span class="keyword">private</span> List&lt;ApplicationInfo&gt; mlistAppInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 检测当前Activity是否安全</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">checkActivity</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">boolean</span> safe = <span class="keyword">false</span>;</span><br><span class="line">pm = context.getPackageManager();</span><br><span class="line"><span class="comment">// 查询所有已经安装的应用程序</span></span><br><span class="line">List&lt;ApplicationInfo&gt; listAppcations = pm.getInstalledApplications(PackageManager.GET_UNINSTALLED_PACKAGES);</span><br><span class="line">Collections.sort(listAppcations, <span class="keyword">new</span> ApplicationInfo.DisplayNameComparator(pm));<span class="comment">// 排序</span></span><br><span class="line">List&lt;ApplicationInfo&gt; appInfos = <span class="keyword">new</span> ArrayList&lt;ApplicationInfo&gt;(); <span class="comment">// 保存过滤查到的AppInfo</span></span><br><span class="line"><span class="comment">//appInfos.clear();</span></span><br><span class="line"><span class="keyword">for</span> (ApplicationInfo app : listAppcations) &#123;<span class="comment">//这个排序必须有.</span></span><br><span class="line"><span class="keyword">if</span> ((app.flags &amp; ApplicationInfo.FLAG_SYSTEM) != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">//appInfos.add(getAppInfo(app));</span></span><br><span class="line">safePackages.add(app.packageName);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//得到所有的系统程序包名放进白名单里面.</span></span><br><span class="line"></span><br><span class="line">ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);</span><br><span class="line">String runningActivityPackageName;</span><br><span class="line"><span class="keyword">int</span> sdkVersion;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">sdkVersion = Integer.valueOf(android.os.Build.VERSION.SDK);</span><br><span class="line">&#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">sdkVersion = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (sdkVersion &gt;= <span class="number">21</span>) &#123;<span class="comment">//获取系统api版本号,如果是5x系统就用这个方法获取当前运行的包名</span></span><br><span class="line">runningActivityPackageName = getCurrentPkgName(context);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">runningActivityPackageName = activityManager.getRunningTasks(<span class="number">1</span>).get(<span class="number">0</span>).topActivity.getPackageName();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果是4x及以下,用这个方法.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (runningActivityPackageName != <span class="keyword">null</span>) &#123;<span class="comment">//有些情况下在5x的手机中可能获取不到当前运行的包名，所以要非空判断。</span></span><br><span class="line"><span class="keyword">if</span> (runningActivityPackageName.equals(context.getPackageName())) &#123;</span><br><span class="line">safe = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 白名单比对</span></span><br><span class="line"><span class="keyword">for</span> (String safePack : safePackages) &#123;</span><br><span class="line"><span class="keyword">if</span> (safePack.equals(runningActivityPackageName)) &#123;</span><br><span class="line">safe = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> safe;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCurrentPkgName</span><span class="params">(Context context)</span> </span>&#123;<span class="comment">//5x系统以后利用反射获取当前栈顶activity的包名.</span></span><br><span class="line">ActivityManager.RunningAppProcessInfo currentInfo = <span class="keyword">null</span>;</span><br><span class="line">Field field = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">int</span> START_TASK_TO_FRONT = <span class="number">2</span>;</span><br><span class="line">String pkgName = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">field = ActivityManager.RunningAppProcessInfo.class.getDeclaredField(<span class="string">"processState"</span>);<span class="comment">//通过反射获取进程状态字段.</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);</span><br><span class="line">List appList = am.getRunningAppProcesses();</span><br><span class="line">ActivityManager.RunningAppProcessInfo app;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; appList.size(); i++) &#123;</span><br><span class="line"><span class="comment">//ActivityManager.RunningAppProcessInfo app : appList</span></span><br><span class="line">app = (ActivityManager.RunningAppProcessInfo) appList.get(i);</span><br><span class="line"><span class="keyword">if</span> (app.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND) &#123;<span class="comment">//表示前台运行进程.</span></span><br><span class="line">Integer state = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">state = field.getInt(app);<span class="comment">//反射调用字段值的方法,获取该进程的状态.</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (state != <span class="keyword">null</span> &amp;&amp; state == START_TASK_TO_FRONT) &#123;<span class="comment">//根据这个判断条件从前台中获取当前切换的进程对象.</span></span><br><span class="line">currentInfo = app;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (currentInfo != <span class="keyword">null</span>) &#123;</span><br><span class="line">pkgName = currentInfo.processName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pkgName;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="这里有几个注意事项："><a href="#这里有几个注意事项：" class="headerlink" title="这里有几个注意事项："></a>这里有几个注意事项：</h2><ul><li>1.导包的时候注意不要导错：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br></pre></td></tr></table></figure><ul><li>2.用法很简单，只需要在需要使用检测方法的Activity的onStop()方法中调用工具类的checkActivity()方法，接收返回的boolean值进行判断即可，下面是一个简单示例：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onStop();</span><br><span class="line">    <span class="keyword">boolean</span> safe = AntiHijackingUtil.checkActivity(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (safe)&#123;</span><br><span class="line">        ToastUtils.TextToast(<span class="keyword">this</span>, <span class="string">"安全"</span>, Toast.LENGTH_LONG);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ToastUtils.TextToast(<span class="keyword">this</span>, <span class="string">"不安全"</span>, Toast.LENGTH_LONG);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>3.在使用这个工具类的时候，调用了packageManager的getRunningTask()方法，因此需要在清单文件AndroidManifest.xml中声明GET_TASK权限：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.GET_TASKS"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>4.当你需要调用一个第三方的应用，就需要把这个应用的报名加入白名单，也就是safePakcages这个静态变量中去。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;今天被要求写一个关于Android Activity被劫持的检测以及提示功能，这个其实还是蛮简单的。&lt;br&gt;可能有人还不了解这个Activi
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Android/Code/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Activity" scheme="http://yoursite.com/tags/Activity/"/>
    
      <category term="劫持" scheme="http://yoursite.com/tags/%E5%8A%AB%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>ButterKnife8的使用方式</title>
    <link href="http://yoursite.com/2016/04/29/ButterKnife8%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2016/04/29/ButterKnife8的使用方式/</id>
    <published>2016-04-28T16:21:29.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做一个普适性的应用外壳，基本上就是Loading页，登录页，主页几个简单的页面，主页集成了ToolBar和DrawerLayout，以及一个FloatingButton。绑定UI的时候使用的是ButterKnife 8.0.1，不过ButterKnife现在需要在配置文件中添加一些插件和依赖。具体内容如下：<br>Project的build.gradle文件中增加classpath内容：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">repositories &#123;</span><br><span class="line">jcenter()</span><br><span class="line">&#125;</span><br><span class="line">dependencies &#123;</span><br><span class="line">classpath <span class="string">'com.android.tools.build:gradle:2.1.0'</span></span><br><span class="line">classpath <span class="string">'com.neenbedankt.gradle.plugins:android-apt:1.8'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">allprojects &#123;</span><br><span class="line">repositories &#123;</span><br><span class="line">jcenter()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">task clean(<span class="string">type:</span> Delete) &#123;</span><br><span class="line">delete rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的<code>classpath &#39;com.neenbedankt.gradle.plugins:android-apt:1.8&#39;</code>就是需要添加的环境变量<br>在Module的build.gradle文件中增加plugin<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">'com.neenbedankt.android-apt'</span></span><br></pre></td></tr></table></figure></p><p>在Dependencies中增加下面两条<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.jakewharton:butterknife:8.0.1'</span></span><br><span class="line">apt <span class="string">'com.jakewharton:butterknife-compiler:8.0.1'</span></span><br></pre></td></tr></table></figure></p><p>这样就可以正常使用ButterKnife 8.0.1了，如果搭配上android-butterknife-zelezny这个插件的话就更犀利了。具体如何爽，自己去体会吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在做一个普适性的应用外壳，基本上就是Loading页，登录页，主页几个简单的页面，主页集成了ToolBar和DrawerLayout，以及一个FloatingButton。绑定UI的时候使用的是ButterKnife 8.0.1，不过ButterKnife现在需要在配置
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Android/Code/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Butterknife" scheme="http://yoursite.com/tags/Butterknife/"/>
    
  </entry>
  
  <entry>
    <title>【转载】在Android 6.0 设备上动态获取权限</title>
    <link href="http://yoursite.com/2016/02/22/%E5%9C%A8Android-6-0-%E8%AE%BE%E5%A4%87%E4%B8%8A%E5%8A%A8%E6%80%81%E8%8E%B7%E5%8F%96%E6%9D%83%E9%99%90/"/>
    <id>http://yoursite.com/2016/02/22/在Android-6-0-设备上动态获取权限/</id>
    <published>2016-02-22T06:07:52.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本文转载自<a href="http://gudong.name/%E6%8A%80%E6%9C%AF/2015/11/10/android_m_permission.html" target="_blank" rel="noopener">在Android 6.0 设备上动态获取权限</a></strong></p><p>众所周知，Android 6.0 相比之前的Android版本有一个很大的不同点，就是动态获取权限。今天自己在做拨号功能时，正巧遇到这个问题， 顺手记录下在Android 6.0 上如何动态获取权限。<br>下面从自己一开始的问题入手</p><p>###实现拨号功能</p><p>说到拨号，一个 Intent 就搞定，代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">callDirectly</span><span class="params">(String mobile)</span></span>&#123;</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.setAction(<span class="string">"android.intent.action.CALL"</span>);</span><br><span class="line">intent.setData(Uri.parse(<span class="string">"tel:"</span> + mobile));</span><br><span class="line">mContext.startActivity(intent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然 你可别忘了在 Manifest 文件中去声明拨号的权限</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.CALL\_PHONE"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>###问题</p><p>如果在 Android 6.0 以前的设备上，上面的代码都是没有问题的，但是如果是在 Android 6.0 设备上，并且项目的 targetSdkVersion 你设置的是23，那么 当你执行上面的拨号代码时，程序将会奔溃掉。</p><p>此时你肯定想到了 如果 targetSdkVersion 值设置的小于23是不是就不会奔溃了，恩，确实如此， 此时即使使用Android6.0的设备，程序也不会奔溃，原因显而易见，Android 的权限机制是 Android M 后才加入的。从 Android M 开始 应用程序申请的权限是在运行时动态赋给用户的。<br>关于动态分配权限，一些同学可能不是很清楚。这里稍稍提一下 Android 6.0 的权限动态分配。 如果你只对最终的解决方案感兴趣，可以跳过下面这节，直接去看解决方案</p><p>###权限动态分配###</p><p>在 Android6.0 之前，下载好一个应用程序，点击安装我们看到的大都是像这样的界面。<br><img src="http://gudong.name/assets/android_m_install.jpg" alt=""><br>上图分别是Nexus6和小米手机在安装软件时的界面。</p><p>在安装时你会发现，手机操作系统会提示，这个软件会索要了你手机的那些权限，并且给用一个列表进行展示，但是这些提示只是在安装是提示，只要你点击接受或者安装， 表示你允许这个应用在可以获取它申明的所有权限。一般很少有人在安装时，会因为看到某个应用因为申请了某一个敏感权限而放弃安装应用。因为这个权限虽然敏感， 但是对于当前的用户是不可感知的，因为他现在并没有立即去查看你的最近通话、短信记录…</p><p>说到这里，我们自然而然的会想到，其实最好的方式是，当这个应用在用户使用过程中，正准备使用某个权限时，比如说读取短信列表，系统能及时的弹出一个提示框，说这个应用要读取您的短信内容， 您是否允许。然后用户结合当前应用的执行动作，依据当前条件判断，是不是应该授予应用读取短信记录的权限。这绝对的最完美的。 因为在具体的使用过程中，用户可以结合当前应用的使用场景，去思考、判断是不是应该给这个应用相应的权限。不给能怎样，给了会怎样， 这样对用户而言，完全是主动的，相比安装时那种选择，这样的做法无疑是对用户莫大的尊重，同时这也保证了用户的个人隐私。</p><p>说到这里，不得不插一句，其实 MIUI 早就实现了这个系统特性，在这一点上 MIUI 确实走到了 Android团队的前面，恩，给 MIUI 点个赞。</p><p>然而直到 Android 6.0 这个版本开始，上面的假设终于得到了谷歌的实践，除了在应用安装时，操作系统会提示应用会获取那些权限，在运行过程中，当应用去真的获取一些敏感 权限时，系统还会弹出一个提示框，询问用户是不是授予应用相应的权限。如下图所示。<br><img src="http://gudong.name/assets/android_m_sms.jpeg" alt=""><br>这就是 Android 6.0 的运行时权限检查机制。下面是Google官方对此的解释，只截取介绍部分</p><p><code>Beginning in Android 6.0 (API level 23), users grant permissions to apps while the app is running, not when they install the app. This approach streamlines the app install process, since the user does not need to grant permissions when they install or update the app. It also gives the user more control over the app&#39;s functionality; for example, a user could choose to give a camera app access to the camera but not to the device location. The user can revoke the permissions at any time, by going to the app&#39;s Settings screen.</code><br>###解决方案###</p><p>其实上面已经说了一种取巧的方案，将 targetSdkVersion 设为小于23的值，程序将不会奔溃， 但是在Android 6.0 上你的应用程序依旧拨不了电话，这是真的。所以要想兼容6.0版本，必须通过下面的方式进行代码层面的兼容。</p><p>对Android版本做判断，然后对Android 6.0 做特殊处理，代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> REQUEST\_CODE\_ASK\_CALL\_PHONE = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCall</span><span class="params">(String mobile)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.mMobile = mobile;</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">23</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> checkCallPhonePermission = ContextCompat.checkSelfPermission(mContext,Manifest.permission.CALL_PHONE);</span><br><span class="line">        <span class="keyword">if</span>(checkCallPhonePermission != PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">            ActivityCompat.requestPermissions(mContext,<span class="keyword">new</span> String[]&#123;Manifest.permission.CALL_PHONE&#125;,REQUEST_CODE_ASK_CALL_PHONE);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//上面已经写好的拨号方法</span></span><br><span class="line">            callDirectly(mobile);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//上面已经写好的拨号方法</span></span><br><span class="line">        callDirectly(mobile);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，如果一个Android6.0的用户触发拨号动作，执行上面的代码，那么他将会看到一个很好看的MaterialDialog，如下图所示。<br><img src="http://gudong.name/assets/android_m_permission.jpeg" alt=""><br>那么用户点击拒绝或者允许，我们怎么才能拿到回调呢，如果能拿到回调，我们就可以根据用户的选择来执行不同的操作了。</p><p>这里应该会看到在 ActivityCompat 的 requestPermissions 方法中，最后一个参数是一个requestCode，看到它自然而然想到了经常用到的onActivityResult， 这里当执行 ActivityCompat 的 requestPermissions 方法后有一个回调机制，需要我们在当前 Activity 中实现 onRequestPermissionsResult 这个方法，具体如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, String[] permissions, <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> REQUEST_CODE_ASK_CALL_PHONE:</span><br><span class="line">            <span class="keyword">if</span> (grantResults[<span class="number">0</span>] == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                <span class="comment">// Permission Granted</span></span><br><span class="line">                callDirectly(mobile);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// Permission Denied</span></span><br><span class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"CALL_PHONE Denied"</span>, Toast.LENGTH_SHORT)</span><br><span class="line">                        .show();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里会对提供了一个对用户点击做判断的入口，开发者可以根据 grantResults[0] 的类型，来判断用户点击的是允许还是拒绝，接着就可以执行相应的逻辑了。</p><h3 id="有用的链接"><a href="#有用的链接" class="headerlink" title="有用的链接"></a>有用的链接</h3><p>关于AndroidM上权限的动态获取，这里只给出了一个最简单的示例，如果你还没有尽兴，那么下面这篇国外的博文，一定会让你满足。</p><p><a href="http://inthecheesefactory.com/blog/things-you-need-to-know-about-android-m-permission-developer-edition/en" target="_blank" rel="noopener">Everything every Android Developer must know about new Android’s Runtime Permission</a></p><p>这篇英文博文内容很长、内容也比较多，十足的干货。您慢用~</p><p>后记：偶然发现已经有哥们把上面的这篇文章做了翻译，真是极好的，附上翻译链接，给翻译者同学点赞，辛苦！</p><p>另外，最近看到一个Github上的开源项目 <a href="https://github.com/k0shk0sh/PermissionHelper" target="_blank" rel="noopener">PermissionHelper</a> ，专门用于处理 Android 6.0 的权限兼容问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;本文转载自&lt;a href=&quot;http://gudong.name/%E6%8A%80%E6%9C%AF/2015/11/10/android_m_permission.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;在Android
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Android/Code/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Permission" scheme="http://yoursite.com/tags/Permission/"/>
    
  </entry>
  
  <entry>
    <title>iOS及Mac开源项目和学习资料【超级全面】</title>
    <link href="http://yoursite.com/2016/01/24/iOS%E5%8F%8AMac%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%92%8C%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E3%80%90%E8%B6%85%E7%BA%A7%E5%85%A8%E9%9D%A2%E3%80%91/"/>
    <id>http://yoursite.com/2016/01/24/iOS及Mac开源项目和学习资料【超级全面】/</id>
    <published>2016-01-24T03:53:27.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>本文转载自：<a href="http://codecloud.net/ios-mac-study-5155.html" target="_blank" rel="noopener">iOS及Mac开源项目和学习资料【超级全面】</a></em></p><h1 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h1><h2 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h2><ul><li><a href="https://github.com/enormego/EGOTableViewPullRefresh" target="_blank" rel="noopener">EGOTableViewPullRefresh</a> – 最早的下拉刷新控件。</li><li><a href="https://github.com/samvermette/SVPullToRefresh" target="_blank" rel="noopener">SVPullToRefresh</a> – 下拉刷新控件。</li><li><a href="https://github.com/CoderMJLee/MJRefresh" target="_blank" rel="noopener">MJRefresh</a> – 仅需一行代码就可以为UITableView或者CollectionView加上下拉刷新或者上拉刷新功能。可以自定义上下拉刷新的文字说明。具体使用看“使用方法”。 （国人写）</li><li><a href="https://github.com/xhzengAIB/XHRefreshControl" target="_blank" rel="noopener">XHRefreshControl</a> – XHRefreshControl 是一款高扩展性、低耦合度的下拉刷新、上提加载更多的组件。（国人写）</li><li><a href="https://github.com/coolbeet/CBStoreHouseRefreshControl" target="_blank" rel="noopener">CBStoreHouseRefreshControl</a> – 一个效果很酷炫的下拉刷新控件。</li><li><a href="https://github.com/dasdom/BreakOutToRefresh" target="_blank" rel="noopener">BreakOutToRefresh</a> – 一个下拉刷新打砖块的开源 Swift 库，能让用户在等待下拉刷新的时候边玩撞球游戏边等待。</li><li><a href="https://github.com/KittenYang/KYJellyPullToRefresh" target="_blank" rel="noopener">KYJellyPullToRefresh</a> – 实现弹性物理效果的下拉刷新，神奇的贝塞尔曲线，配合UIDynamic写的一个拟物的下拉刷新动画。</li><li><a href="https://github.com/michaelhenry/MHYahooParallaxView" target="_blank" rel="noopener">MHYahooParallaxView</a> – 类似于Yahoo Weather和News Digest首屏的视差滚动。</li><li><a href="https://github.com/gsdios/SDRefreshView" target="_blank" rel="noopener">SDRefreshView</a> – 简单易用的上拉和下拉刷新（多版本细节适配）。</li><li><a href="https://github.com/MakeZL/ZLSwiftRefresh" target="_blank" rel="noopener">ZLSwiftRefresh</a> – swift下拉刷新/上拉加载更多，支持自定义动画，集成简单，兼容UITableView/CollectionView/ScrollView/WebView。</li><li><a href="https://github.com/dasdom/BreakOutToRefresh" target="_blank" rel="noopener">BreakOutToRefresh</a> – swift，上拉和下拉刷新。</li><li><a href="https://github.com/andreamazz/GearRefreshControl" target="_blank" rel="noopener">GearRefreshControl</a> – swift，上拉和下拉刷新。</li><li><a href="https://github.com/jcavar/refresher" target="_blank" rel="noopener">refresher</a> – swift，上拉和下拉刷新。</li><li><a href="http://d.cocoachina.com/code/detail/237753" target="_blank" rel="noopener">可展开/收缩的下拉菜单–SvpplyTable</a> – 一个可展开可收缩的下拉菜单，类似Svpply app。</li><li><a href="https://github.com/Sephiroth87/ODRefreshControl" target="_blank" rel="noopener">ODRefreshControl</a> – 原iOS6上的橡皮糖刷新样式，很有意思。现在也很多大的 App 在用，比如虾米音乐和 QQ 客户端。</li><li><a href="https://github.com/Yalantis/PullToMakeSoup" target="_blank" rel="noopener">PullToMakeSoup</a> – PullToMakeSoup, 自定义下拉刷新的动画效果：煮饭, Yalantis新作！</li><li><a href="https://github.com/cyndibaby905/TwitterCover" target="_blank" rel="noopener">TwitterCover</a> – Twitter iOS客户端的下拉封面模糊效果。</li><li><a href="https://github.com/MartinRGB/Replace-iOS" target="_blank" rel="noopener">Replace-iOS</a> – Replace-iOS 让人眼前一亮的下拉刷新（iOS）。</li><li><a href="https://github.com/KittenYang/Animations" target="_blank" rel="noopener">Animations</a> – 封装了一下，使用的时候只要两行代码。一些动画的飞机稿，都是一些单独分离出来的用于测试的子动画，现在统一归类一下。</li></ul><h2 id="模糊效果"><a href="#模糊效果" class="headerlink" title="模糊效果"></a>模糊效果</h2><ul><li><a href="https://github.com/nicklockwood/FXBlurView" target="_blank" rel="noopener">FXBlurView</a> -be 支持iOS5.0以上版本，支持静态、动态模糊效果，继承与UIView的模糊特效。</li><li><a href="https://github.com/onevcat/VVBlurPresentation" target="_blank" rel="noopener">VVBlurPresentation</a> -很简单易用的在原来viewconntroller基础上做模糊，然后present新的viewcontroller的。</li><li><a href="https://github.com/pchernovolenko/UICustomActionSheet" target="_blank" rel="noopener">UICustomActionSheet</a> – 通过模糊背景来着重强调与菜单相关的元素–对话框 里面已经收藏。</li><li><a href="https://github.com/szk-atmosphere/SABlurImageView" target="_blank" rel="noopener">SABlurImageView</a> – 支持渐变动画效果的图像模糊化类库。P.S. 与前几天推存类库 SAHistoryNavigationViewController 是同一位作者。</li></ul><h2 id="AutoLayout"><a href="#AutoLayout" class="headerlink" title="AutoLayout"></a>AutoLayout</h2><ul><li><a href="https://github.com/Masonry/Masonry" target="_blank" rel="noopener">Masonry</a> – Masonry是一个轻量级的布局框架，拥有自己的描述语法，采用更优雅的链式语法封装自动布局，简洁明了并具有高可读性（ <a href="http://adad184.com/2014/09/28/use-masonry-to-quick-solve-autolayout/" target="_blank" rel="noopener">使用介绍1</a> <a href="http://ios.jobbole.com/81483/" target="_blank" rel="noopener">使用介绍2</a>），<a href="http://www.cocoachina.com/ios/20150702/12217.html" target="_blank" rel="noopener">iOS自适应前段库-Masonry的使用</a>），<a href="http://www.jianshu.com/p/2ed5f7444900" target="_blank" rel="noopener">Masonry、Classy、ClassyLiveLayout介绍</a>。<a href="https://github.com/lcddhr/DDMasonryTest" target="_blank" rel="noopener">使用DEMO</a> 视图居中显示、子视图含边距、视图等距离摆放、计算ScrollView的contentsize。</li><li><a href="https://github.com/cloudkite/Classy/" target="_blank" rel="noopener">Classy</a> – Classy是一个能与UIKit无缝结合stylesheet(样式)系统。它借鉴CSS的思想，但引入新的语法和命名规则，<a href="http://classy.as/getting-started/" target="_blank" rel="noopener">Classy官网</a>，<a href="http://www.jianshu.com/p/2ed5f7444900" target="_blank" rel="noopener">Masonry、Classy、ClassyLiveLayout介绍</a>。</li><li><a href="https://github.com/olegam/ClassyLiveLayout" target="_blank" rel="noopener">ClassyLiveLayout</a> – ClassyLiveLayout通过结合Classy stylesheets与Masonry一起使用，能够在运行的模拟器中微调Auto Layout约束实时显示效果的工具，<a href="http://www.jianshu.com/p/2ed5f7444900" target="_blank" rel="noopener">Masonry、Classy、ClassyLiveLayout介绍</a>。</li><li><a href="https://github.com/Masonry/Snap" target="_blank" rel="noopener">Snap</a> – Snap是Masonry Auto Layout DSL的Swift版本，是一款轻量级的布局框架，使用了更良好的语法封装了AutoLayout。Snap支持iOS和OS X。</li><li><a href="https://github.com/smileyborg/PureLayout" target="_blank" rel="noopener">PureLayout</a> –</li><li><a href="https://github.com/smileyborg/UIView-AutoLayout" target="_blank" rel="noopener">UIView-AutoLayout</a> – Deprecated in favor of PureLayout, which includes OS X support:<a href="https://github.com/smileyborg/PureLayout%E3%80%82" target="_blank" rel="noopener">https://github.com/smileyborg/PureLayout。</a></li><li><a href="https://github.com/robb/Cartography" target="_blank" rel="noopener">Cartography</a> –</li><li><a href="https://github.com/philcn/Auto-Layout-Showcase" target="_blank" rel="noopener">Auto-Layout-Showcase</a> – swift,AutoLayout 进阶 Demo，宽高比约束、比例约束、不等约束、视差约束、低优先级约束等高级用法，无需写码即可进行复杂页面布局，Demo 还动态模拟了各屏幕下的效果。来自百度知道 iOS 小组的内部分享。</li></ul><h2 id="富文本"><a href="#富文本" class="headerlink" title="富文本"></a>富文本</h2><ul><li><a href="https://github.com/honcheng/RTLabel" target="_blank" rel="noopener">RTLabel</a> – 富文本。</li><li><a href="https://github.com/bingxue314159/RTLabel" target="_blank" rel="noopener">RTLabel</a> – 富文本，RTLabel支持64位。</li><li><a href="https://github.com/12207480/TYAttributedLabel" target="_blank" rel="noopener">TYAttributedLabel</a> – TYAttributedLabel。 简单易用的属性文本控件(无需了解CoreText)，支持富文本，图文混排显示，支持添加链接，image和UIView控件，支持自定义排版显示。</li><li><a href="https://github.com/TinyQ/TQRichTextView" target="_blank" rel="noopener">TQRichTextView</a> – 用于做富文本视图控件显示，用于即时通讯的表情显示，以及资源评论的富文本显示。</li><li><a href="https://github.com/mattt/TTTAttributedLabel" target="_blank" rel="noopener">TTTAttributedLabel</a> – 一个文字视图开源组件，是UILabel的替代元件，可以以简单的方式展现渲染的属性字符串。另外，还支持链接植入，不管是手动还是使用UIDataDetectorTypes自动把电话号码、事件、地址以及其他信息变成链接。<a href="http://blog.csdn.net/prevention/article/details/9998575" target="_blank" rel="noopener">用TTTAttributedLabel创建变化丰富的UILabel</a> – 网易新闻iOS版使用。</li><li><a href="https://github.com/molon/MLEmojiLabel" target="_blank" rel="noopener">MLEmojiLabel</a> – 自动识别网址、号码、邮箱、@、#话题#和表情的label。可以自定义自己的表情识别正则，和对应的表情图像。(默认是识别微信的表情符号)，继承自TTTAttributedLabel，所以可以像label一样使用。label的特性全都有，使用起来更友好更方便。</li><li><a href="https://github.com/nicklockwood/FXLabel" target="_blank" rel="noopener">FXLabel</a> – FXLabel是一个功能强大使用简单的类库，通过提供一个子类改进了标准的UILabel组件，为字体增加了阴影、内阴影和渐变色等，可以被用在任何标准的UILabel中。FXLabel还提供了更多控件，可以对字体行距、字体间距等进行调整。</li><li><a href="https://github.com/TigerWf/WFReader" target="_blank" rel="noopener">WFReader</a> – 一款简单的coretext阅读器，支持文本选择、高亮以及字体大小选择等。</li><li><a href="https://github.com/nigelgrange/WPAttributedMarkup" target="_blank" rel="noopener">WPAttributedMarkup</a> – WPAttributedMarkup is a simple utility category that can be used to easily create an attributed string from text with markup tags and a style dictionary。</li><li><a href="https://github.com/MoZhouqi/KMPlaceholderTextView" target="_blank" rel="noopener">KMPlaceholderTextView</a> – 可显示多行 placeholder 的 textView，可以在IB里面设置 — swift。</li><li><a href="https://github.com/mrchenhao/HHFlashSwitch" target="_blank" rel="noopener">HHFlashSwitch</a> – 一个另类的UISwitch，选择后，背景水波扩散变色效果。</li><li><a href="https://github.com/zhangyu9050/UUColorSwitch" target="_blank" rel="noopener">UUColorSwitch</a> – Switch 开关动画效果,当打开开关时，Switch可实现平滑渲染过渡到父视图的效果。</li><li><a href="https://github.com/zekunyan/UITextViewDIYEmojiExample" target="_blank" rel="noopener">UITextViewDIYEmojiExample</a> – <a href="http://tutuge.me/2015/03/07/UITextView%E7%BC%96%E8%BE%91%E6%97%B6%E6%8F%92%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A1%A8%E6%83%85-%E7%AE%80%E5%8D%95%E7%9A%84%E5%9B%BE%E6%96%87%E6%B7%B7%E7%BC%96/" target="_blank" rel="noopener">UITextView编辑时插入自定义表情-简单的图文混编</a>。</li><li><a href="https://github.com/facebook/Shimmer" target="_blank" rel="noopener">Shimmer</a> – BlingBling闪光效果，酷炫的Label的效果，可以用于加载等待提示。</li><li><a href="https://github.com/nnhubbard/ZSSRichTextEditor" target="_blank" rel="noopener">ZSSRichTextEditor</a> – 适用于iOS的富文本WYSIWYG编辑器，支持语法高亮和源码查看。ZSSRichTextEditor包含所有WYSIWYG标准的编辑器工具。</li><li><a href="https://github.com/cjwirth/RichEditorView" target="_blank" rel="noopener">RichEditorView</a> – swift，一套可定制富文本编辑器组件及示例。功能完整、代码简练、实现逻辑巧妙（编辑器核心与 WebView 结合，采用 HTML5 contentEditable 编辑模式，执行JS 配套命令 execCommand 实现富文本编辑功能）。</li><li><a href="https://github.com/Cocoanetics/DTCoreText" target="_blank" rel="noopener">DTCoreText</a> – 可以解析HTML与CSS最终用CoreText绘制出来，通常用于在一些需要显示富文本的场景下代替低性能的UIWebView。<a href="http://blog.cnbang.net/tech/2630/" target="_blank" rel="noopener">DTCoreText源码解析</a>。</li><li><a href="https://github.com/cloverstudio/CSGrowingTextView" target="_blank" rel="noopener">CSGrowingTextView</a> – 用作即时通讯文本框和评论文本框使用，可以显示多行输入。</li><li><a href="https://github.com/indragiek/MarkdownTextView" target="_blank" rel="noopener">MarkdownTextView</a> – 显示Markdown的TextView。</li><li><a href="http://d.cocoachina.com/code/detail/300299" target="_blank" rel="noopener">高仿微信限定行数文字内容</a> – 采用Autolayout高仿微信纯文字限定行数。</li><li><a href="https://github.com/lingochamp/FuriganaTextView" target="_blank" rel="noopener">FuriganaTextView</a> – 实现复杂的日文韩文排版。</li><li><a href="https://github.com/gmertk/ParkedTextField" target="_blank" rel="noopener">ParkedTextField</a> – 带固定文本的输入组件。</li><li><a href="https://github.com/lexrus/LTMorphingLabel" target="_blank" rel="noopener">LTMorphingLabel</a> – swift 能够实现文字变形动画效果的Label，用Swift写的一个能够实现文字变形动画效果的Label，很炫。</li><li><a href="https://github.com/zyprosoft/GJCFCoreText" target="_blank" rel="noopener">GJCFCoreText</a> – 图文混排。</li><li><a href="https://github.com/KyoheiG3/AttributedLabel" target="_blank" rel="noopener">AttributedLabel</a> – 显示性能数量级 UILabel 的 AttributedLabel。无畏无惧、挑战权威。</li><li><a href="https://github.com/liufan321/FFLabel" target="_blank" rel="noopener">FFLabel</a> – 自动检测 URLs, @username, #topic# 等关链词（提供响应扩展）。实用的标签文本小组件。</li></ul><h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><ul><li><a href="https://github.com/kevinzhow/PNChart" target="_blank" rel="noopener">PNChart</a> – 国内开源作者，动态的图表。</li><li><a href="https://github.com/zemirco/swift-linechart" target="_blank" rel="noopener">swift-linechart</a> – 功能完整、实用的折线图组件。使用方便，参数配置简单。是不可多得的优质组件–swift。</li><li><a href="https://github.com/danielgindi/ios-charts" target="_blank" rel="noopener">ios-charts</a> – 一款优秀 Android 图表开源库 MPAndroidChart 的 Swift 语言实现版（支持 Objective-C 和 Swift 调用）。缺省提供的示例代码为 Objective-C。</li><li><a href="https://github.com/xhacker/TEAChart" target="_blank" rel="noopener">TEAChart</a> – xhacker/TEAChart 一个简洁的 iOS 图表库，支持柱状图、饼图以及日历等。</li><li><a href="https://github.com/yasuoza/YOChartImageKit" target="_blank" rel="noopener">YOChartImageKit</a> – 支持在watchOS上绘制图表，看它最近更新挺勤快的，可以关注一下。</li><li><a href="https://github.com/kevinzhow/RealtimeGradientText" target="_blank" rel="noopener">RealtimeGradientText</a> – Fun With CALayer Mask 刚好今天开源了一个有趣的项目 RealtimeGradientText，所以也好聊一下 CALayer 的 Mask，<a href="http://blog.zhowkev.in/2015/07/06/fun-with-mask/" target="_blank" rel="noopener">说明</a>。</li></ul><h2 id="表相关"><a href="#表相关" class="headerlink" title="表相关"></a>表相关</h2><ul><li><a href="https://github.com/onevcat/SWTableViewCell" target="_blank" rel="noopener">SWTableViewCell</a> – 国内开源作者，带很多手势的表单元格。</li><li><a href="https://github.com/alikaragoz/MCSwipeTableViewCell" target="_blank" rel="noopener">MCSwipeTableViewCell</a> – 带很多手势的表单元格。</li><li><a href="https://github.com/1000Memories/TMQuiltView" target="_blank" rel="noopener">TMQuiltView</a> – 瀑布流。</li><li><a href="https://github.com/lengmolehongyan/WaterfallFlowDemo" target="_blank" rel="noopener">WaterfallFlowDemo</a> – 一个简单的UICollectionView瀑布流布局演示demo。</li><li><a href="https://github.com/xmartlabs/XLForm" target="_blank" rel="noopener">XLForm</a> – 很多表格类的table,写法更高冷一点，推荐使用。</li><li><a href="https://github.com/romaonthego/RETableViewManager" target="_blank" rel="noopener">RETableViewManager</a> – 可以十分方便地生成各种样式、各种功能的TableView。只要开发者能想到的列表效果或者功能，都可以利用这份代码迅速编写出来。比如，之前要实现一个填写各种资料的列表，可能需要很多代码，现在只需要几行代码就可以实现。</li><li><a href="https://github.com/TomThorpe/UIScrollSlidingPages" target="_blank" rel="noopener">UIScrollSlidingPages</a> – 允许添加多视图控件，并且可以横向滚动。有点类似于Groupon app。</li><li><a href="https://github.com/izyhuang/HBHorizontalTableView" target="_blank" rel="noopener">HBHorizontalTableView</a> – swift，TableView 横向滚动小示例（仿照 AppStore 应用展示）。</li><li><a href="https://github.com/mcelayir/HorizontalScrollCell" target="_blank" rel="noopener">HorizontalScrollCell</a> – HorizontalScrollCell是一款使用方便的水平方向可滚动的单元格，适用于UICollectionView中实现水片方向滚动视图。 。</li><li><a href="https://github.com/shiyuan17/SYJiugonggeTableView" target="_blank" rel="noopener">SYJiugonggeTableView</a> – tableView封装的九宫格。</li><li><a href="https://github.com/ZhipingYang/UUChatTableView" target="_blank" rel="noopener">UUChatTableView</a> – UUChatTableView 气泡聊天界面，支持文本、图片以及音频的气泡聊天界面。<a href="http://www.cocoachina.com/ios/20150205/11116.html" target="_blank" rel="noopener">源码推荐说明</a>。</li><li><a href="https://github.com/acani/Chats" target="_blank" rel="noopener">Chats</a> – 聊天 UI 示例程序。此项目应该只为演示或学习之用，没有服务器 — swift。</li><li><a href="https://github.com/layerhq/Atlas-iOS" target="_blank" rel="noopener">Atlas-iOS</a> – 快速在iOS里集成聊天功能，类似开源版本的环信。Layer家开源了一套聊天app界面的解决方案.看起来很赞，很多蛮复杂的东西直接都帮封好了。不得不说现在做app开发真是很简单，大部分时间搭积木就可以了。<a href="https://atlas.layer.com/" target="_blank" rel="noopener">官方网站</a>。</li><li><a href="https://github.com/agdsdl/DLSlideView" target="_blank" rel="noopener">DLSlideView</a> – DLSlideView对常见的顶部Tab页点击、滑动分页做了封装。它使用基于ViewController的container特性（而不是scrollview）来管理各个子页面，以支持无限分页，<a href="http://www.cocoachina.com/ios/20150205/11116.html" target="_blank" rel="noopener">源码推荐说明</a>。</li><li><a href="https://github.com/pozi119/VOVCManager" target="_blank" rel="noopener">VOVCManager</a> – 页面管理器:1.跳转指定页面,只需要知道viewController的Class名,如果有storyboard,则需要指定storyboard名；2.无需添加基类；3.支持URLScheme跳转指定页面。</li><li><a href="https://github.com/Moblox/MBXPageViewController" target="_blank" rel="noopener">MBXPageViewController</a> – 简洁快速的页面切换–MBXPageViewController，带有按钮控件的UIPageController，非常整洁、简单以及快速。该项目通过三种形式展示页面之间的切换，比如导航栏上的多个tab切换、页面左右两端箭头指示切换，以及使用分段控件。</li><li><a href="https://github.com/ming1016/PagerTab" target="_blank" rel="noopener">PagerTab</a> – UIScrollView实现滑动转换页面，类似网易云音乐iOS版的页面滑动切换效果。</li><li><a href="https://github.com/guilhermearaujo/GUITabPagerViewController" target="_blank" rel="noopener">GUITabPagerViewController</a> – 多个tab滑动切换。</li><li><a href="https://github.com/pozi119/VOMetroLayoutDemo" target="_blank" rel="noopener">VOMetroLayoutDemo</a> – Metro风格的UICollectionView, 目前只支持横向布局,仅在iPad上应用。</li><li><a href="https://github.com/KittenYang/KYCellAnimation" target="_blank" rel="noopener">KYCellAnimation</a> – 给UITableViewCell增加进入的动画。</li><li><a href="https://github.com/knutigro/COBezierTableView" target="_blank" rel="noopener">COBezierTableView</a> – swift，通过编辑 Bezier 曲线四点位置设置 TableView 内 Cell 及对应按扭位置。实验效果很赞。</li><li><p><a href="https://github.com/robbdimitrov/RDVTabBarController" target="_blank" rel="noopener">RDVTabBarController</a> – 一个TabBar组件，可以方便设置底部菜单的文字图片，点击效果，小红点提示等。</p></li><li><p><a href="https://github.com/DeveloperLx/LxTabBarController" target="_blank" rel="noopener">LxTabBarController</a> – 改变了原生tabbar切换tab时的生硬效果，并加入滑动切换手势（有和界面上的其它手势发生冲突的风险，可根据具体项目予以关闭），<a href="https://github.com/DeveloperLx/LxTabBarController-swift" target="_blank" rel="noopener">swift版本</a>。</p></li><li><p><a href="http://d.cocoachina.com/code/detail/298409" target="_blank" rel="noopener">横向展示文本内容的自定义cell</a> – 可以横向展示文本内容的自定义cell，根据文本无限滚动。</p></li><li><p><a href="https://github.com/forkingdog/UITableView-FDTemplateLayoutCell" target="_blank" rel="noopener">UITableView-FDTemplateLayoutCell</a> – UITableView-FDTemplateLayoutCell 是一个方便缓存 UITableViewCell 的高度的框架。</p></li><li><a href="https://github.com/jozsef-vesza/ExpandingStackCells" target="_blank" rel="noopener">ExpandingStackCells</a> – 采用 UIStackView 实现表格单元格扩展内容显示示例及解决方案。</li><li><a href="https://github.com/nghialv/Sapporo" target="_blank" rel="noopener">Sapporo</a> – swift 单元格模型驱动的集合视图管理器组件。又一个超实用的“轮子”。</li><li><a href="https://github.com/WeeTom/MDIHorizontalSectionTableViewController" target="_blank" rel="noopener">MDIHorizontalSectionTableViewController</a> – 根据产品需求开源了一个交互项目，可以理解为横向Section的TableView，section和cell同时支持拖拽，后续安卓版本也会开源出来。</li><li><a href="https://github.com/JazysYu/JZNavigationExtension" target="_blank" rel="noopener">JZNavigationExtension</a> – 多功能导航控制器，可以透明返回栏。</li><li><a href="https://github.com/okla/QuickRearrangeTableView" target="_blank" rel="noopener">QuickRearrangeTableView</a> – 基于 UITableView 的快速重排功能扩展子类。通过长按选定单元格然后滚动移动到指定位置。</li></ul><h2 id="隐藏与显示"><a href="#隐藏与显示" class="headerlink" title="隐藏与显示"></a>隐藏与显示</h2><ul><li><a href="http://d.cocoachina.com/code/detail/286102" target="_blank" rel="noopener">SlideTapBar</a> – 滚动栏菜单，向上滚动时隐藏tabbar，向下滚动马上显示tabbar。</li><li><a href="https://github.com/Yalantis/FoldingTabBar.iOS" target="_blank" rel="noopener">FoldingTabBar.iOS</a> – 可折叠Tab Bar和Tab Bar Controller。</li><li><a href="https://github.com/ltebean/LTNavigationBar" target="_blank" rel="noopener">LTNavigationBar</a> – LTNavigationBar为app导航栏添加动态着色效果，可自定义其背景色。Demo包含：1.变换背景色；2.滚动视图，导航栏和状态栏重叠。</li><li><a href="https://github.com/bryankeller/BLKFlexibleHeightBar" target="_blank" rel="noopener">BLKFlexibleHeightBar</a> – 固定Header的效果库。。</li></ul><h2 id="HUD与Toast"><a href="#HUD与Toast" class="headerlink" title="HUD与Toast"></a>HUD与Toast</h2><ul><li><a href="https://github.com/jdg/MBProgressHUD" target="_blank" rel="noopener">MBProgressHUD</a> – 最多人用的loading。</li><li><a href="https://github.com/TransitApp/SVProgressHUD" target="_blank" rel="noopener">SVProgressHUD</a> – SVProgressHUD的loading，如果你需要定制化的等待提示器，这个就是了（也许是最好的）。。</li><li><a href="https://github.com/relatedcode/ProgressHUD" target="_blank" rel="noopener">ProgressHUD</a> – ProgressHUD的loading，使用最简单。</li><li><a href="https://github.com/mutualmobile/MMProgressHUD" target="_blank" rel="noopener">MMProgressHUD</a> – 设置HUD出现和消失的方式（包括上下、左右、淡入淡出、放大缩小等等），设置HUD的内容（可以在HUD中加入帧动画、动态图片等等），设置HUD出现时的底部覆盖层颜色，等等。总而言之，这是一份集大成的HUD代码。慢慢看视频吧，囊括了所有效果。</li><li><a href="https://github.com/devSC/WSProgressHUD" target="_blank" rel="noopener">WSProgressHUD</a> – 一个小巧精致的HUD,支持添加到自定义View上, 还有更多小细节.。</li></ul><h2 id="对话框"><a href="#对话框" class="headerlink" title="对话框"></a>对话框</h2><ul><li><a href="https://github.com/m1entus/WCAlertView" target="_blank" rel="noopener">WCAlertView</a> – 自定义的对话框。</li><li><a href="https://github.com/wimagguc/ios-custom-alertview" target="_blank" rel="noopener">IOS7AlertView</a> – IOS7AlertView的对话框。</li><li><a href="https://github.com/mtonio91/AMSmoothAlert" target="_blank" rel="noopener">AMSmoothAlert</a> – 动画效果不错，最多star，但不支持arm64。</li><li><a href="https://github.com/dinhquan/DQAlertView" target="_blank" rel="noopener">DQAlertView</a> – 扁平化的样式不错。</li><li><a href="https://github.com/mrchenhao/HHAlertView" target="_blank" rel="noopener">HHAlertView</a> – 一个简易的alertview 有三种样式，有成功，失败，和警告三种样式，支持Delegate和block两种回调。</li><li><a href="https://github.com/martinjuhasz/MJPopupViewController" target="_blank" rel="noopener">MJPopupViewController</a> – 实现弹出视图的各种弹出和消失效果，包括淡入淡出（fade in，fade out），从屏幕上方飞进，下方飞出，从屏幕左方飞进，右方飞出等等效果，弹窗。</li><li><a href="https://github.com/teodorpatras/EasyTipView" target="_blank" rel="noopener">EasyTipView</a> – 弹出提示框类及演示示例。同样地，API 简单、易用。好“轮子”，弹窗。</li><li><a href="https://github.com/kolyvan/kxmenu" target="_blank" rel="noopener">kxmenu</a> – kxmenu弹出菜单，点击视图上任意位置的按钮，会弹出一个菜单，并且有个小箭头指向点击的按钮，类似气泡视图。弹出的菜单位置会根据按钮的位置来进行调整。</li><li><a href="https://github.com/questbeat/QBPopupMenu" target="_blank" rel="noopener">QBPopupMenu</a> – QBPopupMenu弹出菜单，实现类似 UIMenuItem 的弹出菜单按钮。点击按钮，会弹出一个菜单，上面可以排列多个按钮。纯代码实现，不需要任何图片。</li><li><a href="https://github.com/zhenlintie/STModalDemo" target="_blank" rel="noopener">STModalDemo</a> – 弹出视图（通知，提示，选择，窗口）。</li><li><a href="https://github.com/TaimurAyaz/TAOverlay" target="_blank" rel="noopener">TAOverlay</a> – TAOverlay可通过叠加层展示有用的信息，可自定义文本和背景色，添加阴影和模糊效果，以及更改字体大小或者用自定义图片替换页面上的icon。</li><li><a href="https://github.com/pchernovolenko/UICustomActionSheet" target="_blank" rel="noopener">UICustomActionSheet</a> – 通过模糊背景来着重强调与菜单相关的元素–模糊效果 里面已经收藏。</li><li><a href="http://code.cocoachina.com/detail/232178" target="_blank" rel="noopener">ActionSheetPicker-3.0</a> – 该项目是此前热门项目ActionSheetPicker的新版本，快速复制了iOS 8上的下拉 UIPickerView/ActionSheet功能。</li><li><a href="https://github.com/mayuur/MJAlertView" target="_blank" rel="noopener">MJAlertView</a> – 3D效果转场效果警示图–MJAlertView。</li><li><a href="https://github.com/morizotter/SwiftyDrop" target="_blank" rel="noopener">SwiftyDrop</a> – 轻量、易用的小清新弹出列表及信息提示组件真心不错。</li></ul><h2 id="其他UI"><a href="#其他UI" class="headerlink" title="其他UI"></a>其他UI</h2><ul><li><a href="https://github.com/levey/AwesomeMenu" target="_blank" rel="noopener">AwesomeMenu</a> – 最多人用的Path菜单。</li><li><a href="https://github.com/Tangdixi/DCPathButton" target="_blank" rel="noopener">DCPathButton</a> – Path，4.0的弹出菜单，呼出或者关闭菜单时，多个小图标会分别按照逆时针和顺时针的方向进行滚动。</li><li><a href="https://github.com/itouch2/SphereMenu" target="_blank" rel="noopener">SphereMenu</a> – 利用UIDynamicAnimator的有趣的菜单，path类似。</li><li><a href="https://github.com/KittenYang/KYGooeyMenu" target="_blank" rel="noopener">KYGooeyMenu</a> – KYGooeyMenu 是一个具有 Gooey Effects 带粘性的扇形菜单控件(卫星菜单、path)。</li><li><a href="https://github.com/xhzengAIB/TwitterPaggingViewer" target="_blank" rel="noopener">TwitterPaggingViewer</a> – 多个Tableview，左右滑动。</li><li><a href="https://github.com/carantes/CircularProgressControl" target="_blank" rel="noopener">CircularProgressControl</a> – Circular Progress Control using CAShapeLayer ，环形进度控制条。</li><li><a href="https://github.com/kaandedeoglu/KDCircularProgress" target="_blank" rel="noopener">KDCircularProgress</a> – KDCircularProgress是使用swift制作的色彩炫丽的进度条，可以加入多种颜色来控制进度条的渐变效果。</li><li><a href="https://github.com/xmartlabs/XLPagerTabStrip" target="_blank" rel="noopener">XLPagerTabStrip</a> – 做的很棒的iOS下的PagerTabStrip。</li><li><a href="https://github.com/onevcat/RandomColorSwift" target="_blank" rel="noopener">RandomColorSwift</a> – 一个自动生成好看的颜色的 Swift 库，RandomColorSwift。</li><li><a href="https://github.com/ChangweiZhang/HexColorService" target="_blank" rel="noopener">HexColorService</a> – 将16进制颜色字符串转成UIColor。</li><li><a href="https://github.com/NorthernRealities/Rainbow" target="_blank" rel="noopener">Rainbow</a> – 旨在提高代码可读性及易用性的 UIColor 扩展，它使原先有限的预定义颜色（方法）选择，扩展至超过 1200 种。</li><li><a href="https://github.com/zhxnlai/UIColor-ChineseTraditionalColors" target="_blank" rel="noopener">UIColor-ChineseTraditionalColors</a> – 中国传统颜色引用 UIColor 扩展。“UIColor.桃红()，UIColor.竹青() …”，共158种。</li><li><a href="http://code.cocoachina.com/detail/284158" target="_blank" rel="noopener">类似美团的下拉菜单</a> – 类似美团的下拉菜单，<a href="http://www.cocoachina.com/ios/20150205/11116.html" target="_blank" rel="noopener">源码推荐说明</a>。</li><li><a href="http://code4app.com/ios/%E7%B1%BB%E4%BC%BC%E7%BE%8E%E5%9B%A2%E7%9A%84%E4%B8%8B%E6%8B%89%E9%80%89%E9%A1%B9/538606d4933bf06e0a8b496e" target="_blank" rel="noopener">类似美团的下拉选项</a> – 类似于美团、大众点评的下拉菜单选项，code4app代码，评论代码有瑕疵。</li><li><a href="http://code.cocoachina.com/detail/284267" target="_blank" rel="noopener">CRMediaPickerController</a> – 一个简单易用的图片/视频选择器。1.可同时选择照片和视频。 2.挑选范围有Camera、Camera Roll、Photo Library以及最近拍摄的照片和视频。3.可自定义UIImagePickerController属性（Camera Overlay、Camera Device、Camera View Transform以及allowsEditing）。4.支持横屏和竖屏5.原生的iOS UI。，<a href="http://www.cocoachina.com/ios/20150205/11116.html" target="_blank" rel="noopener">源码推荐说明</a>。</li><li><a href="https://github.com/modocache/MDCSwipeToChoose" target="_blank" rel="noopener">MDCSwipeToChoose</a> – MDCSwipeToChoose可简单地添加滑动手势来调用UIView，并使用该行为提供了一个组件以创建类似Tinder app的like或者dislike界面的轻扫。基于轻扫的方向，你可以决定执行什么样的行为，并且你可以自定义文本颜色和图片。该项目适用于教学用的抽认卡、图片查看器以及其他等。</li><li><a href="http://d.cocoachina.com/code/detail/285611" target="_blank" rel="noopener">iOS Material Design库</a> – 该项目借鉴于谷歌的Material Design guideline，用户可自定义背景色。</li><li><a href="https://github.com/richzertuche/ZMaterialDesignUIButton" target="_blank" rel="noopener">ZMaterialDesignUIButton</a> – Swift Material Design UIButton。</li><li><a href="https://github.com/pixyzehn/MediumScrollFullScreen" target="_blank" rel="noopener">MediumScrollFullScreen</a> – Medium的可扩展滚动页面，上下滚动时，全屏显示内容，并自然消隐上下菜单。由此项目感知，作者是一位很注重细节的开发者，他的另外<a href="https://github.com/pixyzehn" target="_blank" rel="noopener">几个菜单类项目</a>也都不错，值得参考，比如：PathMenu, MediumMenu 等。</li><li><a href="https://github.com/gsdios/SDProgressView" target="_blank" rel="noopener">SDProgressView</a> – 简便美观的进度指示器，此系列共有六种样式的进度指示器。</li><li><a href="https://github.com/SatanWoo/WZFlashButton" target="_blank" rel="noopener">WZFlashButton</a> – WZFlashButton，点击后button里面出现水波扩散效果。</li><li><a href="https://github.com/piemonte/Twinkle" target="_blank" rel="noopener">Twinkle</a> – 为字体加上钻石版闪耀的效果。使用Swift编写。</li><li><a href="https://github.com/palmin/ios-multi-back-button" target="_blank" rel="noopener">ios-multi-back-button</a> – 可替换内置的UInavigationController返回按钮，长按左上角的返回按钮，实现多层级的快速返回。</li><li><a href="http://code.cocoachina.com/detail/226543" target="_blank" rel="noopener">ASDayPicker</a> – 适用于iOS (iPhone)的日期选择器，类似于Calendar app的周视图。</li><li><a href="http://adad184.com/2014/10/29/2014-10-29-how-to-setup-today-extension-programmatically/" target="_blank" rel="noopener">today extension</a> – 用纯代码构建一个Widget(today extension) 。</li><li><a href="https://github.com/f33chobits/FSCalendar" target="_blank" rel="noopener">FSCalendar</a> – 日历视图，带有微妙和平滑的滚动效果，可自定义外观–国人。</li><li><a href="https://github.com/EmilYo/HSDatePickerViewController" target="_blank" rel="noopener">HSDatePickerViewController</a> – 带有Dropbox Mailbox感觉的时间日期选择器。启动是背景被模糊化。界面也是主流的扁平化风格。</li><li><a href="https://github.com/jonathantribouharet/JTCalendar" target="_blank" rel="noopener">JTCalendar</a> – iOS下优美的 Calendar 组件，做 GTD 类 App 必备。</li><li><a href="https://github.com/Yalantis/Persei" target="_blank" rel="noopener">Persei</a> – 动画隐藏或显示顶部菜单支持库及示例项目。–swift</li><li><a href="https://github.com/hyperoslo/Form" target="_blank" rel="noopener">Form</a> – JSON 驱动的 Form表单系统，复杂的表单填写类 App 极其需要（比如淘宝呢！）。</li><li><a href="https://github.com/neoneye/SwiftyFORM" target="_blank" rel="noopener">SwiftyFORM</a> – swift 表单输入框架（亮点是表单验证规则引擎），是我见过地最易用的 Swift 表单组件。</li><li><a href="https://github.com/icanzilb/SwiftSpinner" target="_blank" rel="noopener">SwiftSpinner</a> – SwiftSpinner是使用swift制作的一款精致带感的指示器，并且连带有字体信息显示，模糊背景，半透明，扁平化等IOS8的效果。</li><li><a href="https://github.com/Akkyie/AKPickerView-Swift" target="_blank" rel="noopener">AKPickerView-Swift</a> – 一款小而美的 3D 效果选择器。</li><li><a href="https://github.com/larcus94/ImagePickerSheet" target="_blank" rel="noopener">ImagePickerSheet</a> – 图片或视频选择器（可多选）组件及其示例项目。</li><li><a href="https://github.com/saiwu-bigkoo/iOS-RatingBar" target="_blank" rel="noopener">iOS-RatingBar</a> – iOS-RatingBar swift版的评分控件,跟Android的RatingBar一样有两种模式，评分模式和只读模式’支持视图编辑，自定义星星数量，评分等级,另外还能支持非整数星，0.5颗星，0.1颗星,可以开启动画效果。</li><li><a href="https://github.com/cwRichardKim/RKNotificationHub" target="_blank" rel="noopener">RKNotificationHub</a> – 快速给 UIView 添加上炫酷的通知图标（Badge、红点、提示）。</li><li><a href="https://github.com/andreamazz/BubbleTransition" target="_blank" rel="noopener">BubbleTransition</a> – 以气泡膨胀和缩小的动画效果来显示和移除 controller，Uber的就是这种取消操作的方式。</li><li><a href="https://github.com/KittenYang/KYFloatingBubble" target="_blank" rel="noopener">KYFloatingBubble</a> – 类似iOS7中Game Center浮动气泡的效果。</li><li><a href="https://github.com/Draveness/DKNightVersion" target="_blank" rel="noopener">DKNightVersion</a> – DKNightVersion 是一个支持夜间模式切换的框架。</li><li><a href="https://github.com/sx1989827/EasyUIControl" target="_blank" rel="noopener">EasyUIControl</a> – 一个可以简化界面ui的控件框架。</li><li><a href="https://github.com/DeveloperLx/LxGridView" target="_blank" rel="noopener">LxGridView-oc</a> <a href="https://github.com/DeveloperLx/LxGridView-swift" target="_blank" rel="noopener">LxGridView-swift</a> – 利用UICollectionView模仿iOS系统桌面图标的交互，作用如动图。</li><li><a href="https://github.com/ZhongTaoTian/QQBtn" target="_blank" rel="noopener">QQBtn</a> – 仿QQ未读消息弹性按钮动画，达到和手机QQ未读信息一样的动画效果，效果基本实现。</li><li><a href="https://github.com/gmertk/GMStepper" target="_blank" rel="noopener">GMStepper</a> – swift 带动画效果、支持手势滑动操作的步进标签。</li><li><a href="https://github.com/tomvanzummeren/TZStackView" target="_blank" rel="noopener">TZStackView</a> – OS 9 UIStackView 功能模拟实现于 iOS 7/ iOS 8 内。</li><li><a href="https://github.com/441088327/LayoutTrait" target="_blank" rel="noopener">LayoutTrait</a> – swift 一个小类库。 做iPad 多任务分屏 适配的同学可以看一下。</li><li><a href="https://github.com/HAHAKea/HACursor" target="_blank" rel="noopener">HACursor</a> – HACursor，是一个对横向ScrollView中的视图进行管理的UI控件。只要几行代码就可以集成类似于网易新闻对主题页面进行排序，删除操作的功能。</li><li><a href="https://github.com/nixzhu/Ruler" target="_blank" rel="noopener">Ruler</a> – 尺子。</li></ul><h1 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h1><ul><li><a href="http://www.starming.com/index.php?v=index&amp;view=62" target="_blank" rel="noopener">Core Animation笔记，基本的使用方法</a> – Core Animation笔记，基本的使用方法：1.基本动画，2.多步动画，3.沿路径的动画，4.时间函数，5.动画组。</li><li><a href="https://github.com/sxyx2008/awesome-ios-animation" target="_blank" rel="noopener">awesome-ios-animation</a> – <a href="https://github.com/sxyx2008/DevArticles/issues/91" target="_blank" rel="noopener">iOS Animation 主流炫酷动画框架(特效)收集整理</a> 收集整理了下iOS平台下比较主流炫酷的几款动画框架。</li></ul><h2 id="侧滑与右滑返回手势"><a href="#侧滑与右滑返回手势" class="headerlink" title="侧滑与右滑返回手势"></a>侧滑与右滑返回手势</h2><ul><li><a href="https://github.com/fastred/SloppySwiper" target="_blank" rel="noopener">SloppySwiper</a> – iOS系统自带的UINavigationController要7.0才支持，但不过该手势只能从屏幕左侧边缘识别，如果要扩大到整个屏幕范围怎么办？配合一个SloppySwiper无需代码就可以轻松实现。此库支持iOS5.0以上版本（另外：Nav的title滑动不明显，本人写了2个类似的控件），<a href="https://github.com/Tim9Liu9/SloppySwiper-Example" target="_blank" rel="noopener">SloppySwiper-demo</a> ：代码方式与storyboard方式。</li><li><a href="https://github.com/singro/SCNavigation" target="_blank" rel="noopener">SCNavigation</a> – UINavigation可以右滑返回，隐藏UINavigationBar。</li><li><a href="https://github.com/YueRuo/UINavigationController-YRBackGesture" target="_blank" rel="noopener">UINavigationController-YRBackGesture</a> – 支持右滑返回手势，标题栏不动。</li><li><a href="https://github.com/gresrun/GHSidebarNav" target="_blank" rel="noopener">GHSidebarNav</a> – 现在比较流行使用侧开(侧滑)菜单设计。试了不少控件，感觉GHSidebarNav最成熟，尤其对纯代码创建的界面兼容性最好。<a href="http://www.cnblogs.com/zyl910/archive/2013/06/14/ios_storyboard_sidemenu.html" target="_blank" rel="noopener">在Storyboard中使用GHSidebarNav侧开菜单控件</a>。</li><li><a href="https://github.com/aryaxt/iOS-Slide-Menu" target="_blank" rel="noopener">iOS-Slide-Menu</a> – 能够类似Facebook和Path那样弹出左右边栏侧滑菜单,还支持手势。多种可以自定义的属性 (非常不错)。</li><li><a href="https://github.com/ECSlidingViewController/ECSlidingViewController" target="_blank" rel="noopener">ECSlidingViewController</a> – 侧滑菜单。</li><li><a href="https://github.com/gotosleep/JASidePanels" target="_blank" rel="noopener">JASidePanels</a> – 侧滑菜单,有左右菜单，有pop功能，支持手势侧滑,本人使用中：简单。</li><li><a href="https://github.com/Ramotion/animated-tab-bar" target="_blank" rel="noopener">animated-tab-bar</a> – 让 Tabbar items能显示萌萌的动画。</li><li><a href="http://code.cocoachina.com/detail/284346" target="_blank" rel="noopener">tabbar图标动画</a> – tabbar上图标的动画实现，<a href="http://www.cocoachina.com/ios/20150205/11116.html" target="_blank" rel="noopener">源码推荐说明</a>。</li><li><a href="https://github.com/Yalantis/Side-Menu.iOS/tree/master/SideMenu" target="_blank" rel="noopener">SideMenu</a> – swift实现，一款带动画效果可定制 Slide Menu，可以学习其动画实现思路。P.S. 对于Hamburger式菜单，虽然很常用，不过，苹果并不鼓励使用，甚至有开发小组对其弊病用自家上线应用前后数据对比进行了抨击。</li><li><a href="https://github.com/romaonthego/RESideMenu" target="_blank" rel="noopener">RESideMenu</a> – 侧开菜单，qq类似。</li><li><a href="https://github.com/Jiahai/JHMenuTableViewDemo" target="_blank" rel="noopener">JHMenuTableViewDemo</a> – 仿网易邮箱列表侧滑菜单。</li><li><a href="https://github.com/xudafeng/SlideMenuView" target="_blank" rel="noopener">SlideMenuView</a> – 炫酷侧滑菜单布局框架，Android版本的一致实现。</li><li><a href="https://github.com/shinept/QQConfiguration" target="_blank" rel="noopener">QQConfiguration</a> – swift，QQ-iPhone端框架，左侧菜单栏拖动手势。</li><li><a href="https://github.com/KyleGoddard/KGFloatingDrawer" target="_blank" rel="noopener">KGFloatingDrawer</a> – 侧滑菜单，qq类似，KyleGoddard/KGFloatingDrawer：一款适合于大屏手机或平板的浮动抽屉式导航界面组件。效果很赞- 侧开菜单，qq类似（与RESideMenu类似）。</li><li><a href="https://github.com/cocoatoucher/AIFlatSwitch" target="_blank" rel="noopener">AIFlatSwitch</a> – 一款带平滑过渡动画的 Switch 组件类，类相同风格的 Menu/Back<a href="https://github.com/fastred/HamburgerButton" target="_blank" rel="noopener">HamburgerButton</a>,类似相同风格的 Menu/Close<a href="https://github.com/robb/hamburger-button" target="_blank" rel="noopener">hamburger-button</a>.</li><li><a href="https://github.com/jhurray/JHChainableAnimations" target="_blank" rel="noopener">JHChainableAnimations</a> – 在应用中采用链式写出酷炫的动画效果, 使代码更加清晰易读，利用block实现的链式编程。</li><li><a href="https://github.com/WXGBridgeQ/WXGSlideMenuDemo" target="_blank" rel="noopener">WXGSlideMenuDemo</a> – 个简单实现侧拉（侧滑）菜单的小demo，供初学者共同学习、练习使用。</li><li><a href="https://github.com/pkluz/PKRevealController" target="_blank" rel="noopener">PKRevealController</a> – PKRevealController是一个可以滑动的侧边栏菜单（可向左、向右或者同时向两侧），只需手指轻轻一点（或者按一下按钮，但是这样滑动时不够炫酷）。</li><li><a href="https://github.com/GabrielAlva/SwiftPages" target="_blank" rel="noopener">SwiftPages</a> – 高可定制类似 Instagram 视图滑动切换功能类库。API 简单、易用。</li><li><a href="https://github.com/michaelhenry/FlipBoardNavigationController" target="_blank" rel="noopener">FlipBoardNavigationController</a> – FlipBoardNavigationController。</li><li><a href="https://github.com/mutualmobile/MMDrawerController" target="_blank" rel="noopener">MMDrawerController</a> – 最多人用的一个有关侧边“抽屉”导航框架，里面还有很多你意想不到的交互效果，侧滑。</li></ul><h2 id="gif动画"><a href="#gif动画" class="headerlink" title="gif动画"></a>gif动画</h2><ul><li><a href="https://github.com/yfme/UIImageView-PlayGIF" target="_blank" rel="noopener">UIImageView-PlayGIF</a> – UIImageView-PlayGIF。</li><li><a href="https://github.com/liyong03/YLGIFImage" target="_blank" rel="noopener">YLGIFImage</a> – YLGIFImage。</li><li><a href="https://github.com/liyong03/YLGIFImage-Swift" target="_blank" rel="noopener">YLGIFImage-Swift</a> – YLGIFImage-Swift。</li></ul><h2 id="其他动画"><a href="#其他动画" class="headerlink" title="其他动画"></a>其他动画</h2><ul><li><a href="https://github.com/schneiderandre/popping" target="_blank" rel="noopener">popping</a> – popping是一个POP 使用实例工程</li><li><a href="https://github.com/xhzengAIB/SinaMenuView" target="_blank" rel="noopener">SinaMenuView</a> – 用POP动画引擎写的Sina微博的Menu菜单。</li><li><a href="https://github.com/adad184/MMTweenAnimation" target="_blank" rel="noopener">MMTweenAnimation</a> – facebook POP的自定义动画扩展(基于POPCustomAnimation) 提供10种函数式动画。</li><li><a href="https://github.com/pingguo-zangqilong/ZQLRotateMenu" target="_blank" rel="noopener">ZQLRotateMenu</a> – 这是一个旋转视图的选择器。</li><li><a href="https://github.com/pingguo-zangqilong/CoolLoadAniamtion" target="_blank" rel="noopener">CoolLoadAniamtion</a> – 一个简单但是效果不错的loading动画。</li><li><a href="https://github.com/pingguo-zangqilong/SequenRotateAnimation" target="_blank" rel="noopener">SequenRotateAnimation</a> – 一个简单的loading次序动画。</li><li><a href="https://github.com/441088327/SYAppStart" target="_blank" rel="noopener">SYAppStart</a> – App启动插画的自定义过度。</li><li><a href="https://github.com/victorjiang/UIImage-VJDeviceSpecificMedia/" target="_blank" rel="noopener">VJDeviceSpecificMedia</a> – <a href="http://www.imooc.com/wenda/detail/249271" target="_blank" rel="noopener">如何根据设备选择不同尺寸的图片</a> 可以通过设置不同尺寸设备的LaunchImage，来使得App适配这些设备，要是在不同不同尺寸设备上使用不同大小的图片，则需要在代码中一一判断，然后加载。</li><li><a href="https://github.com/michaelbabiy/RMParallax" target="_blank" rel="noopener">RMParallax</a> – RMParallax是一个app启动页引导开源项目，除了细微的翻页视差效果，描述文本的过渡也非常美观（版本新特性）。</li><li><p><a href="https://github.com/Nododo/ADo_GuideView" target="_blank" rel="noopener">ADo_GuideView</a> – 转动的用户引导页(模仿网易bobo) 因为没有从app包里抓到@3x的图片,建议在iPhone5模拟器运行,保证效果~ （版本新特性）。</p></li><li><p><a href="https://github.com/nsdictionary/CoreNewFeatureVC" target="_blank" rel="noopener">CoreNewFeatureVC</a> – 版本新特性（引导页），1.封装并简化了版本新特性启动视图！2.添加了版本的本地缓存功能，3.集成简单，使用方便，没有耦合度，4.支持block回调。</p></li><li><p><a href="https://github.com/MengTo/Spring" target="_blank" rel="noopener">Spring</a> – Spring是一个Swift编写的开源库，可简化Swift编写的iOS动画。支持shake、pop、morph、squeeze、wobble、swing、flipX、flipY、fall、squeezeLeft、squeezeRight以及squeezeDown等多种动画形式，用 IBDesignable 让使用者可以在 Xcode 中快速设置动画效果。</p></li><li><p><a href="https://github.com/KittenYang/KYBezierBounceView" target="_blank" rel="noopener">KYBezierBounceView</a> – 手势控制贝塞尔曲线，取消手势贝塞尔曲线会有反弹效果。</p></li><li><a href="http://kittenyang.com/cadisplaylinkanduibezierpath/" target="_blank" rel="noopener">cadisplaylinkanduibezierpath</a> – CADisplayLink结合UIBezierPath的神奇妙用。</li><li><a href="https://github.com/KittenYang/KYCuteView" target="_blank" rel="noopener">KYCuteView</a> – 实现类似QQ消息拖拽消失的交互+GameCenter的浮动小球效果，<a href="http://kittenyang.com/drawablebubble/" target="_blank" rel="noopener">分析</a>。</li><li><a href="https://github.com/KittenYang/KYWaterWaveView" target="_blank" rel="noopener">KYWaterWaveView</a> – 一个内置波浪动画的UIView，里面有鱼跳跃水溅起来的效果。</li><li><a href="https://github.com/KittenYang/KYPingTransition" target="_blank" rel="noopener">KYPingTransition</a> – 实现圆圈放大放小的转场动画，可以根据自己的需要使用Paper中的弹性效果，有Material风格。</li><li><a href="https://github.com/KittenYang/KYNewtonCradleAnimiation" target="_blank" rel="noopener">KYNewtonCradleAnimiation</a> – 牛顿摆动画。</li><li><a href="https://github.com/scotteg/LayerPlayer" target="_blank" rel="noopener">LayerPlayer</a> – 一款全面展示核心动画 API 示例项目（上架应用）。包括 CALayer, CAScrollLayer, CATextLayer, AVPlayerLayer, CAGradientLayer, CAReplicatorLayer, CATiledLayer, CAShapeLayer, CAEAGLLayer, CATransformLayer, CAEmitterLayer 等使用的互动演示。</li><li><a href="https://github.com/JayGajjar/JGTransitionCollectionView" target="_blank" rel="noopener">JGTransitionCollectionView</a> – swift，基于集合视图扩展实现完成自动布局及单元项 Flip式动画效果（效果很赞）。组件使用方便、自然（只需设置集合视图数据源的标准方式即可）。</li><li><a href="https://github.com/KittenYang/KYShareMenu" target="_blank" rel="noopener">KYShareMenu</a> – 带弹性动画的分享菜单。</li><li><a href="https://github.com/Yalantis/Context-Menu.iOS" target="_blank" rel="noopener">Context-Menu.iOS</a> – 可以为app的菜单添加漂亮的动画内容，可自定义icon，并可根据自己的喜好设计单元格和布局。</li><li><a href="https://github.com/LuciusLu/DeformationButton" target="_blank" rel="noopener">DeformationButton</a> – 一个简单的变换形状动画按钮。</li><li><a href="https://github.com/heroims/UnReadBubbleView" target="_blank" rel="noopener">UnReadBubbleView</a> – UnReadBubbleView是一个能够拖拽并拉长的气泡视图。拖拽到一定的长度会消失，可以通过系数设置来控制拖拽的长度。气泡也支持多种属性设置。</li><li><a href="https://github.com/smallmuou/PPDragDropBadgeView" target="_blank" rel="noopener">PPDragDropBadgeView</a> – 实现了类似于QQ 5.0 水滴拖拽效果. 支持iOS 5.0+ ARC，气泡能够带有数字标识，同时支持消失block方法。消失时还带有消失效果动画。</li><li><a href="https://github.com/MartinRGB/GiftCard-Implementation" target="_blank" rel="noopener">GiftCard-Implementation</a> – 购买的炫酷动画。</li><li><a href="https://github.com/nicklockwood/iCarousel" target="_blank" rel="noopener">iCarousel</a> – iCarousel是一个类，它继承于UIView。用于简化实现各种类型的旋转木马(分页滚动视图）。</li><li><a href="https://github.com/zangqilong198812/HotGirls" target="_blank" rel="noopener">HotGirls</a> – 卡片动画。</li><li><a href="https://github.com/tispr/tispr-card-stack" target="_blank" rel="noopener">tispr-card-stack</a> – swift 卡片风格动画切换组件及完整交互示例。</li><li><a href="https://github.com/zhxnlai/ZLSwipeableViewSwift" target="_blank" rel="noopener">ZLSwipeableViewSwift</a> – swift 卡片堆叠效果的实现（ZLSwipeableView)】可实现类似Tinder和Potluck应用程序的卡片堆叠效果，该项目基于<a href="https://github.com/zhxnlai/ZLSwipeableView/" target="_blank" rel="noopener">ZLSwipeableView objective-c</a>实现。1.自定义动画。2.自定义滑动切换。3.自定义方向。4.撤销。</li><li><a href="https://github.com/Yalantis/Koloda" target="_blank" rel="noopener">Koloda</a> – 基于卡片的 Tinder-style 动画效果示例。精细绝人。更赞的是额外附了详细开发教程 How We Built Tinder-Like Koloda Animation in Swift <a href="https://yalantis.com/blog/how-we-built-tinder-like-koloda-in-swift/" target="_blank" rel="noopener">网页链接</a> 。Yalantis 出品动画程序款款精品。</li><li><a href="https://github.com/zangqilong198812/QQPersonalInfoTransition" target="_blank" rel="noopener">QQPersonalInfoTransition</a> – 仿照QQ的转场。</li><li><a href="https://github.com/KittenYang/KYAnimatedPageControl" target="_blank" rel="noopener">KYAnimatedPageControl</a> – 除了滚动视图时PageControl会以动画的形式一起移动，点击目标页还可快速定位。支持两种样式：粘性小球和旋转方块。</li><li><a href="https://github.com/IFTTT/RazzleDazzle" target="_blank" rel="noopener">RazzleDazzle</a> – 【IFTTT开源Swift编写的帧动画框架–RazzleDazzle】RazzleDazzle 是IFTTT开源的一个iOS帧动画框架，非常适用于APP初次使用时的介绍和引导信息。JazzHands是UIKit一个简单的关键帧基础动画框架，可通过手势、scrollview、KVO等控制动画，被IFTTT应用在IFTTT for iPhone上。</li><li><a href="https://github.com/hyperoslo/Presentation" target="_blank" rel="noopener">Presentation</a> – 一个类似RazzleDazzle的框架。</li></ul><h1 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h1><h2 id="网络连接"><a href="#网络连接" class="headerlink" title="网络连接"></a>网络连接</h2><ul><li><a href="https://github.com/AFNetworking/AFNetworking" target="_blank" rel="noopener">AFNetworking</a> – ASI不升级以后，最多人用的网络连接开源库，<a href="http://www.superqq.com/blog/2014/11/07/ioswang-luo-bian-cheng-zhi-afnetworkingshi-yong/" target="_blank" rel="noopener">iOS网络编程之AFNetworking使用</a>,<a href="http://www.superqq.com/blog/2015/01/29/ioskai-fa-xia-zai-wen-jian-su-du-ji-suan/" target="_blank" rel="noopener">iOS开发下载文件速度计算</a>。</li><li><a href="https://github.com/Alamofire/Alamofire" target="_blank" rel="noopener">Alamofire</a> – Alamofire是AFNetworking的作者mattt新写的网络请求的swift库。</li><li><a href="https://github.com/yuantiku/YTKNetwork" target="_blank" rel="noopener">YTKNetwork</a> – 是基于 AFNetworking 封装的 iOS网络库，提供了更高层次的网络访问抽象。相比AFNetworking，YTKNetwork提供了以下更高级的功能：按时间或版本号缓存网络请求内容、检查返回 JSON 内容的合法性、文件的断点续传、批量的网络请求发送、filter和插件机制等。</li><li><a href="https://github.com/DeveloperLx/LxFTPRequest" target="_blank" rel="noopener">LxFTPRequest</a> – 支持获取FTP服务器资源列表，下载/上传文件，创建/销毁ftp服务器文件/目录，以及下载断点续传，下载/上传进度，自动判断地址格式合法性跟踪等功能！国人开发，QQ：349124555。</li><li><a href="https://github.com/swtlovewtt/WTRequestCenter" target="_blank" rel="noopener">WTRequestCenter</a> – 方便缓存的请求库，提供了方便的HTTP请求方法，传入请求url和参数，返回成功和失败的回调。 UIKit扩展提供了许多不错的方法，快速缓存图片，图片查看，缩放功能， 颜色创建，设备UUID，网页缓存，数据缓存等功能。 无需任何import和配置，目前实现了基础需求。</li><li><a href="https://github.com/mutualmobile/MMWormhole" target="_blank" rel="noopener">MMWormhole</a> – Message passing between iOS apps and extensions 2个iOS设备之间通信。</li><li><a href="https://github.com/socketio/socket.io-client-swift" target="_blank" rel="noopener">socket.io-client-swift</a> – WebSockect 客户端类库。开放的通讯协议，有利于构建强大地跨平台应用。</li><li><a href="https://github.com/nghialv/Transporter" target="_blank" rel="noopener">Transporter</a> – swift， 短小、精悍、易用的多文件（并发或顺序）上传和下载传输库。还支持后台运行、传输进程跟踪、暂停/续传/取消/重试控制等功能。</li><li><a href="https://github.com/kevin0571/STNetTaskQueue" target="_blank" rel="noopener">STNetTaskQueue</a> – STNetTaskQueue Objective-C 可扩展网络请求管理库。</li><li><a href="https://github.com/robbiehanson/CocoaAsyncSocket" target="_blank" rel="noopener">CocoaAsyncSocket</a> – 在iOS开发中使用socket，一般都是用第三方库AsyncSocket，不得不承认这个库确实很强大，<a href="http://www.superqq.com/blog/2015/04/03/ioskai-fa-zhi-asyncsocketshi-yong-jiao-cheng/" target="_blank" rel="noopener">使用教程</a>。</li><li><a href="https://github.com/eugenehp/GCDAsyncSocket" target="_blank" rel="noopener">GCDAsyncSocket</a> – GCDAsyncSocket ， <a href="https://github.com/smalltask/TestTcpConnection" target="_blank" rel="noopener">不错的Demo</a>。</li><li><a href="https://github.com/JustHTTP/Just" target="_blank" rel="noopener">Just</a> – 小而美的 HTTP 类。功能简单、直接、完整且健壮性高– swift。</li><li><a href="https://github.com/nghialv/Future" target="_blank" rel="noopener">Future</a> – 基于微框架设计思想的异步执行及结果响应类，代码即简单又干净– swift。</li><li><a href="https://github.com/mzeeshanid/MZDownloadManager" target="_blank" rel="noopener">MZDownloadManager</a> – 下载管理。</li><li><a href="https://github.com/venmo/DVR" target="_blank" rel="noopener">DVR</a> – 针对网络请求的测试框架，超实用的工具。且支持 iOS, OSX, watchOS 全平台。</li></ul><h2 id="图像获取"><a href="#图像获取" class="headerlink" title="图像获取"></a>图像获取</h2><ul><li><a href="https://github.com/rs/SDWebImage" target="_blank" rel="noopener">SDWebImage</a> – SDWebImage 网络图片获取及缓存处理。</li><li><a href="https://github.com/onevcat/Kingfisher" target="_blank" rel="noopener">Kingfisher</a> – 纯 Swift 实现的类 SDWebImage 库，实现了异步下载和缓存图片。</li><li><a href="https://github.com/kiavashfaisali/KFSwiftImageLoader" target="_blank" rel="noopener">KFSwiftImageLoader</a> – Swift，一个图像缓存加载库。</li><li><a href="https://github.com/path/FastImageCache" target="_blank" rel="noopener">FastImageCache</a> – FastImageCache 网络图片获取及缓存处理，<a href="http://www.imooc.com/wenda/detail/247239" target="_blank" rel="noopener">iOS图片加载速度极限优化—FastImageCache解析</a>。</li><li><a href="https://github.com/enormego/EGOCache" target="_blank" rel="noopener">EGOCache</a> – 十分知名的第三方缓存类库，可以缓存NSString、UIImage、NSImage以及NSData。除此，如果还可以缓存任何一个实现了接口的对象。所有缓存的数据都可以自定义过期的时间，默认是1天。EGOCache 支持多线程（thread-safe），<a href="http://www.superqq.com/blog/2014/11/06/ioskai-fa-:uitableviewjia-zai-duo-zhang-zhao-pian-dao-zhi-nei-cun-shang-zhang-de-wen-ti/" target="_blank" rel="noopener">UITableView加载多张照片导致内存上涨的问题</a>。</li></ul><h2 id="网络聊天"><a href="#网络聊天" class="headerlink" title="网络聊天"></a>网络聊天</h2><ul><li><a href="https://github.com/robbiehanson/XMPPFramework" target="_blank" rel="noopener">XMPPFramework</a> – XMPPFramework openfire聊天。</li><li><a href="http://www.easemob.com/" target="_blank" rel="noopener">环信</a> – 给开发者更稳定IM云功能。8200万用户考验，好用！（暂无及时语音、视频通话）</li><li><a href="http://www.rongcloud.cn/" target="_blank" rel="noopener">融云</a> – 即时通讯云服务提供商。（暂无及时语音、视频通话）</li><li><a href="http://www.yuntongxun.com/" target="_blank" rel="noopener">容联云通讯</a> – 提供基于互联网通话,视频会议,呼叫中心/IVR,IM等通讯服务。</li><li><a href="https://github.com/ChatSecure/ChatSecure-iOS" target="_blank" rel="noopener">chatsecure</a> – 基于XMPP的iphone、android加密式聊天软件， <a href="https://chatsecure.org/" target="_blank" rel="noopener">chatsecure官网</a> 。 <a href="https://github.com/chrisballinger/Off-the-Record-iOS" target="_blank" rel="noopener">iOS代码1</a>，<a href="https://github.com/chrisballinger/ChatSecure-iOS" target="_blank" rel="noopener">iOS代码2</a>， <a href="http://www.cocoachina.com/bbs/read.php?tid=153156" target="_blank" rel="noopener">iOS中文版</a>。</li><li><a href="https://github.com/xhzengAIB/MessageDisplayKit" target="_blank" rel="noopener">MessageDisplayKit</a> – 仿微信聊天，参考JSQMessagesViewController。（国人写）</li><li><a href="https://github.com/jessesquires/JSQMessagesViewController" target="_blank" rel="noopener">JSQMessagesViewController</a> – 聊天 。</li><li><a href="https://github.com/HanYaZhou1990/-SunFlower" target="_blank" rel="noopener">SunFlower</a> – 环信聊天demo，比较多功能 。</li><li><a href="http://code4app.com/ios/BlueTalk%E8%93%9D%E7%89%99%E8%81%8A%E5%A4%A9-%E6%89%8B%E6%9C%BA%E4%B9%8B%E9%97%B4/552b8190933bf0291e8b4748" target="_blank" rel="noopener">BlueTalk蓝牙聊天</a> – 以MultipeerConnectivity为基础， 实现了简单的蓝牙聊天。</li></ul><h2 id="网络测试"><a href="#网络测试" class="headerlink" title="网络测试"></a>网络测试</h2><ul><li><a href="https://github.com/tonymillion/Reachability" target="_blank" rel="noopener">Reachability</a> – 苹果提供过一个Reachability类，用于检测网络状态。但是该类由于年代久远，并不支持ARC。该项目旨在提供一个苹果的Reachability类的替代品，支持ARC和block的使用方式。<a href="http://www.jianshu.com/p/efcfa3c87306" target="_blank" rel="noopener">iOS网络监测如何区分2、3、4G</a></li><li><a href="https://github.com/crazypoo/SimpleCarrie" target="_blank" rel="noopener">SimpleCarrie</a> – 简单的运营商信息获取!。</li></ul><h2 id="WebView"><a href="#WebView" class="headerlink" title="WebView"></a>WebView</h2><ul><li><a href="https://github.com/mattgemmell/MGTemplateEngine" target="_blank" rel="noopener">MGTemplateEngine</a> – MGTemplateEngine比较象 PHP 中的 Smarty、FreeMarker 和 Django的模版引擎，是一个轻量级的引擎，简单好用。只要设置很多不同的HMTL模版，就能轻松的实现一个View多种内容格式的显示，对于不熟悉HTML或者减轻 工作量而言，把这些工作让设计分担一下还是很好的，也比较容易实现设计想要的效果。</li><li><a href="https://github.com/ninjinkun/NJKWebViewProgress" target="_blank" rel="noopener">NJKWebViewProgress</a> – 一个 UIWebView 的进度条接口库,UIWebView 本身是不提供进度条的。</li><li><a href="https://github.com/siriusdely/GTMNSString-HTML" target="_blank" rel="noopener">GTMNSString-HTML</a> – 谷歌开源的用于过滤HTML标签。</li></ul><h2 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h2><ul><li><a href="https://github.com/johnezang/JSONKit" target="_blank" rel="noopener">JSONKit</a> – JSONKit库是非常简单易用而且效率又比较高的，重要的JSONKit适用于ios 5.0以下的版本,使用JSONKit库来解析json文件，只需要下载JSONKit.h 和JSONKit.m添加到工程中；然后加入libz.dylib即可。</li><li><a href="https://github.com/icanzilb/JSONModel" target="_blank" rel="noopener">JSONModel</a> – 解析服务器返回的Json数据的库,<a href="http://www.jianshu.com/p/3d795ea37835" target="_blank" rel="noopener">JSONModel源码解析一</a>。</li><li><a href="https://github.com/Mantle/Mantle" target="_blank" rel="noopener">Mantle</a> – Mantle主要用来将JSON数据模型化为OC对象, 大系统中使用。<a href="http://www.iwangke.me/2014/10/13/Why-Changba-iOS-choose-Mantle/" target="_blank" rel="noopener">为什么选择Mantle</a>。</li><li><a href="https://github.com/refusebt/RFJModel" target="_blank" rel="noopener">RFJModel</a> – RFJModel是一个IOS类库，可以将JSON字典自动装填到OBJC对象。相比JSONModel有一些非常好的特性，使用上也比较简单。</li><li><a href="https://github.com/nicklockwood/XMLDictionary" target="_blank" rel="noopener">XMLDictionary</a> – ios与mac os平台下xml与NSDictionary相互转化开源类库。</li><li><a href="https://github.com/CoderMJLee/MJExtension" target="_blank" rel="noopener">MJExtension</a> – 用于json转model进行使用，转换效率很高，使用也比较简单，只要前后台约定好，json直接就转成了model。</li><li><a href="https://github.com/CoderMJLee/MJExtension" target="_blank" rel="noopener">CFRuntime</a> – “Swift 版的 MJExtension，运行时、反射与一键字典模型互转”。</li><li><a href="https://github.com/openboy2012/DDModel" target="_blank" rel="noopener">DDModel</a> – 快速搭建项目Model层，支持ORM映射关系，能从JSON/XML直接实例一个Model对象。支持SQLite本地数据持久化，封装了HTTP， 减少HTTP代码与UIViewController的代码耦合，支持Cache；类似RESTKit、Mantle的功能；使用该类库以后简化了网络层的开发工作，把更多的精力放在UI上面；目前只支持GET/POST方法的请求。使用到的第三方库有：1.SQLitePersistentObject; 2.JTObjectMapping; 3.AFNetworking; 4.XMLDictionary;</li><li><a href="https://github.com/alexeyxo/protobuf-swift" target="_blank" rel="noopener">protobuf-swift</a> – Protocol Buffers 的 Swift 语言实现库。P.S. Protocol Buffers 是 Google 开源项目，主要功能是实现直接序列化结构化的对象数据，方便跨平台快速传递，开发者也可以直接修改 protobuf 中的数据。相比 XML 和 JSON，protobuf 解析更快，存储更小。</li><li><a href="https://github.com/matthewcheok/JSONCodable" target="_blank" rel="noopener">JSONCodable</a> – 基于 Swift 2.0 新特性（Protocol Extensions and Error Handling）的JSON 解析类。</li></ul><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li><a href="https://github.com/exsortis/DateTimeKit" target="_blank" rel="noopener">DateTimeKit</a> – 一个超赞的时间处理的库，Joda-Time ！ 他能帮你轻松处理时区，处理时间加减，计算到期时间等等场景下的问题。</li><li><a href="https://github.com/malcommac/SwiftDate" target="_blank" rel="noopener">SwiftDate</a> – 特别完整、强大的日期时间操作管理类库。它几乎涵盖了已知开源日期类库所有优秀特性。 他能帮你轻松处理时区，处理时间加减，计算到期时间等等场景下的问题。</li><li><a href="https://github.com/nst/iOS-Runtime-Headers" target="_blank" rel="noopener">iOS私有API</a> – 私有API，绿色 == public，红色 == private，蓝色 == dylib。</li><li><a href="http://opensource.apple.com/source/CF/" target="_blank" rel="noopener">iOS源代码</a> – iOS源代码。</li><li><a href="https://github.com/ShiqiYu/libfacedetection" target="_blank" rel="noopener">libfacedetection</a> – C++ 人脸识别 包含正面和多视角人脸检测两个算法.优点:速度快(OpenCV haar+adaboost的2-3倍), 准确度高 (FDDB非公开类评测排名第二），能估计人脸角度。</li><li><a href="https://github.com/Brimizer/Slidden" target="_blank" rel="noopener">Slidden</a> – 一个老外开源的开发自定义键盘的库，利用这个开源库，可以方便的配置键位、颜色以及键位对应的图片。</li><li><a href="https://github.com/michaeltyson/TPKeyboardAvoiding" target="_blank" rel="noopener">TPKeyboardAvoiding</a> – 用户键盘弹出自动计算高度，进行屏幕滚动操作。</li><li><a href="http://d.cocoachina.com/code/detail/298267" target="_blank" rel="noopener">CDPMonitorKeyboard</a> – CDPMonitorKeyboard封装,可以解决输入视图(例如textField,textView等)被键盘覆盖问题，并可设置高于键盘多少。</li><li><a href="http://code.cocoachina.com/detail/297973/%E8%87%AA%E5%8A%A8%E7%9B%91%E5%90%AC%E9%94%AE%E7%9B%98%E9%AB%98%E5%BA%A6/" target="_blank" rel="noopener">自动监听键盘高度</a> – 自动监听键盘高度，初始界面，输入框在屏幕最下方，当键盘出现时，输入框随即移动到键盘上方。</li><li><a href="https://github.com/441088327/SYKeyboardTextField" target="_blank" rel="noopener">SYKeyboardTextField</a> – SYKeyboardTextField 是一个轻巧,简单,非侵入式的键盘附随输入框! 采用Swift编写。</li><li><a href="https://github.com/zwaldowski/BlocksKit" target="_blank" rel="noopener">BlocksKit</a> – block框架，为 OC 常用类提供了强大的 Block 语法支持，使得编写 OC 代码变得舒适、快速、优雅。</li><li><a href="https://github.com/facebook/KVOController" target="_blank" rel="noopener">KVOController</a> – 在项目中有使用 KVO ，那么 KVOController 绝对是个好选择。它是 facebook 开源的一个 KVO 增强框架。</li><li><a href="https://github.com/arashpayan/appirater" target="_blank" rel="noopener">appirater</a> – 用于提醒用户给你的 APP 打分的工具。</li><li><a href="https://github.com/MHaroonBaig/MotionKitr" target="_blank" rel="noopener">MotionKitr</a> – 为核心运动框架（The Core Motion framework）提供友好的类库封装，以更方便使用三轴陀螺仪和加速感应器特性。</li><li><a href="https://launchkit.io/reviews/" target="_blank" rel="noopener">Review Monitor</a> – 第一时间自动推送 Apple Store 的用户评论到你的邮件箱或者 Slack，第一时间跟进用户反馈，打造优秀 App 必备工具！类似的有：App annie 的类似功能。</li><li><a href="https://github.com/Naituw/WBWebViewConsole" target="_blank" rel="noopener">WBWebViewConsole</a> – 类似微博iPhone客户端的 “调试选项” 吗？把其中的 “内置浏览器网页调试” 开源在 Github 上了。</li><li><a href="https://github.com/futurice/ios-good-practices" target="_blank" rel="noopener">ios-good-practices</a> – ios-good-practices iOS 开发最佳实践。</li><li><a href="http://ios.jobbole.com/81830/" target="_blank" rel="noopener">iOS开发最佳实践</a> – iOS 开发最佳实践 — 中文。</li><li><a href="http://code.cocoachina.com/detail/232160" target="_blank" rel="noopener">TodayExtensionSharingDefaults</a> – TodayExtensionSharingDefaults是一个iOS 8 Today扩展示例，可以使用NSUserDefaults与其containing app分享数据。</li><li><a href="https://github.com/yannickl/QRCodeReader.swift" target="_blank" rel="noopener">QRCodeReader.swift</a> – QRCodeReader.swift一款简单的 QR 二维码阅读组件及示例，提供前后相机切换功能。</li><li><a href="https://github.com/100mango/QRCatcher" target="_blank" rel="noopener">QRCatcher</a> – 一个简洁美观的二维码扫描应用， <a href="https://github.com/100mango/zen/blob/master/iOS%E5%AD%A6%E4%B9%A0%EF%BC%9AAVFoundation%20%E8%A7%86%E9%A2%91%E6%B5%81%E5%A4%84%E7%90%86/iOS%E5%AD%A6%E4%B9%A0%EF%BC%9AAVFoundation%20%E8%A7%86%E9%A2%91%E6%B5%81%E5%A4%84%E7%90%86%20.md" target="_blank" rel="noopener">iOS学习：AVFoundation 视频流处理–二维码扫描</a>。</li><li><a href="https://github.com/ayanonagon/Parsimmon" target="_blank" rel="noopener">Parsimmon</a> – swift，小而美的语言学类库封装工具包。提供分词、标记词性、词形归并、朴素贝页斯分类、决策树等自然语言分析小工具。P.S. 英语分词效果好于中文，感兴趣的同学可以针对中文做一些优化开发。参考译文 NSHipster – <a href="http://nshipster.cn/nslinguistictagger/" target="_blank" rel="noopener">NSLinguistic?Tagger</a>。</li><li><a href="https://github.com/liuchunlao/Password-keyboard" target="_blank" rel="noopener">Password-keyboard</a> – 随机变换数字位置的密码键盘。 模仿银行类应用在付款时输入的随机密码键盘。</li><li><a href="https://github.com/SemperIdem/MKMapView-Extension" target="_blank" rel="noopener">MKMapView-Extension</a> – 这是关于 MKMapView 写的一个基于swift的扩展，可以扩展 MKMapView 的相关功能，减少复用代码量。</li><li><a href="https://github.com/nomothetis/SemverKit" target="_blank" rel="noopener">SemverKit</a> – 针对符合『语义化版本规范 2.0.0』版本号的解析、比较运算类库。不仅支持 Major, Minor, Patch，还支持 Alpha 和 Beta 预发布版本，以及相应地递增运算扩展。</li><li><a href="https://github.com/jpotts18/SwiftValidator" target="_blank" rel="noopener">SwiftValidator</a> – 基于规则的输入验证类库。项目良好的面向对象设计思想，使规则的扩展及自定义非常方便。更专业的规则引擎（甚至是基于自然语言的规则配置）解决方案，比如：开源的 Drools，商用的 ILOG 等。</li><li><a href="https://github.com/gali8/Tesseract-OCR-iOS" target="_blank" rel="noopener">Tesseract-OCR-iOS</a> – 有关OCR文字识别项目。</li><li><a href="https://github.com/shaojiankui/IOS-Categories" target="_blank" rel="noopener">iOS-Categories</a> – 收集了许多有助于开发的iOS扩展,各种category。</li><li><a href="https://github.com/nonstriater/Olla4iOS" target="_blank" rel="noopener">Olla4iOS</a> – 过去积累的一些方便复用的类和方法，还在整理中。</li><li><a href="https://github.com/Draveness/DKNightVersion" target="_blank" rel="noopener">DKNightVersion</a> – 用最快的方式给你的应用加上夜间和白天的切换效果。</li><li><a href="https://github.com/morizotter/TouchVisualizer" target="_blank" rel="noopener">TouchVisualizer</a> – 实用的多点触摸可视化组件。扩展并作用于 UIWindows，结构上提供了简单地针对触摸显示定制，比如触摸点的颜色。</li><li><a href="https://github.com/wezm/RegexKitLite" target="_blank" rel="noopener">RegexKitLite</a> – 用来处理正则表达式。</li><li><a href="https://github.com/czechboy0/XcodeServerSDK" target="_blank" rel="noopener">XcodeServerSDK</a> – 非官方 Xcode Server SDK 封装库。 P.S. 该 SDK 分离自之前推荐的由该作者开发的自动测试框架 <a href="https://github.com/czechboy0/Buildasaur" target="_blank" rel="noopener">Buildasaur</a>。</li><li><a href="https://github.com/FabrizioBrancati/BFKit-Swift" target="_blank" rel="noopener">BFKit-Swift</a> – BFKit-Swift 这套工具库可以提高应用开发效率。</li><li><a href="https://github.com/CloudKitSpace/CKSIncrementalStore" target="_blank" rel="noopener">CKSIncrementalStore</a> – 基于 CloudKit 服务器实现多终端数据同步。</li><li><a href="https://github.com/oisdk/SwiftSequence" target="_blank" rel="noopener">SwiftSequence</a> – 简洁、灵活、多变的操作 SequenceType 的类库（基于微框架（μframework）设计思想）。</li><li><a href="https://github.com/photondragon/IDNFeedParser" target="_blank" rel="noopener">IDNFeedParser</a> – 一个简单易用的Rss解析库。</li><li><a href="https://github.com/nsdictionary/CoreUmeng" target="_blank" rel="noopener">CoreUmeng</a> – 简单：友盟分享封装。</li><li><a href="https://github.com/100apps/openshare" target="_blank" rel="noopener">openshare</a> – 不用官方SDK，利用社交软件移动客户端(微信/QQ/微博/人人/支付宝)分享/登录/支付。</li><li><a href="https://github.com/tomkowz/Swifternalization" target="_blank" rel="noopener">Swifternalization</a> – 一套实用的本地化工具库。使用教程及 API 文档完整。值得收入项目的“轮子”。</li><li><a href="https://github.com/owensd/apous" target="_blank" rel="noopener">apous</a> – 一款有趣的 Swift 应用 － 让 Swift 成为脚本语言。</li><li><a href="https://github.com/kostiakoval/Mirror" target="_blank" rel="noopener">Mirror</a> – 通过反射（Refection）实现镜像对象封装库。从而可以更轻松获取（或输出）对象属性名、类型及值变量。</li><li><a href="https://github.com/nixzhu/Proposer" target="_blank" rel="noopener">Proposer</a> – Proposer 用单个 API 处理 iOS 上的权限请求，以便使用前确认可访问“相册”、“相机”、“麦克风”、“通讯录”或“用户位置”。</li><li><a href="https://github.com/intuit/LocationManager" target="_blank" rel="noopener">LocationManager</a> – CoreLocation使用起来还是比较麻烦的，需要授权，判断系统版本等等，所以推荐使用第三方框架LocationManager，使用Block，十分简单！<a href="http://www.cocoachina.com/ios/20150721/12611.html" target="_blank" rel="noopener">iOS-CoreLocation：无论你在哪里，我都要找到你！</a> 。</li><li><a href="https://github.com/Cee/pangu.objective-c" target="_blank" rel="noopener">pangu.objective-c</a> – 有多种语言实现版本～ Pangu.Objective-C：格式化中英文之间的空格（OC）。</li><li><a href="https://github.com/atomicobject/objection" target="_blank" rel="noopener">objection</a> – 一个轻量级的依赖注入框架Objection。</li></ul><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><ul><li><a href="https://github.com/ccgus/fmdb" target="_blank" rel="noopener">FMDB</a> – sqlite的工具， <a href="https://github.com/tangqiaoboy/FmdbSample" target="_blank" rel="noopener">多线程FMDatabaseQueue实例</a>，<a href="https://github.com/liuchunlao/LVDatabaseDemo" target="_blank" rel="noopener">FMDB数据库的使用演示和封装工具类</a>。</li><li><a href="https://github.com/Gerry1218/GXDatabaseUtils" target="_blank" rel="noopener">GXDatabaseUtils</a> – 在FMDB基础上的工具。</li><li><a href="https://github.com/realm/realm-cocoa" target="_blank" rel="noopener">realm-cocoa</a> – Realm是一个真正为移动设备打造的数据库，同时支持Objective-C和Swfit。Realm宣称其相比Sqlite，在移动设备上有着更好的性能表现。</li><li><a href="https://github.com/andrelind/Breeze" target="_blank" rel="noopener">Breeze</a> – 用Swift写的一个轻量级的CoreData管理工具，并且还支持iCloud 。</li><li><a href="https://github.com/Alecrim/AlecrimCoreData" target="_blank" rel="noopener">AlecrimCoreData</a> – Swift，更容易地访问 CoreData 对象封装类库。除了 CRUD，还提供指针定位，强大的排序、筛选，异步数据获取，以及独立线程后台存取数据。</li><li><a href="https://github.com/JohnEstropia/CoreStore" target="_blank" rel="noopener">CoreStore</a> – Core Data 管理类库。 其中事务管理及查询是其比较大的亮点，整套 API 功能完整。</li><li><a href="https://github.com/hyperoslo/Presentation" target="_blank" rel="noopener">Presentation</a> – 重量级好项目 Presentation，它可以方便你制作定制的动画式教程、Release Notes、个性化演讲稿等。</li><li><a href="https://github.com/terhechte/CoreValue" target="_blank" rel="noopener">CoreValue</a> – Swift 2 版 Core Data 封装库。相比另外两个 <a href="https://github.com/arkverse/SwiftRecord" target="_blank" rel="noopener">SwiftRecord</a>和 <a href="https://github.com/JohnEstropia/CoreStore" target="_blank" rel="noopener">CoreStore</a>更轻量。</li></ul><h1 id="缓存处理"><a href="#缓存处理" class="headerlink" title="缓存处理"></a>缓存处理</h1><ul><li><a href="https://github.com/yuantiku/YTKKeyValueStore" target="_blank" rel="noopener">YTKKeyValueStore</a> – Key-Value存储工具类，<a href="http://tangqiaoboy.gitcafe.io/blog/2014/10/03/opensouce-a-key-value-storage-tool/" target="_blank" rel="noopener">说明</a>。</li><li><a href="https://github.com/tumblr/TMCache" target="_blank" rel="noopener">TMCache</a> – TMCache 是 Tumblr 开源的一个基于 key/value 的数据缓存类库,可以用于缓存一些临时数据或者需要频繁加载的数据,比如某些下载的数据或者一些临时处理结果。</li><li><a href="https://github.com/jl322137/JLKeychain" target="_blank" rel="noopener">JLKeychain</a> – 快捷使用keychain存储数据的类，使keychain像NSUserDefaults一样工作。</li><li><a href="https://github.com/soffes/sskeychain" target="_blank" rel="noopener">sskeychain</a> – SSKeyChains对苹果安全框架API进行了简单封装,支持对存储在钥匙串中密码、账户进行访问,包括读取、删除和设置。</li><li><a href="https://github.com/kishikawakatsumi/KeychainAccess" target="_blank" rel="noopener">KeychainAccess</a> – 管理Keychain接入的小助手。</li></ul><h1 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h1><ul><li><a href="https://github.com/vfr/Reader" target="_blank" rel="noopener">Reader</a> – Reader可提供类似iBooks的文档导航，支持屏幕旋转和所有方向，并通过密码保护加密PDF文件，支持PDF链接和旋转页面。</li></ul><h1 id="图像浏览及处理"><a href="#图像浏览及处理" class="headerlink" title="图像浏览及处理"></a>图像浏览及处理</h1><ul><li><a href="https://github.com/liric28/FLAnimatedImage" target="_blank" rel="noopener">FLAnimatedImage</a> – gif播放处理的工具。</li><li><a href="https://github.com/yackle/CLImageEditor" target="_blank" rel="noopener">CLImageEditor</a> – 超强的图片编辑库，快速帮你实现旋转，防缩，滤镜等等一系列麻烦的事情。</li><li><a href="https://github.com/vitoziv/VIPhotoView" target="_blank" rel="noopener">VIPhotoView</a> – 用于展示图片的工具类，因为是个 View，所以你可以放在任何地方显示。支持旋转，双击指定位置放大等。</li><li><a href="https://github.com/mwaterfall/MWPhotoBrowser" target="_blank" rel="noopener">MWPhotoBrowser</a> – 一个非常不错的照片浏览器，在github的star接近3000个，<a href="http://www.superqq.com/blog/2015/01/22/jie-jue-mwphotobrowserzhong-de-sdwebimagejia-zai-da-tu-dao-zhi-de-nei-cun-jing-gao-wen-ti/" target="_blank" rel="noopener">解决MWPhotoBrowser中的SDWebImage加载大图导致的内存警告问题</a>。</li><li><a href="https://github.com/objcio/issue-21-core-image-explorer" target="_blank" rel="noopener">core-image-explorer</a> – Core Image 滤镜处理图片– swift ，<a href="http://objccn.io/issue-21-6/" target="_blank" rel="noopener">Core Image 介绍</a>。</li><li><a href="https://github.com/rFlex/CoreImageShop" target="_blank" rel="noopener">CoreImageShop</a> – CoreImageShop图片滤镜处理– Mac app that let you create a complete Core Image Filter usable on iOS using SCRecorder。</li><li><a href="https://github.com/BradLarson/GPUImage" target="_blank" rel="noopener">GPUImage</a> – 处理图片效果。</li><li><a href="https://github.com/ruslanskorb/RSKImageCropper" target="_blank" rel="noopener">RSKImageCropper</a> – 适用于iOS的图片裁剪器，类似Contacts app，可上下左右移动图片选取最合适的区域。</li><li><a href="http://code.cocoachina.com/detail/232156" target="_blank" rel="noopener">WZRecyclePhotoStackView</a> – 删除照片交互–WZRecyclePhotoStackView，就是模拟生活中是删除或保留犹豫不决的情形而产生的。 在上滑，下滑的部分，借鉴了<a href="https://github.com/cwRichardKim/TinderSimpleSwipeCards" target="_blank" rel="noopener">TinderSimpleSwipeCards</a>。</li><li><a href="https://github.com/schwa/TimingFunctionEditor" target="_blank" rel="noopener">TimingFunctionEditor</a> – TimingFunctionEditor用swift编写， 贝塞尔曲线编辑器，编辑后可以预览或拷贝代码片段直接使用。P.S. 该项目采用更简单的依赖管理器 <a href="https://github.com/Carthage/Carthage" target="_blank" rel="noopener">Carthage</a> ，而非常用的 CocoaPods。<a href="http://www.cocoachina.com/ios/20141204/10528.html" target="_blank" rel="noopener">Carthage介绍中文</a>。</li><li><a href="https://github.com/aaronabentheuer/AAFaceDetection" target="_blank" rel="noopener">AAFaceDetection</a> – AAFaceDetection–swift，简单、实用的面部识别封装库。虽然该技术从 iOS 5 发展，不过真正有趣的应用还不多。。</li><li><a href="https://github.com/itouch2/PhotoTweaks" target="_blank" rel="noopener">PhotoTweaks</a> – 这个库挺赞的，正好是对图像操作的。</li><li><a href="https://github.com/contentful-labs/Concorde" target="_blank" rel="noopener">Concorde</a> – swift, Concorde, 一个可用于下载和解码渐进式 JPEG 的库, 可用来改善应用的用户体验。</li><li><a href="https://github.com/tristanhimmelman/ZoomTransition" target="_blank" rel="noopener">ZoomTransition</a> – swift, 通过手势操控图片的放大、缩小、旋转等自由变化效果的组件及示例。</li><li><a href="https://github.com/melvitax/AFImageHelper" target="_blank" rel="noopener">AFImageHelper</a> – swift,一套针对 UIImage 和 UIImageView 的实用扩展库，功能包含填色和渐变、裁剪、缩放以及具有缓存机制的在线图片获取。</li><li><a href="https://github.com/demon1105/PinterestSwift" target="_blank" rel="noopener">PinterestSwift</a> – swift,Pinterest 风格图片缩放、切换示例。</li><li><a href="https://github.com/KittenYang/KYElegantPhotoGallery" target="_blank" rel="noopener">KYElegantPhotoGallery</a> – 一个优雅的图片浏览库。</li><li><a href="https://github.com/gsdios/SDCycleScrollView" target="_blank" rel="noopener">SDCycleScrollView</a> – 无限循环自动图片轮播器(一步设置即可使用)。</li><li><a href="https://github.com/gsdios/SDPhotoBrowser" target="_blank" rel="noopener">SDPhotoBrowser</a> – 仿新浪动感图片浏览器,非常简单易用的图片浏览器，模仿微博图片浏览器动感效果，综合了图片展示和存储等多项功能。</li><li><a href="https://github.com/chennyhuang/HZPhotoBrowser" target="_blank" rel="noopener">HZPhotoBrowser</a> – 一个类似于新浪微博图片浏览器的框架（支持显示和隐藏动画；支持双击缩放，手势放大缩小；支持图片存储；支持网络加载gif图片，长图滚动浏览；支持横竖屏显示）。</li><li><a href="https://github.com/YiZhuoChen/PhotoStackView-Swift" target="_blank" rel="noopener">PhotoStackView-Swift</a> – PhotoStackView——照片叠放视图，<a href="http://blog.csdn.net/u013604612/article/details/46336657" target="_blank" rel="noopener">使用说明</a>。</li><li><a href="https://github.com/FlexMonkey/MarkingMenu" target="_blank" rel="noopener">MarkingMenu</a> – 基于手势、类似 Autodesk Maya 风格标记菜单及图片渲染。</li><li><a href="https://github.com/dsxNiubility/SXPhotoShow" target="_blank" rel="noopener">SXPhotoShow</a> – UICollectionViewFlowLayout流水布局 是当下collectionView中常用且普通的布局方式。本代码也写了三种好看的布局，其中LineLayout和流水布局有很大的相同点就直接继承UICollectionViewFlowLayout，然后StackLayout，CircleLayout这两种都是直接继承自最原始的UICollectionViewLayout 布局方案。</li></ul><h1 id="摄像照相视频音频处理"><a href="#摄像照相视频音频处理" class="headerlink" title="摄像照相视频音频处理"></a>摄像照相视频音频处理</h1><ul><li><a href="https://github.com/rFlex/SCRecorder" target="_blank" rel="noopener">SCRecorder</a> – SCRecorder 短视频录制。</li><li><a href="https://github.com/pingguo-zangqilong/VideoPushDemo" target="_blank" rel="noopener">VideoPushDemo</a> – 视频剪辑 <a href="http://www.jianshu.com/p/3006502912aa" target="_blank" rel="noopener">视频特效制作1</a> <a href="http://www.jianshu.com/p/6313025349a9" target="_blank" rel="noopener">视频特效制作2</a>。</li><li><a href="https://github.com/omergul123/LLSimpleCamera" target="_blank" rel="noopener">LLSimpleCamera</a> – A simple, customizable camera control for iOS， 摄像头。</li><li><a href="https://github.com/syedhali/EZAudio" target="_blank" rel="noopener">EZAudio</a> – EZAudio 是一个 iOS 和 OSX 上简单易用的音频框架，根据音量实时显示波形图，基于Core Audio，适合实时低延迟音频处理，非常直观。<a href="http://segmentfault.com/blog/news/1190000000370957" target="_blank" rel="noopener">中文介绍</a>,<a href="http://www.syedharisali.com/about" target="_blank" rel="noopener">官网</a>。</li><li><a href="http://ffmpeg.org/" target="_blank" rel="noopener">ffmpeg</a> – ffmpeg官网，<a href="http://www.cocoachina.com/ios/20150514/11827.html" target="_blank" rel="noopener">FFmpeg在iOS上完美编译</a>。</li><li><a href="http://www.videolan.org/" target="_blank" rel="noopener">VCL</a> – VCL官网。</li><li><a href="https://github.com/kolyvan/kxmovie" target="_blank" rel="noopener">kxmovie</a> – 使用ffmpeg的影片播放器，<a href="http://www.cocoachina.com/bbs/read.php?tid=145575" target="_blank" rel="noopener">修改说明</a>， <a href="https://github.com/kinglonghuang" target="_blank" rel="noopener">修改代码</a>。</li><li><a href="https://github.com/Bilibili/ijkplayer" target="_blank" rel="noopener">ijkplayer</a> – B站开源的视频播放器，支持Android和iOS。</li><li><a href="https://github.com/tumtumtum/StreamingKit" target="_blank" rel="noopener">StreamingKit</a> – StreamingKit流媒体音乐播放器。</li><li><a href="https://github.com/muhku/FreeStreamer" target="_blank" rel="noopener">FreeStreamer</a> – FreeStreamer流媒体音乐播放器，cpu占用非常小。</li><li><a href="https://github.com/douban/DOUAudioStreamer" target="_blank" rel="noopener">DOUAudioStreamer</a> – DOUAudioStreamer豆瓣的音乐流媒体播放器。</li><li><a href="https://github.com/fmpro/fmpro" target="_blank" rel="noopener">fmpro</a> – 电台播放器，支持锁屏歌词，支持基本播放流程，歌词展示，后台锁屏播放和控制以及锁屏后封面+歌词，<a href="https://github.com/jovisayhehe/fmpro_R" target="_blank" rel="noopener">fmpro_R</a> 。</li><li><a href="https://github.com/mmackh/IPDFCameraViewController" target="_blank" rel="noopener">IPDFCameraViewController</a> – 支持相机定焦拍摄、滤镜、闪光、实时边框检测以及透视矫正功能，并有简单易用的API。</li><li><a href="https://github.com/rFlex/SCRecorder" target="_blank" rel="noopener">SCRecorder</a> – 酷似 Instagram/Vine 的音频/视频摄像记录器，以 Objective-C 为基础的过滤器框架。 你可以做很多如下的操作：记录多个视频录像片段。删除任何你不想要的记录段。可以使用任何视频播放器播放片段。保存的记录可以在序列化的 NSDictionary 中使用。（在 NSUserDefaults 的中操作）添加使用 Core Image 的视频滤波器。可自由选择你需要的 parameters 合并和导出视频。</li><li><a href="https://github.com/GabrielAlva/Cool-iOS-Camera" target="_blank" rel="noopener">Cool-iOS-Camera</a> – Cool-iOS-Camera。</li><li><a href="https://github.com/IFTTT/FastttCamera" target="_blank" rel="noopener">FastttCamera</a> – FastttCamera 快速照相。</li><li><a href="https://github.com/itsmeichigo/ICGVideoTrimmer" target="_blank" rel="noopener">ICGVideoTrimmer</a> – ICGVideoTrimmer提供提供视频剪切的视图（类似系统相册中浏览视频时顶部那个条状视图）。左右两个边界选择器还能够自定义。</li><li><a href="http://d.cocoachina.com/code/detail/285717" target="_blank" rel="noopener">IOS录音和播放功能demo</a> – 比较完整的ios录音和播放功能的实现。</li><li><a href="https://github.com/imaginary-cloud/CameraManager" target="_blank" rel="noopener">CameraManager</a> – 相机管理封装类库。看着极好用的样子—-swift。</li><li><a href="https://github.com/msching/MCAudioInputQueue" target="_blank" rel="noopener">MCAudioInputQueue</a> – 简易录音类，基于AudioQueue的。</li><li><a href="https://github.com/vizllx/DraggableYoutubeFloatingVideo" target="_blank" rel="noopener">DraggableYoutubeFloatingVideo</a> – 展示像类似Youtube移动应用的那种浏览视频的效果，当点击某视频时能够从右下方弹出一个界面，并且该界面能够通过手势，再次收缩在右下方并继续播放。这是通过AutoLayout设计实现。</li><li><a href="http://www.penguin.cz/~utx/amr" target="_blank" rel="noopener">amr</a> – 做即时通讯的音频处理，录音文件是m4a，便于web端的音频播放。</li><li><a href="https://github.com/f33chobits/FSVoiceBubble" target="_blank" rel="noopener">FSVoiceBubble</a> – 一个轻量级播放录音音频的气泡：1.支持短时间的音频播放（支持网络音频）；2.播放时的声波动画；3.自定义包括声波的颜色，气泡的背景等。</li><li><a href="https://github.com/36Kr-Mobile/KRVideoPlayer" target="_blank" rel="noopener">KRVideoPlayer</a> – 类似Weico的播放器，支持竖屏模式下全屏播放。</li></ul><h1 id="响应式框架"><a href="#响应式框架" class="headerlink" title="响应式框架"></a>响应式框架</h1><ul><li><a href="https://github.com/ReactiveCocoa/ReactiveCocoa" target="_blank" rel="noopener">ReactiveCocoa</a> – ReactiveCocoa 受函数响应式编程激发。不同于使用可变的变量替换和就地修改，RAC提供Signals来捕获当前值和将来值（ <a href="http://yulingtianxia.com/blog/2014/07/29/reactivecocoa/" target="_blank" rel="noopener">使用介绍</a> ），<a href="http://iiiyu.com/2014/12/26/learning-ios-notes-thirty-six/" target="_blank" rel="noopener">不错的例子</a>,入门好教程：<a href="http://www.cocoachina.com/ios/20150123/10994.html" target="_blank" rel="noopener">ReactiveCocoa入门教程：第一部分</a> 。</li><li><a href="https://github.com/ReactiveCocoa/ReactiveAnimation" target="_blank" rel="noopener">ReactiveAnimation</a> – ReactiveCocoa 推出了一个叫 ReactiveAnimation 的子项目，直接用完全用 Swift 来实现了。</li><li><a href="https://github.com/gavinkwoe/BeeFramework" target="_blank" rel="noopener">BeeFramework</a> – 与ReactiveCocoa类似，<a href="http://www.lanrenios.com/tutorials/all/2012/1220/641.html" target="_blank" rel="noopener">BeeFramework用户指南 v1.0</a>。</li><li><a href="https://github.com/iMartinKiss/Objective-Chain" target="_blank" rel="noopener">Objective-Chain</a> – Objective-Chain是一个面向对象的响应式框架，作者表示该框架吸收了 ReactiveCocoa 的思想，并且想做得更面向对象一些。</li></ul><h1 id="消息相关"><a href="#消息相关" class="headerlink" title="消息相关"></a>消息相关</h1><h2 id="消息推送客户端"><a href="#消息推送客户端" class="headerlink" title="消息推送客户端"></a>消息推送客户端</h2><ul><li><a href="https://github.com/sagiwei/SGPush/tree/master/SGPushDemo" target="_blank" rel="noopener">SGPushDemo</a> – 消息推送客户端</li><li><a href="https://github.com/mattt/Orbiter" target="_blank" rel="noopener">Orbiter</a> – 消息推送客户端:Push Notification Registration for iOS.</li><li><a href="https://github.com/ios44first/PushDemo" target="_blank" rel="noopener">PushDemo</a> – 客户端消息接收消息代码，<a href="http://blog.sina.com.cn/s/blog_71715bf80102uy2k.html" target="_blank" rel="noopener">IOS开发之 —- IOS8推送消息注册</a> ， <a href="http://my.oschina.net/u/2340880/blog/413584" target="_blank" rel="noopener">分分钟搞定IOS远程消息推送</a>。</li></ul><h2 id="消息推送服务端"><a href="#消息推送服务端" class="headerlink" title="消息推送服务端"></a>消息推送服务端</h2><ul><li><a href="https://code.google.com/p/javapns/downloads/list" target="_blank" rel="noopener">javapns源代码</a> – 消息推送的java服务端代码，注意：DeviceToken中间不能有空格。</li><li><a href="https://github.com/stefanhafeneger/PushMeBaby" target="_blank" rel="noopener">pushMeBaby</a> – Mac端消息推送端代码，注意：DeviceToken中间要有空格。</li></ul><h2 id="通知相关"><a href="#通知相关" class="headerlink" title="通知相关"></a>通知相关</h2><ul><li><a href="https://github.com/jessesquires/JSQNotificationObserverKit" target="_blank" rel="noopener">JSQNotificationObserverKit</a> – 一款轻量、易用的通知发送及响应框架类库。作者是知名开源项目 JSQMessagesViewController（Objective-C 版即时聊天）的作者 Jesse Squires.</li><li><a href="https://github.com/Glow-Inc/GLPubSub" target="_blank" rel="noopener">GLPubSub</a> – 一个简短实用的 NSNotificationCenter 的封装。</li><li><a href="https://github.com/lizyyy/Homeoff" target="_blank" rel="noopener">Homeoff</a> – 用swift写了一个模仿Launcher通知中心快捷方式的应用。支持20个应用，并增加了一个返回到桌面来解放Home键的功能。</li><li><a href="https://github.com/jaydee3/JDStatusBarNotification" target="_blank" rel="noopener">JDStatusBarNotification</a> – 在状态栏顶部显示通知。可以自定义颜色字体以及动画。支持进度显示以及显示状态指示器。</li></ul><h1 id="版本新API的Demo"><a href="#版本新API的Demo" class="headerlink" title="版本新API的Demo"></a>版本新API的Demo</h1><ul><li><a href="https://github.com/WildDylan/appleSample" target="_blank" rel="noopener">appleSample</a> – iOS 苹果官方Demo合集， <a href="https://developer.apple.com/library/ios/navigation/#section=Resource%20Types&amp;topic=Sample%20Code" target="_blank" rel="noopener">官方demo</a>.</li><li><a href="https://github.com/shu223/iOS7-Sampler" target="_blank" rel="noopener">iOS7-Sampler</a> – 整合了iOS7.0的一些十分有用的特性，比如：Dynamic Behaviors、碰撞检测、语音合成、视图切换、图像滤镜、三维地图、Sprite Kit（动画精灵）、Motion Effect（Parallax）、附近蓝牙或者wifi搜索连接、AirDrop、运动物体追踪（iPhone 5S以上，需要M7处理器）等等。对于日常的应用开发十分实用。</li><li><a href="https://github.com/shu223/iOS8-Sampler" target="_blank" rel="noopener">iOS8-Sampler</a> – 日本的shuさん制作的 iOS8 参考代码集。01.Audio Effects ；02.New Image Filters；03.Custom Filters；04.Metal Basic；05.Metal Uniform Streaming；06.SceneKit；07.HealthKit；08.TouchID；09.Visual Effects；10.WebKit；11.UIAlertController；12.User Notification；13.Pedometer；14.AVKit；15.Histogram；16.Code Generator；17.New Fonts；18.Popover；19.Accordion Fold Transition</li><li><a href="https://github.com/MartinRGB/MTSwift-Learning" target="_blank" rel="noopener">MTSwift-Learning</a> – 通过一些简单项目实战演练开始学习 Swift 。</li><li><a href="https://github.com/shinobicontrols/iOS8-day-by-day" target="_blank" rel="noopener">iOS8-day-by-day</a> – swift。</li><li><a href="https://github.com/shinobicontrols/iOS9-day-by-day" target="_blank" rel="noopener">iOS9-day-by-day</a> – swfit <a href="http://www.jianshu.com/p/039f8de6ee4d" target="_blank" rel="noopener">iOS9 Day-by-Day :: Day 2 :: UI Testing</a>。</li><li><a href="http://www.cocoachina.com/ios/20150714/12557.html" target="_blank" rel="noopener">iOS 9 分屏多任务</a> – iOS 9 分屏多任务：Slide Over &amp; Split View快速入门（中文版）。</li></ul><h1 id="代码安全与密码"><a href="#代码安全与密码" class="headerlink" title="代码安全与密码"></a>代码安全与密码</h1><ul><li><a href="https://github.com/Polidea/ios-class-guard" target="_blank" rel="noopener">ios-class-guard</a> – 一个用于混淆iOS的类名、方法名以及变量名的开源库–有人反映编译出来的app运行不了。</li><li><a href="https://www.polidea.com/#!heartbeat/blog/Protecting_iOS_Applications" target="_blank" rel="noopener">《Protecting iOS Applications》</a>：文章系统地介绍了如何保护iOS程序的代码安全，防止反汇编分析。</li><li><a href="https://github.com/facebook/fishhook" target="_blank" rel="noopener">fishhook</a> – fishhook是Facebook开源的一个可以hook系统方法的工具。</li><li><a href="https://github.com/smilingxinyi/GesturePassword" target="_blank" rel="noopener">GesturePassword</a> – 一个iOS手势密码功能实现，iPad/iPhone 都可以用，没有使用图片，里面可以通过view自己添加。keychain做的数据持久化，利用苹果官方KeychainItemWrapper类。操作部分都在controller了。删除直接用一下clear。</li><li><a href="https://github.com/Juuman/JMPasswordView" target="_blank" rel="noopener">JMPasswordView</a> – 简单实用的手势密码，效果可自行调控。</li><li><a href="http://code.cocoachina.com/detail/298556/%E4%BB%BF%E5%AF%86%E7%A0%81%E9%94%81-%E4%B9%9D%E5%AE%AB%E6%A0%BC/" target="_blank" rel="noopener">仿密码锁-九宫格</a> – 仿密码锁-九宫格，主要是使用UIButton 手势事件 UIBezierPath画图，解锁失败弹出“密码错误”。</li><li><a href="https://github.com/nsdictionary/CoreLock" target="_blank" rel="noopener">CoreLock</a> – 本框架是高仿支付宝，并集成了所有功能，并非一个简单的解锁界面展示。个人制作用时1周多，打造解锁终结者框架。</li><li><a href="https://github.com/crazypoo/LikeAlipayLockCodeView" target="_blank" rel="noopener">LikeAlipayLockCodeView</a> – 高仿支付宝手势解锁（超级版）。</li><li><a href="https://github.com/iosdeveloperpanc/PCGestureUnlock" target="_blank" rel="noopener">PCGestureUnlock</a> – 目前最全面最高仿支付宝的手势解锁，而且提供方法进行参数修改，能解决项目开发中所有手势解锁的开发。</li></ul><h1 id="测试及调试"><a href="#测试及调试" class="headerlink" title="测试及调试"></a>测试及调试</h1><ul><li><a href="https://github.com/tapwork/HeapInspector-for-iOS" target="_blank" rel="noopener">HeapInspector</a> – HeapInspector是一个用于检测应用中的内存泄漏的开源调试工具。</li><li><a href="http://try.crashlytics.com/" target="_blank" rel="noopener">Crashlytics</a> – Crashlytics 崩溃报告 崩溃日志 <a href="http://www.infoq.com/cn/articles/crashlytics-crash-statistics-tools" target="_blank" rel="noopener">使用说明</a> 。</li><li><a href="https://github.com/RuiAAPeres/UIViewController-Swizzled" target="_blank" rel="noopener">UIViewController-Swizzled</a> – 把你进入的每一个controller的类名打出来,如果看一些特别复杂的项目的时候直接运行demo就可以知道执行次序了。</li><li><a href="https://code.google.com/p/snoop-it/" target="_blank" rel="noopener">snoop-it</a> – snoop-it比UIViewController-Swizzled好用，代码托管在google上。</li><li><a href="https://github.com/zenangst/Versions" target="_blank" rel="noopener">Versions</a> – 版本比较小工具。</li><li><a href="http://code4app.com/ios/MobileWebPerformanceTest/5465d3e9933bf00c658b4f43" target="_blank" rel="noopener">MobileWebPageTest</a> – MobileWebPageTest是用来测试移动网页性能的软件，它可以对页面的加载和渲染过程进行截屏，协助开发者分析出页面性能瓶颈。</li><li><a href="https://github.com/Coneboy-k/KKLog" target="_blank" rel="noopener">KKLog</a> – 一个日志管理系统。</li><li><a href="https://github.com/emaloney/CleanroomLogger" target="_blank" rel="noopener">CleanroomLogger</a> – 相当于 CocoaLumberjack 或 Log4j 的 Swift 版本，功能上甚至更强大。另外，源代码中已经内含了完整的 API 文档，使用非常方便。 <a href="https://github.com/czechboy0/Buildasaur" target="_blank" rel="noopener">Buildasaur</a> – 自动测试框架 Buildasaur。<a href="https://github.com/adad184/MMPlaceHolder" target="_blank" rel="noopener">MMPlaceHolder</a> – 一行代码显示UIView的位置及相关参数。 <a href="http://www.devtf.cn/?p=739" target="_blank" rel="noopener">使用Quick框架和Nimble来测试ViewControler</a> – Quick是一个用于创建BDD测试的框架。配合Nimbl，可以为你创建更符合预期目标的测试。</li><li><a href="https://github.com/KrauseFx/fastlane" target="_blank" rel="noopener">fastlane</a> – 一套iOS开发和持续集成的命令行工具fastlane，可以用来快速搭建CI甚至自动提交的开发环境。这套工具中包括了上传ipa文件，自动截取多语言截屏，生成推送证书，管理产品证书等一系列实用工具。</li><li><a href="https://github.com/kif-framework/KIF" target="_blank" rel="noopener">KIF</a> – 是一个开源的用户界面UI测试框架. 使用 KIF, 并利用 iOS中的辅助功能 API, 你将能够编写模拟用户输入，诸如点击，触摸和文本输入，自动化的UI测试.</li><li><a href="https://github.com/Quick/Quick" target="_blank" rel="noopener">Quick</a> – 用于Swift中的单元测试（也可用于Objective-C），与Xcode整合在一起。如果你是Objective-C的粉丝，我建议用Specta代替这个，但是对Swift使用者来说，Quick是最佳选择。</li></ul><h1 id="AppleWatch"><a href="#AppleWatch" class="headerlink" title="AppleWatch"></a>AppleWatch</h1><ul><li><a href="https://github.com/eleks/rnd-apple-watch-tesla" target="_blank" rel="noopener">Tesla汽车AppleWatch app demo演示</a> – 通过AppleWatch控制特斯拉汽车，同时可以看到汽车的相关信息，比如剩余电量、可续行里程等，以及解锁/上锁车门、调节司机和乘客的四区域空调温度、开启车辆大灯、定位汽车等。<a href="http://www.cocoachina.com/ios/20150205/11116.html" target="_blank" rel="noopener">源码推荐说明</a>。</li><li><a href="https://github.com/kostiakoval/WatchKit-Apps" target="_blank" rel="noopener">WatchKit-Apps</a> – WatchKit 开源小项目示例集锦。是不可多得地学习 WatchKit 的示例式教程（1.如何创建一个简单的交互式计数器；2.如何从手表上控制iOS app；3.如何在WatchKit app和iOS app之间共享数据；4.如何创建一个拥有不同背景色的数字时钟；5.展示不同的UI层；6.如何创建支持滑动手势的应用程序。）。</li><li><a href="https://github.com/KittenYang/KYVoiceCurve" target="_blank" rel="noopener">KYVoiceCurve</a> – 类似Apple Watch中语音的声音曲线动画。</li><li><a href="https://github.com/Instagram/IGInterfaceDataTable" target="_blank" rel="noopener">IGInterfaceDataTable</a> – IGInterfaceDataTable是WKInterfaceTable对象的一个类别，可以让开发者更简单地配置多维数据。该项目使用类似UITableViewDataSource的数据源模式配置Apple Watch表格，而不是将数据结构扁平化成为数组。</li><li><a href="http://www.swiftkiller.com/?p=613" target="_blank" rel="noopener">Apple Watch开发教程资料汇总</a> – Apple Watch开发教程资料汇总。</li><li><a href="https://github.com/contentful-labs/Stargate" target="_blank" rel="noopener">Stargate</a> – 通过 iPhone 桥接实现 Mac 与 Watch 的即时通讯。Stargate 通过封装两个优秀的基础类库 MMWormhole 和 PeerKit 实现高效的通讯应用。–swift</li><li><a href="https://github.com/sandofsky/soon" target="_blank" rel="noopener">soon</a> – 一款倒计时 WatchKit 示例应用。作者从架构的角度，思考如何设计一款完整、通讯高效且性能又好的 WatchKit 扩展应用。该示例学习性非常强。–swift</li><li><a href="https://github.com/shu223/watchOS-2-Sampler" target="_blank" rel="noopener">watchOS-2-Sampler</a> – 基于 watchOS 2 若干新特性，写了相应的示例代码供大家学习、参考。</li><li><a href="https://github.com/KhaosT/HMWatch" target="_blank" rel="noopener">HMWatch</a> – HMWatch是个有待完善的watchOS 2.0 HomeKit 应用示例。</li><li><a href="https://github.com/manavgabhawala/CocoaMultipeer" target="_blank" rel="noopener">CocoaMultipeer</a> – CocoaMultipeer这个开源框架支持OS X, iOS和watchOS设备间的点对点通信，解决watchOS和Mac之间通信的方案还是很有用的。</li><li><a href="https://github.com/GetHighstreet/HighstreetWatchApp" target="_blank" rel="noopener">HighstreetWatchApp</a> – 是电商平台Highstreet针对App Watch的一款应用，该demo中加载的是虚拟数据。</li></ul><h1 id="VPN"><a href="#VPN" class="headerlink" title="VPN"></a>VPN</h1><ul><li><a href="https://github.com/lexrus/vpnon/" target="_blank" rel="noopener">vpnon</a> – swift的VPN On 的源码和本地化内容都是开放的: <a href="https://crowdin.com/project/vpnon" target="_blank" rel="noopener">官方网站</a>。</li><li><a href="https://github.com/CatchChat/Hydro.network" target="_blank" rel="noopener">Hydro.network</a> – <a href="http://zhowkev.in/2015/03/09/hydro-network-de-kai-fa-lu-cheng/" target="_blank" rel="noopener">Hydro.network 的开发旅程</a>, <a href="https://gitcafe.com/Catch/Hydro.network" target="_blank" rel="noopener">gitcafe</a>。</li></ul><h1 id="完整项目"><a href="#完整项目" class="headerlink" title="完整项目"></a>完整项目</h1><ul><li><a href="https://github.com/singro/v2ex" target="_blank" rel="noopener">v2ex</a> – v2ex 的客户端，新闻、论坛。</li><li><a href="https://github.com/wikimedia/apps-ios-wikipedia" target="_blank" rel="noopener">apps-ios-wikipedia</a> – apps-ios-wikipedia 客户端。</li><li><a href="https://github.com/uber/jetstream-ios" target="_blank" rel="noopener">jetstream-ios</a> – 一款 Uber 的 MVC 框架。它同时提供了多用户实时通讯支持，一旦启动 JetStream 后端服务，通过 WebSocket 协议可以分分钟建立多用户实时通讯应用。</li><li><a href="https://github.com/jpsim/DeckRocket" target="_blank" rel="noopener">DeckRocket</a> – 在相同 WiFi 网络环境内，通过iPhone 控制并播放 Mac 中的 PDF 文档。</li><li><a href="https://github.com/JayFang1993/ScanBook" target="_blank" rel="noopener">ScanBook</a> – 扫扫图书:可以扫描条形码查询图书，也可以关键字搜索，遇到合乎你口味的书，还可以看看别人的读书笔记，不同角度去体会。</li><li><a href="https://github.com/MengTo/DesignerNewsApp" target="_blank" rel="noopener">DesignerNewsApp</a> – Swift 开发的 DesignerNews 客户端，看着美美的！</li><li><a href="https://github.com/KittenYang/KYWeibo" target="_blank" rel="noopener">KYWeibo</a> – 调用新浪API自己写的第三方微博客户端。</li><li><a href="https://github.com/li6185377/DouQu_IOS" target="_blank" rel="noopener">DouQu_IOS</a> – 逗趣IOS手机端（一款笑话软件）,拥有完整的功能的手机应用app 。</li><li><a href="https://github.com/itjhDev/itjh" target="_blank" rel="noopener">IT江湖iOS客户端</a> – IT江湖iOS客户端。</li><li><a href="https://github.com/artsy/eidolon" target="_blank" rel="noopener">Eidolon</a> – 艺术品拍卖的投标亭平台，用swift与反应式编程框架 ReactiveCocoa。</li><li><a href="https://github.com/nonstriater/CrazyPuzzle" target="_blank" rel="noopener">CrazyPuzzle</a> – 模仿“看图猜成语”App，功能齐全，配有音效，效果很不错。游戏使用cocoa框架完成，没有使用cocos2d的框架。</li><li><a href="https://github.com/Tim9Liu9/WhoCall" target="_blank" rel="noopener">WhoCall</a> – 谁CALL我，iOS来电信息语音提醒，无需越狱。（需要iOS 7.0及以上版本。)骚扰电话预警、来电归属地提醒、联系人姓名播报，这些有中国特色人性化的电话功能，iOS上也应该有。电话提醒、私有API。</li><li><a href="http://www.devtf.cn/?p=562" target="_blank" rel="noopener">仿iOS猎豹垃圾清理(实现原理+源码)</a> – 仿iOS猎豹垃圾清理(实现原理+源码),用到私有API。</li><li><a href="https://github.com/sam408130/DSLolita" target="_blank" rel="noopener">DSLolita</a> – 模仿新浪微博做的一款app，有发送博文，评论，点赞，私聊功能。</li><li><a href="https://github.com/gsdios/GSD_ZHIFUBAO" target="_blank" rel="noopener">GSD_ZHIFUBAO</a> – 支付宝高仿版。</li><li><a href="https://github.com/thoughtbot/Tropos" target="_blank" rel="noopener">Tropos</a> – Tropos, 由 thoughtbot 推出的一款用 Objective-C 写的开源天气类应用, 截至今天, thoughtbot 已在 GitHub 上贡献了 174 个开源项目, 实在令人敬佩。</li><li><a href="https://github.com/leichunfeng/MVVMReactiveCocoa" target="_blank" rel="noopener">MVVMReactiveCocoa</a> – 它是我利用业余时间开发的基于MVVM和RAC的GitHub第三方开源客户端，是我的诚意之作。<a href="https://itunes.apple.com/cn/app/id961330940?mt=8" target="_blank" rel="noopener">AppStore地址</a>，欢迎下载使用GitBucket和收藏MVVMReactiveCocoa。</li><li><a href="https://github.com/dasdom/Tomate" target="_blank" rel="noopener">Tomate</a> – 这个圆盘式计时器让你更专注于工作或学习。P.S. App Store 上架收费应用（0.99 欧）。</li><li><a href="https://github.com/joeshang/StoveFireiOSMenu" target="_blank" rel="noopener">StoveFireiOSMenu</a> – 炉火餐饮系统iPad点餐端。</li><li><a href="https://github.com/belm/BaiduFM-Swift" target="_blank" rel="noopener">BaiduFM-Swift</a> – 百度FM, swift语言实现，基于最新xcode6.3+swift1.2,初步只是为了实现功能，代码比较粗燥，后面有时间会整理，支持Apple Watch。</li><li><a href="https://github.com/ZhongTaoTian/WNXHuntForCity" target="_blank" rel="noopener">WNXHuntForCity</a> – iOS高仿城觅项目（开发思路和代码）。</li><li><a href="https://github.com/zyprosoft/ZYChat" target="_blank" rel="noopener">ZYChat</a> – 关于聊天界面的可消息类型扩展，响应绑定设计。</li><li><a href="https://github.com/minxiaoming/NiceAppDemo" target="_blank" rel="noopener">NiceAppDemo</a> – 仿最美应用-每日最美的钢琴律动效果。</li><li><a href="https://github.com/lookingstars/meituan" target="_blank" rel="noopener">meituan</a> – 美团5.7iOS版（高仿），功能包括，团购首页，高德地图搜索附近美食并显示在地图上，上门服务，商家，友盟分享。。</li></ul><h1 id="好的文章"><a href="#好的文章" class="headerlink" title="好的文章"></a>好的文章</h1><ul><li><a href="http://www.jianshu.com/p/38cd35968864" target="_blank" rel="noopener">自定义转场动画</a> – 3 种方法～ 关于自定义转场动画。</li><li><a href="http://lcepy.github.io/2015/07/14/iOS%E6%8F%90%E9%AB%98%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%B3%95%E5%92%8C%E5%B7%A5%E5%85%B7/" target="_blank" rel="noopener">iOS提高效率的方法和工具</a> – iOS提高效率的方法和工具。</li><li><a href="http://jsonapi.org.cn/" target="_blank" rel="noopener">用 JSON 构建 API 的标准指南</a> – 用 JSON 构建 API 的标准指南。</li></ul><h1 id="Xcode插件"><a href="#Xcode插件" class="headerlink" title="Xcode插件"></a>Xcode插件</h1><ul><li><a href="http://www.cocoachina.com/special/xcode/" target="_blank" rel="noopener">iOS开发进阶，从Xcode开始</a> – 学习使用Xcode构建出色的应用程序！</li><li>在Xcode启动的时候，Xcode将会寻找位于~/Library/Application Support/Developer/Shared/Xcode/Plug-ins文件夹中的后缀名为.xcplugin的bundle作为插件进行加载（运行其中的可执行文件）。<a href="http://studentdeng.github.io/blog/2014/02/21/xcode-plugin-fun/" target="_blank" rel="noopener">Xcode5 Plugins 开发简介</a> <a href="http://joeyio.com/ios/2013/07/25/write_xcode4_plugin_of_your_own/" target="_blank" rel="noopener">写个自己的Xcode4插件</a></li><li><a href="http://www.onevcat.com/2013/02/xcode-plugin/" target="_blank" rel="noopener">Xcode 4 插件制作入门</a> – Xcode 4 插件制作入门:Xcode所使用的所有库都包含在Xcode.app/Contents/的Frameworks，SharedFrameworks和OtherFrameworks三个文件夹下。其中和Xcode关系最为直接以及最为重要的是Frameworks中的IDEKit和IDEFoundation，以及SharedFrameworks中的DVTKit和DVTFoundation四个。</li><li><a href="https://github.com/rickytan/RTImageAssets" target="_blank" rel="noopener">RTImageAssets</a> – 一个 Xcode 插件，用来生成 @3x 的图片资源对应的 @2x 和 @1x 版本。<a href="https://itunes.apple.com/app/asset-catalog-creator-free/id866571115?mt=12" target="_blank" rel="noopener">Asset Catalog Creator</a> 功能强大，能自动生成全部尺寸：包括App Icons、Image Sets、Launch Screens Generator。</li><li><a href="https://github.com/onevcat/VVDocumenter-Xcode" target="_blank" rel="noopener">VVDocumenter-Xcode</a> – 一个Xcode插件，build后，随手打开一个你之前的项目，然后在任意一个方法上面连按三下”/”键盘，就ok了。</li><li><a href="https://github.com/google/j2objc" target="_blank" rel="noopener">java2Objective-c</a> – Google公司出得java转Obje-C转换工具，转换逻辑，不转换UI。</li><li><a href="https://github.com/kzaher/RegX" target="_blank" rel="noopener">RegX</a> – 专治代码强迫症的 Xcode 插件，使用 Swift 和 Objective-C 编写。其用竖向对齐特定源代码的元素，使得代码更易读和易理解。<a href="http://www.cocoachina.com/ios/20141224/10743.html" target="_blank" rel="noopener">说明</a> ； 菜单：xcode——》Edit-》Regx 。</li><li><a href="https://github.com/ksuther/KSImageNamed-Xcode" target="_blank" rel="noopener">KSImageNamed</a> – 自动完成，特别是如果你正在写Objective-C，如果Xcode能自动完成文件名难道不会很伟大吗？比如图像文件的名称。</li><li><a href="https://github.com/FuzzyAutocomplete/FuzzyAutocompletePlugin" target="_blank" rel="noopener">FuzzyAutocomplete</a> – Xcode的实现自动完成还不完美，此插件能给出你所期望或想要的建议，设置：xcode-》Editor-》FuzzyAutocomplete-》plugin settings。</li><li><a href="https://github.com/johnno1962/GitDiff" target="_blank" rel="noopener">GitDiff</a> – Xcode的代码编辑器的一个微妙的补强，加上了足够的可见信息以了解上次git提交以来发生了什么变化，设置：xcode-》Edit-》GitDiff。</li><li><a href="https://github.com/trawor/XToDo" target="_blank" rel="noopener">XToDo</a> – 这个插件不仅凸显TODO，FIXME，???，以及！！！注释，也在便利列表呈现他们。 菜单：xcode-》view-》snippets; 调出列表显示: xcode-》view-》ToDo List ： ctrl + T 。</li><li><a href="https://github.com/limejelly/Backlight-for-XCode" target="_blank" rel="noopener">Backlight</a> – 突出显示当前正在编辑的行。菜单：xcode-》view-》Backlight 。</li><li><a href="https://github.com/kattrali/cocoapods-xcode-plugin" target="_blank" rel="noopener">CocoaPods</a> – 该CocoaPods的插件增加了一个CocoaPods菜单到Xcode的产品菜单。如果你不喜欢命令行，那么你一定会喜欢这个插件。 <a href="http://tangqiaoboy.gitcafe.io/blog/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/" target="_blank" rel="noopener">用CocoaPods做iOS程序的依赖管理</a> 。</li><li><a href="https://github.com/markohlebar/Peckham" target="_blank" rel="noopener">Peckham</a> – 添加import语句比较麻烦，此插件 按Command-Control-P，给出的选项列表中选择要的头文件。先要安装<a href="http://alcatraz.io/" target="_blank" rel="noopener">Alcatraz</a> ,在终端输入： <strong>curl -fsSL<a href="https://raw.github.com/supermarin/Alcatraz/master/Scripts/install.sh" target="_blank" rel="noopener">https://raw.github.com/supermarin/Alcatraz/master/Scripts/install.sh</a> | sh</strong> ； 重启xcode-》window-》Package Manager：搜索 <strong>Peckham</strong> 安装，打开Peckham.xcodeproj，编译 Peckham target，重启Xcode 。</li><li><a href="https://github.com/lucholaf/Auto-Importer-for-Xcode" target="_blank" rel="noopener">Auto-Importer</a> – Auto-Importer是一个自动导入类对应的头文件的Xcode插件。</li><li><a href="http://alcatraz.io/" target="_blank" rel="noopener">Alcatraz</a> -使用Alcatraz来管理Xcode插件 <a href="http://tangqiaoboy.gitcafe.io/blog/2014/03/05/use-alcatraz-to-manage-xcode-plugins/" target="_blank" rel="noopener">使用说明</a> 。</li><li><a href="https://github.com/kimsungwhee/KSHObjcUML" target="_blank" rel="noopener">KSHObjcUML</a> -KSHObjcUML 是一个 Objective-C 类引用关系图的 Xcode 插件。</li><li><a href="https://github.com/omz/ColorSense-for-Xcode" target="_blank" rel="noopener">ColorSense-for-Xcode</a> – 颜色插件，安装之后，就不用根据RGB选择颜色，直接从取色板中取颜色，会自动补齐RGB代码。。</li><li><a href="http://www.imooc.com/wenda/detail/237132" target="_blank" rel="noopener">10款提高iOS开发效率的XCode插件</a> – 10款提高iOS开发效率的XCode插件：1. XcodeColors；5. ACCodeSnippetRepository；10. Dash for Xcode。</li><li><a href="https://github.com/MakeZL/ZLGotoSandboxPlugin" target="_blank" rel="noopener">ZLGotoSandboxPlugin</a> – 支持Xcode快捷键了跳转当前应用沙盒了！快捷键是 Shift+Common+w。</li><li><a href="https://github.com/burczyk/XcodeSwiftSnippets" target="_blank" rel="noopener">XcodeSwiftSnippets</a> – XcodeSwiftSnippets, 提供了很多可在 Xcode 上使用的 Swift 代码片段, 通过自动补全的方式极大的提高了开发效率， <a href="https://github.com/Xcode-Snippets/Objective-C" target="_blank" rel="noopener">另外还有 Objective-C 版的</a>。</li><li><a href="https://vimeo.com/128713880" target="_blank" rel="noopener">CoPilot</a> – 通过此插件， Xcode 可以协同编程了（采用 WebSocket 通讯）。如此强大的“黑工具”，不爱它能行吗。</li><li><a href="https://github.com/EnjoySR/ESJsonFormat-Xcode" target="_blank" rel="noopener">ESJsonFormat-Xcode</a> – 将Json格式化输出为模型的属性。</li><li><a href="https://github.com/stefanceriu/SCXcodeMiniMap" target="_blank" rel="noopener">SCXcodeMiniMap</a> – Xcode迷你小地图-SCXcodeMiniMap。</li></ul><h1 id="美工资源"><a href="#美工资源" class="headerlink" title="美工资源"></a>美工资源</h1><ul><li><a href="https://github.com/markohlebar/Peckham" target="_blank" rel="noopener">TWG_Retina_Icons</a> – 一套支持 Retina 高清屏的 iPhone 免费图标集。</li><li><a href="https://github.com/cparnot/ASCIImage" target="_blank" rel="noopener">ASCIImage</a> – 使用 NSString 创建 image，<a href="http://cocoamine.net/blog/2015/03/20/replacing-photoshop-with-nsstring/" target="_blank" rel="noopener">说明</a>。</li><li><a href="https://github.com/RayPS/my-sketch-colors" target="_blank" rel="noopener">my-sketch-colors</a> – 配色。</li><li><a href="http://www.imooc.com/wenda/detail/250367" target="_blank" rel="noopener">Font Awesome</a> – Font Awesome：一套绝佳的图标字体库和CSS框架，详细的安装方法请参考<a href="http://fortawesome.github.io/Font-Awesome/icons/" target="_blank" rel="noopener">官方网站</a><a href="http://fontawesome.dashgame.com/" target="_blank" rel="noopener">中文网站</a>,<a href="https://github.com/FortAwesome/Font-Awesome" target="_blank" rel="noopener">GitHub地址</a> 。</li><li><a href="https://github.com/yannickl/DynamicColor" target="_blank" rel="noopener">DynamicColor</a> – 强大的颜色操作扩展类。通过该类，你可以通过扩展方法基于某个颜色得到不同深浅、饱和度、灰度、色相，以及反转后的新颜色。是不可多得的好类库。</li></ul><h1 id="其他资源"><a href="#其他资源" class="headerlink" title="其他资源"></a>其他资源</h1><ul><li><a href="http://githuber.info/#/index" target="_blank" rel="noopener">githuber</a> – 最好用的GitHub人才搜索工具。</li><li><a href="https://www.codatlas.com/" target="_blank" rel="noopener">codatlas</a> – 源代码搜索利器。</li><li><a href="https://searchcode.com/" target="_blank" rel="noopener">searchcode</a> – 源代码搜索利器：来自悉尼的代码搜索引擎汇聚了 Github, Bitbucket, Sourceforge…等多家开源站点超20万个项目、180亿行源代码，能以特殊字符、语言、仓库和源方式从90多种语言找到函数、API的真实代码。</li><li><a href="https://github.com/kitematic/kitematic" target="_blank" rel="noopener">kitematic</a> – Mac 上使用 Docker 最简单的方案。</li></ul><h1 id="开发资源"><a href="#开发资源" class="headerlink" title="开发资源"></a>开发资源</h1><h2 id="开发资料"><a href="#开发资料" class="headerlink" title="开发资料"></a>开发资料</h2><ul><li><a href="http://www.douban.com/note/276160185/?type=like" target="_blank" rel="noopener">豆瓣iOS开源库列表</a> – 豆瓣iOS开源库列表，很多开源项目。</li><li><a href="https://github.com/AttackOnDobby/iOS-Core-Animation-Advanced-Techniques" target="_blank" rel="noopener">iOS-Core-Animation-Advanced-Techniques</a> – 中文版iOS 高级动画技术。</li><li><a href="http://www.jianshu.com/p/50b63a221f09" target="_blank" rel="noopener">iOS开发的一些奇巧淫技1</a> – TableView不显示没内容的Cell怎么办; 键盘事件：<a href="https://github.com/hackiftekhar/IQKeyboardManager" target="_blank" rel="noopener">IQKeyboardManager</a>; app不流畅:<a href="https://github.com/kconner/KMCGeigerCounter" target="_blank" rel="noopener">KMCGeigerCounter</a>; CoreData用起来好烦:<a href="https://github.com/magicalpanda/MagicalRecord" target="_blank" rel="noopener">MagicRecord</a>; CollectionView实现悬停的header:<a href="https://github.com/jamztang/CSStickyHeaderFlowLayout" target="_blank" rel="noopener">CSStickyHeaderFlowLayout</a>。</li><li><a href="http://www.jianshu.com/p/08f194e9904c" target="_blank" rel="noopener">iOS开发的一些奇巧淫技2</a> – 用一个pan手势来代替UISwipegesture的各个方向、拉伸图片、播放GIF、上拉刷新、把tableview里cell的小对勾的颜色改变、navigationbar弄成透明的而不是带模糊的效果、改变uitextfield placeholder的颜色和位置。</li><li><a href="http://code4app.com/article/cocoapods-install-usage" target="_blank" rel="noopener">cocoapods安装指南</a> – cocoapods安装指南。</li><li><a href="https://github.com/johnno1962/Remote" target="_blank" rel="noopener">RemoteControl</a> – Control your iPhone from inside Xcode for end-to-end testing 。</li><li><a href="http://objccn.io/issue-13-1/" target="_blank" rel="noopener">MVVM 介绍</a> – 替换MVC的开发模式。</li><li><a href="http://apistore.baidu.com/astore/index" target="_blank" rel="noopener">第三方接口</a> – 基本所有第三方接口都在这，再也不用那么麻烦去找了。</li><li><a href="http://yyny.me/ios/%E6%8F%90%E9%AB%98iOS%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E7%9A%84%E6%96%B9%E6%B3%95%E5%92%8C%E5%B7%A5%E5%85%B7/" target="_blank" rel="noopener">提高iOS开发效率的方法和工具</a> – 提高iOS开发效率的方法和工具。</li><li><a href="https://github.com/oa414/objc-zen-book-cn" target="_blank" rel="noopener">禅与 Objective-C 编程艺术</a> – 禅与 Objective-C 编程艺术 （Zen and the Art of the Objective-C Craftsmanship 中文翻译）。</li><li><a href="http://www.imooc.com/article/1216" target="_blank" rel="noopener">Objective-C编码规范：26个方面解决iOS开发问题</a> – 【Objective-C编码规范：26个方面解决iOS开发问题：“我们制定Objective-C编码规范的原因是我们能够在我们的书，教程和初学者工具包的代码保持优雅和一致。”今天分享的规范来自raywenderlich.com团队成员共同完成的，希望对学习OC的朋友们有所指导和帮助。</li></ul><h2 id="swift"><a href="#swift" class="headerlink" title="swift"></a>swift</h2><ul><li><a href="http://codecloud.net/swift-doc-1271.html" target="_blank" rel="noopener">Swift语言教程中文文档</a></li><li><a href="http://www.swifttoolbox.io/" target="_blank" rel="noopener">swifttoolbox</a> – swifttoolbox swift开发的开源库汇总。</li><li><a href="https://github.com/ipader/SwiftGuide" target="_blank" rel="noopener">SwiftGuide</a> – 这份指南汇集了Swift语言主流学习资源，并以开发者的视角整理编排– 非常不错，值得推荐。</li><li><a href="https://github.com/ipader/SwiftGuide/blob/master/Featured.md" target="_blank" rel="noopener">Swift开源项目精选</a> – Swift开源项目精选–推荐，每周都有更新。</li><li><a href="https://swift.zeef.com/robin.eggenkamp" target="_blank" rel="noopener">Awesome Swift</a> – 一个收集了很多 Swift 开发资源的网站。</li><li><a href="https://github.com/x140yu/Developing_iOS_8_Apps_With_Swift" target="_blank" rel="noopener">Developing_iOS_8_Apps_With_Swift</a> – Developing iOS 8 Apps with Swift 字幕简体中文翻译项目（斯坦福白胡子老头swift教学视频）。</li></ul><h2 id="他人开源总结"><a href="#他人开源总结" class="headerlink" title="他人开源总结"></a>他人开源总结</h2><ul><li><a href="http://www.code4app.com/" target="_blank" rel="noopener">code4app</a> – 最多国人用的代码库。</li><li><a href="http://code.cocoachina.com/" target="_blank" rel="noopener">cocoachina</a> – 国内最热门的iOS社区的代码库。</li><li><a href="https://github.com/vsouza/awesome-ios" target="_blank" rel="noopener">awesome-ios</a> – 一个老外整理的，<a href="http://app.memect.com/doc/ios.html" target="_blank" rel="noopener">中文版</a>。</li><li><a href="https://github.com/cjwirth/awesome-ios-ui" target="_blank" rel="noopener">awesome-ios-ui</a> – 收集了不少 iOS UI/UX 库, 包含了很多酷炫的动画效果。</li><li><a href="http://ios-cosmos.com/" target="_blank" rel="noopener">ios-cosmos</a> – The iOS Cosmos：收录了IOS绝大部分的开源框架和工具。</li><li><a href="https://haskell.zeef.com/konstantin.skipor#block_28362_basics" target="_blank" rel="noopener">Awesome Haskell资料大全</a> – Awesome Haskell 资料大全：框架，库和软件。</li><li><a href="http://ios-cosmos.com/" target="_blank" rel="noopener">Cosmos</a> – The iOS Cosmos：收录了IOS绝大部分的开源框架和工具。</li><li><a href="http://cocoacontrols.com/" target="_blank" rel="noopener">cocoacontrols</a> – 收集了很多UI控件效果代码，缺点是需要翻墙，而且代码分类不够好。</li><li><a href="https://github.com/lexrus" target="_blank" rel="noopener">lexrus</a> – lexrus国内出名的iOS开源coder，非常库的label动画、textfield动画。</li><li><a href="https://github.com/dkhamsing/open-source-ios-apps" target="_blank" rel="noopener">open-source-ios-apps</a> – iOS App集合，分：swift与Objective-C–国外人整理。</li><li><a href="http://www.csdn.net/article/2015-03-04/2824108-ios-developers-sites" target="_blank" rel="noopener">适合iOS开发者的15大网站推荐</a> – 适合 iOS 开发者的 15 大网站推荐 — 英文网站。</li><li><a href="https://github.com/Aufree/trip-to-iOS/blob/master/Top-100.md" target="_blank" rel="noopener">Objective-C GitHub 排名前 100 项目简介</a> – 主要对当前 GitHub 排名前 100 的项目做一个简单的简介, 方便初学者快速了解到当前 Objective-C 在 GitHub 的情况。</li><li><a href="http://github.ibireme.com/github/list/ios/" target="_blank" rel="noopener">Github-iOS备忘</a> -整理了比较常用的iOS第三方组件，以及github上的统计。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;本文转载自：&lt;a href=&quot;http://codecloud.net/ios-mac-study-5155.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iOS及Mac开源项目和学习资料【超级全面】&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1 i
      
    
    </summary>
    
      <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
      <category term="Materials" scheme="http://yoursite.com/categories/iOS/Materials/"/>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Android应用程序权限解析</title>
    <link href="http://yoursite.com/2016/01/24/Android%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9D%83%E9%99%90%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2016/01/24/Android应用程序权限解析/</id>
    <published>2016-01-24T03:49:50.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>ACCESS_CHECKIN_PROPERTIES = “mandroid.permission.ACCESS_CHECKIN_PROPERTIES”;ACCESS_CHECKIN_PROPERTIES_DES = “允许程序读取或写入登记check-in数据库属性表的权限”;ACCESS_COARSE_LOCATION = “android.permission.ACCESS_COARSE_LOCATION”;ACCESS_COARSE_LOCATION_DES = “允许程序通过WiFi或移动基站的方式获取用户错略的经纬度信息，定位精度大概误差在~米”;ACCESS_FINE_LOCATION = “android.permission.ACCESS_FINE_LOCATION”;ACCESS_FINE_LOCATION_DES = “允许程序通过GPS芯片接收卫星的定位信息，定位精度达米以内”;ACCESS_LOCATION_EXTRA_COMMANDS = “android.permission.ACCESS_LOCATION_EXTRA_COMMANDS”;ACCESS_LOCATION_EXTRA_COMMANDS_DES = “允许程序访问额外的定位提供者指令”;ACCESS_MOCK_LOCATION = “android.permission.ACCESS_MOCK_LOCATION”;ACCESS_MOCK_LOCATION_DES = “允许程序获取模拟定位信息，一般用于帮助开发者调试应用”;ACCESS_NETWORK_STATE = “android.permission.ACCESS_NETWORK_STATE”;ACCESS_NETWORK_STATE_DES = “允许程序获取网络信息状态，如当前的网络连接是否有效”;ACCESS_SURFACE_FLINGER = “android.permission.ACCESS_SURFACE_FLINGER”;ACCESS_SURFACE_FLINGER_DES = “Android平台上底层的图形显示支持，一般用于游戏或照相机预览界面和底层模式的屏幕截图”;ACCESS_WIFI_STATE = “android.permission.ACCESS_WIFI_STATE”;ACCESS_WIFI_STATE_DES = “允许程序获取当前WiFi接入的状态以及WLAN热点的信息”;ACCOUNT_MANAGER = “android.permission.ACCOUNT_MANAGER”;ACCOUNT_MANAGER_DES = “允许程序获取账户验证信息，主要为GMail账户信息，只有系统级进程才能访问的权限”;AUTHENTICATE_ACCOUNTS = “android.permission.AUTHENTICATE_ACCOUNTS”;AUTHENTICATE_ACCOUNTS_DES = “允许程序通过账户验证方式访问账户管理ACCOUNT_MANAGER相关信息”;BATTERY_STATS = “android.permission.BATTERY_STATS”;BATTERY_STATS_DES = “允许程序获取电池电量统计信息”;BIND_APPWIDGET = “android.permission.BIND_APPWIDGET”;BIND_APPWIDGET_DES = “允许程序告诉appWidget服务需要访问小插件的数据库，只有非常少的应用才用到此权限”;BIND_DEVICE_ADMIN = “android.permission.BIND_DEVICE_ADMIN”;BIND_DEVICE_ADMIN_DES = “请求系统管理员接收者receiver，只有系统才能使用”;BIND_INPUT_METHOD = “android.permission.BIND_INPUT_METHOD”;BIND_INPUT_METHOD_DES = “请求InputMethodService服务，只有系统才能使用”;BIND_REMOTEVIEWS = “android.permission.BIND_REMOTEVIEWS”;BIND_REMOTEVIEWS_DES = “必须通过RemoteViewsService服务来请求，只有系统才能用”;BIND_WALLPAPER = “android.permission.BIND_WALLPAPER”;BIND_WALLPAPER_DES = “必须通过WallpaperService服务来请求，只有系统才能用”;BLUETOOTH = “android.permission.BLUETOOTH”;BLUETOOTH_DES = “允许程序连接配对过的蓝牙设备”;BLUETOOTH_ADMIN = “android.permission.BLUETOOTH_ADMIN”;BLUETOOTH_ADMIN_DES = “允许程序进行发现和配对新的蓝牙设备”;BRICK = “android.permission.BRICK”;BRICK_DES = “能够禁用手机，非常危险，顾名思义就是让手机变成砖头”;BROADCAST_PACKAGE_REMOVED = “android.permission.BROADCAST_PACKAGE_REMOVED”;BROADCAST_PACKAGE_REMOVED_DES = “允许程序删除时广播”;BROADCAST_SMS = “android.permission.BROADCAST_SMS”;BROADCAST_SMS_DES = “允许程序当收到短信时触发一个广播”;BROADCAST_STICKY = “android.permission.BROADCAST_STICKY”;BROADCAST_STICKY_DES = “允许程序收到广播后快速收到下一个广播”;BROADCAST_WAP_PUSH = “ndroid.permission.BROADCAST_WAP_PUSH”;BROADCAST_WAP_PUSH_DES = “WAPPUSH服务收到后触发一个广播”;CALL_PHONE = “android.permission.CALL_PHONE”;CALL_PHONE_DES = “允许程序从非系统拨号器里拨打电话”;CALL_PRIVILEGED = “android.permission.CALL_PRIVILEGED”;CALL_PRIVILEGED_DES = “允许程序拨打电话，替换系统的拨号器界面”;CAMERA = “android.permission.CAMERA”;CAMERA_DES = “允许程序访问摄像头进行拍照”;CHANGE_COMPONENT_ENABLED_STATE = “android.permission.CHANGE_COMPONENT_ENABLED_STATE”;CHANGE_COMPONENT_ENABLED_STATE_DES = “改变组件是否启用状态”;CHANGE_CONFIGURATION = “android.permission.CHANGE_CONFIGURATION”;CHANGE_CONFIGURATION_DES = “允许当前应用改变配置，如定位”;CHANGE_NETWORK_STATE = “android.permission.CHANGE_NETWORK_STATE”;CHANGE_NETWORK_STATE_DES = “允许程序改变网络状态,如是否联网”;CHANGE_WIFI_MULTICAST_STATE = “android.permission.CHANGE_WIFI_MULTICAST_STATE”;CHANGE_WIFI_MULTICAST_STATE_DES = “允许程序改变WiFi多播状态”;CHANGE_WIFI_STATE = “android.permission.CHANGE_WIFI_STATE”;CHANGE_WIFI_STATE_DES = “允许程序改变WiFi状态”;CLEAR_APP_CACHE = “android.permission.CLEAR_APP_CACHE”;CLEAR_APP_CACHE_DES = “允许程序清除应用缓存”;CLEAR_APP_USER_DATA = “android.permission.CLEAR_APP_USER_DATA”;CLEAR_APP_USER_DATA_DES = “允许程序清除用户数据”;CWJ_GROUP = “android.permission.CWJ_GROUP”;CWJ_GROUP_DES = “允许CWJ账户组访问底层信息”;CELL_PHONE_MASTER_EX = “android.permission.CELL_PHONE_MASTER_EX”;CELL_PHONE_MASTER_EX_DES = “手机优化大师扩展权限”;CONTROL_LOCATION_UPDATES = “android.permission.CONTROL_LOCATION_UPDATES”;CONTROL_LOCATION_UPDATES_DES = “允许程序获得移动网络定位信息改变”;DELETE_CACHE_FILES = “android.permission.DELETE_CACHE_FILES”;DELETE_CACHE_FILES_DES = “允许程序删除缓存文件”;DELETE_PACKAGES = “android.permission.DELETE_PACKAGES”;DELETE_PACKAGES_DES = “允许程序删除应用”;DEVICE_POWER = “android.permission.DEVICE_POWER”;DEVICE_POWER_DES = “允许程序访问底层电源管理”;DIAGNOSTIC = “android.permission.DIAGNOSTIC”;DIAGNOSTIC_DES = “允许程序到RW到诊断资源”;DISABLE_KEYGUARD = “android.permission.DISABLE_KEYGUARD”;DISABLE_KEYGUARD_DES = “允许程序禁用键盘锁”;DUMP = “android.permission.DUMP”;DUMP_DES = “允许程序获取系统dump信息从系统服务”;EXPAND_STATUS_BAR = “android.permission.EXPAND_STATUS_BAR”;EXPAND_STATUS_BAR_DES = “允许程序扩展或收缩状态栏”;FACTORY_TEST = “android.permission.FACTORY_TEST”;FACTORY_TEST_DES = “允许程序运行工厂测试模式”;FLASHLIGHT = “android.permission.FLASHLIGHT”;FLASHLIGHT_DES = “允许访问闪光灯”;FORCE_BACK = “android.permission.FORCE_BACK”;FORCE_BACK_DES = “允许程序强制使用back后退按键，无论Activity是否在顶层”;GET_ACCOUNTS = “android.permission.GET_ACCOUNTS”;GET_ACCOUNTS_DES = “允许程序访问账户Gmail列表”;GET_PACKAGE_SIZE = “android.permission.GET_PACKAGE_SIZE”;GET_PACKAGE_SIZE_DES = “允许程序获取应用的文件大小”;GET_TASKS = “android.permission.GET_TASKS”;GET_TASKS_DES = “允许程序获取任务信息”;GLOBAL_SEARCH = “android.permission.GLOBAL_SEARCH”;GLOBAL_SEARCH_DES = “允许程序允许全局搜索”;HARDWARE_TEST = “android.permission.HARDWARE_TEST”;HARDWARE_TEST_DES = “允许程序访问硬件辅助设备，用于硬件测试”;INJECT_EVENTS = “android.permission.INJECT_EVENTS”;INJECT_EVENTS_DES = “允许程序访问本程序的底层事件，获取按键、轨迹球的事件流”;INSTALL_LOCATION_PROVIDER = “android.permission.INSTALL_LOCATION_PROVIDER”;INSTALL_LOCATION_PROVIDER_DES = “允许程序安装定位提供”;INSTALL_PACKAGES = “android.permission.INSTALL_PACKAGES”;INSTALL_PACKAGES_DES = “允许程序安装应用”;INTERNAL_SYSTEM_WINDOW = “android.permission.INTERNAL_SYSTEM_WINDOW”;INTERNAL_SYSTEM_WINDOW_DES = “允许程序打开内部窗口，不对第三方应用程序开放此权限”;INTERNET = “android.permission.INTERNET”;INTERNET_DES = “允许程序访问网络连接，可能产生GPRS流量”;KILL_BACKGROUND_PROCESSES = “android.permission.KILL_BACKGROUND_PROCESSES”;KILL_BACKGROUND_PROCESSES_DES = “允许程序调用killBackgroundProcesses(String).方法结束后台进程”;MANAGE_ACCOUNTS = “android.permission.MANAGE_ACCOUNTS”;MANAGE_ACCOUNTS_DES = “允许程序管理AccountManager中的账户列表”;MANAGE_APP_TOKENS = “android.permission.MANAGE_APP_TOKENS”;MANAGE_APP_TOKENS_DES = “管理创建、摧毁、Z轴顺序，仅用于系统”;MTWEAK_USER = “android.permission.MTWEAK_USER”;MTWEAK_USER_DES = “允许mTweak用户访问高级系统权限”;MTWEAK_FORUM = “android.permission.MTWEAK_FORUM”;MTWEAK_FORUM_DES = “允许程序使用mTweak社区权限”;MASTER_CLEAR = “android.permission.MASTER_CLEAR”;MASTER_CLEAR_DES = “允许程序执行软格式化，删除系统配置信息”;MODIFY_AUDIO_SETTINGS = “android.permission.MODIFY_AUDIO_SETTINGS”;MODIFY_AUDIO_SETTINGS_DES = “允许程序修改声音设置信息”;MODIFY_PHONE_STATE = “android.permission.MODIFY_PHONE_STATE”;MODIFY_PHONE_STATE_DES = “允许程序修改电话状态，如飞行模式，但不包含替换系统拨号器界面”;MOUNT_FORMAT_FILESYSTEMS = “android.permission.MOUNT_FORMAT_FILESYSTEMS”;MOUNT_FORMAT_FILESYSTEMS_DES = “允许程序格式化可移动文件系统，比如格式化清空SD卡”;MOUNT_UNMOUNT_FILESYSTEMS = “android.permission.MOUNT_UNMOUNT_FILESYSTEMS”;MOUNT_UNMOUNT_FILESYSTEMS_DES = “允许程序挂载、反挂载外部文件系统”;NFC = “android.permission.NFC”;NFC_DES = “允许程序执行NFC近距离通讯操作，用于移动支持”;PERSISTENT_ACTIVITY = “android.permission.PERSISTENT_ACTIVITY”;PERSISTENT_ACTIVITY_DES = “允许程序创建一个永久的Activity，该功能标记为将来将被移除”;PROCESS_OUTGOING_CALLS = “android.permission.PROCESS_OUTGOING_CALLS”;PROCESS_OUTGOING_CALLS_DES = “允许程序监视，修改或放弃播出电话”;READ_CALENDAR = “android.permission.READ_CALENDAR”;READ_CALENDAR_DES = “允许程序读取用户的日程信息”;READ_CONTACTS = “android.permission.READ_CONTACTS”;READ_CONTACTS_DES = “允许程序访问联系人通讯录信息”;READ_FRAME_BUFFER = “android.permission.READ_FRAME_BUFFER”;READ_FRAME_BUFFER_DES = “允许程序读取帧缓存用于屏幕截图”;READ_HISTORY_BOOKMARKS = “com.android.browser.permission.READ_HISTORY_BOOKMARKS”;READ_HISTORY_BOOKMARKS_DES = “允许程序读取浏览器收藏夹和历史记录”;READ_INPUT_STATE = “android.permission.READ_INPUT_STATE”;READ_INPUT_STATE_DES = “允许程序读取当前键的输入状态，仅用于系统”;READ_LOGS = “android.permission.READ_LOGS”;READ_LOGS_DES = “允许程序读取系统底层日志”;READ_PHONE_STATE = “android.permission.READ_PHONE_STATE”;READ_PHONE_STATE_DES = “允许程序访问电话状态”;READ_SMS = “android.permission.READ_SMS”;READ_SMS_DES = “允许程序读取短信内容”;READ_SYNC_SETTINGS = “android.permission.READ_SYNC_SETTINGS”;READ_SYNC_SETTINGS_DES = “允许程序读取同步设置，读取Google在线同步设置”;READ_SYNC_STATS = “android.permission.READ_SYNC_STATS”;READ_SYNC_STATS_DES = “允许程序读取同步状态，获得Google在线同步状态”;REBOOT = “android.permission.REBOOT”;REBOOT_DES = “允许程序重新启动设备”;RECEIVE_BOOT_COMPLETED = “android.permission.RECEIVE_BOOT_COMPLETED”;RECEIVE_BOOT_COMPLETED_DES = “允许程序开机自动运行”;RECEIVE_MMS = “android.permission.RECEIVE_MMS”;RECEIVE_MMS_DES = “允许程序接收彩信”;RECEIVE_SMS = “android.permission.RECEIVE_SMS”;RECEIVE_SMS_DES = “允许程序接收短信”;RECEIVE_WAP_PUSH = “android.permission.RECEIVE_WAP_PUSH”;RECEIVE_WAP_PUSH_DES = “允许程序接收WAPPUSH信息”;RECORD_AUDIO = “android.permission.RECORD_AUDIO”;RECORD_AUDIO_DES = “允许程序录制声音通过手机或耳机的麦克”;REORDER_TASKS = “android.permission.REORDER_TASKS”;REORDER_TASKS_DES = “允许程序重新排序系统Z轴运行中的任务”;RESTART_PACKAGES = “android.permission.RESTART_PACKAGES”;RESTART_PACKAGES_DES = “允许程序结束任务通过restartPackage(String)方法，该方式将在外来放弃”;SEND_SMS = “android.permission.SEND_SMS”;SEND_SMS_DES = “允许程序发送短信”;SET_ACTIVITY_WATCHER = “android.permission.SET_ACTIVITY_WATCHER”;SET_ACTIVITY_WATCHER_DES = “允许程序设置Activity观察器一般用于monkey测试”;SET_ALARM = “com.android.alarm.permission.SET_ALARM”;SET_ALARM_DES = “允许程序设置闹铃提醒”;SET_ALWAYS_FINISH = “android.permission.SET_ALWAYS_FINISH”;SET_ALWAYS_FINISH_DES = “允许程序设置程序在后台是否总是退出”;SET_ANIMATION_SCALE = “android.permission.SET_ANIMATION_SCALE”;SET_ANIMATION_SCALE_DES = “允许程序设置全局动画缩放”;SET_DEBUG_APP = “android.permission.SET_DEBUG_APP”;SET_DEBUG_APP_DES = “允许程序设置调试程序，一般用于开发”;SET_ORIENTATION = “android.permission.SET_ORIENTATION”;SET_ORIENTATION_DES = “允许程序设置屏幕方向为横屏或标准方式显示，不用于普通应用”;SET_PREFERRED_APPLICATIONS = “android.permission.SET_PREFERRED_APPLICATIONS”;SET_PREFERRED_APPLICATIONS_DES = “允许程序设置应用的参数，已不再工作具体查看addPackageToPreferred(String)介绍”;SET_PROCESS_LIMIT = “android.permission.SET_PROCESS_LIMIT”;SET_PROCESS_LIMIT_DES = “允许程序设置最大的进程数量的限制”;SET_TIME = “android.permission.SET_TIME”;SET_TIME_DES = “允许程序设置系统时间”;SET_TIME_ZONE = “android.permission.SET_TIME_ZONE”;SET_TIME_ZONE_DES = “允许程序设置系统时区”;SET_WALLPAPER = “android.permission.SET_WALLPAPER”;SET_WALLPAPER_DES = “允许程序设置桌面壁纸”;SET_WALLPAPER_HINTS = “android.permission.SET_WALLPAPER_HINTS”;SET_WALLPAPER_HINTS_DES = “允许程序设置壁纸建议”;SIGNAL_PERSISTENT_PROCESSES = “ndroid.permission.SIGNAL_PERSISTENT_PROCESSES”;SIGNAL_PERSISTENT_PROCESSES_DES = “允许程序发送一个永久的进程信号”;STATUS_BAR = “android.permission.STATUS_BAR”;STATUS_BAR_DES = “允许程序打开、关闭、禁用状态栏”;SUBSCRIBED_FEEDS_READ = “android.permission.SUBSCRIBED_FEEDS_READ”;SUBSCRIBED_FEEDS_READ_DES = “允许程序访问订阅信息的数据库”;SUBSCRIBED_FEEDS_WRITE = “android.permission.SUBSCRIBED_FEEDS_WRITE”;SUBSCRIBED_FEEDS_WRITE_DES = “允许程序写入或修改订阅内容的数据库”;SYSTEM_ALERT_WINDOW = “android.permission.SYSTEM_ALERT_WINDOW”;SYSTEM_ALERT_WINDOW_DES = “允许程序显示系统窗口”;UPDATE_DEVICE_STATS = “android.permission.UPDATE_DEVICE_STATS”;UPDATE_DEVICE_STATS_DES = “允许程序更新设备状态”;USE_CREDENTIALS = “android.permission.USE_CREDENTIALS”;USE_CREDENTIALS_DES = “允许程序请求验证从AccountManager”;USE_SIP = “android.permission.USE_SIP”;USE_SIP_DES = “允许程序使用SIP视频服务”;VIBRATE = “android.permission.VIBRATE”;VIBRATE_DES = “允许程序振动”;WAKE_LOCK = “android.permission.WAKE_LOCK”;WAKE_LOCK_DES = “允许程序在手机屏幕关闭后后台进程仍然运行”;WRITE_APN_SETTINGS = “android.permission.WRITE_APN_SETTINGS”;WRITE_APN_SETTINGS_DES = “允许程序写入网络GPRS接入点设置”;WRITE_CALENDAR = “android.permission.WRITE_CALENDAR”;WRITE_CALENDAR_DES = “允许程序写入日程，但不可读取”;WRITE_CONTACTS = “android.permission.WRITE_CONTACTS”;WRITE_CONTACTS_DES = “允许程序写入联系人，但不可读取”;WRITE_EXTERNAL_STORAGE = “android.permission.WRITE_EXTERNAL_STORAGE”;WRITE_EXTERNAL_STORAGE_DES = “允许程序写入外部存储，如SD卡上写文件”;WRITE_GSERVICES = “android.permission.WRITE_GSERVICES”;WRITE_GSERVICES_DES = “允许程序写入GoogleMap服务数据”;WRITE_HISTORY_BOOKMARKS = “com.android.browser.permission.WRITE_HISTORY_BOOKMARKS”;WRITE_HISTORY_BOOKMARKS_DES = “允许程序写入浏览器历史记录或收藏夹，但不可读取”;WRITE_SECURE_SETTINGS = “android.permission.WRITE_SECURE_SETTINGS”;WRITE_SECURE_SETTINGS_DES = “允许程序读写系统安全敏感的设置项”;WRITE_SETTINGS = “android.permission.WRITE_SETTINGS”;WRITE_SETTINGS_DES = “允许程序读写系统设置项”;WRITE_SMS = “android.permission.WRITE_SMS”;WRITE_SMS_DES = “允许程序编写短信”;WRITE_SYNC_SETTINGS = “android.permission.WRITE_SYNC_SETTINGS”;WRITE_SYNC_SETTINGS_DES = “允许程序写入Google在线同步设置”;INSTALL_SHORTCUT = “com.android.launcher.permission.INSTALL_SHORTCUT”;INSTALL_SHORTCUT_DES = “允许程序创建快捷方式”;UNINSTALL_SHORTCUT = “com.android.launcher.permission.UNINSTALL_SHORTCUT”;UNINSTALL_SHORTCUT_DES = “允许程序删除快捷方式”;READ_SETTINGS = “com.android.launcher.permission.READ_SETTINGS”;READ_SETTINGS_DES = “允许程序读取快捷方式信息”;READ_EXTERNAL_STORAGE = “android.permission.READ_EXTERNAL_STORAGE”;READ_EXTERNAL_STORAGE_DES = “允许程序读取设备外部存储空间（内置SDcard和外置SDCard)”;READ_CALL_LOG = “android.permission.READ_CALL_LOG”;READ_CALL_LOG_DES = “允许程序读取用户的通话记录”;WRITE_CALL_LOG = “android.permission.WRITE_CALL_LOG”;WRITE_CALL_LOG_DES = “允许程序写入（但是不能读）用户的联系人数据”;READ_SETTINGS = “com.android.launcher.permission.READ_SETTINGS”;READ_SETTINGS_DES = “允许程序读取快捷方式信息”;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;ACCESS_CHECKIN_PROPERTIES = “mandroid.permission.ACCESS_CHECKIN_PROPERTIES”;

ACCESS_CHECKIN_PROPERTIES_DES = “允许程序读取或写入登记check-i
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Android/Code/"/>
    
    
      <category term="Andorid" scheme="http://yoursite.com/tags/Andorid/"/>
    
      <category term="Permission" scheme="http://yoursite.com/tags/Permission/"/>
    
  </entry>
  
  <entry>
    <title>【转载】教你制作完美的Favicon图标(附神器)</title>
    <link href="http://yoursite.com/2016/01/22/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E6%95%99%E4%BD%A0%E5%88%B6%E4%BD%9C%E5%AE%8C%E7%BE%8E%E7%9A%84Favicon%E5%9B%BE%E6%A0%87(%E9%99%84%E7%A5%9E%E5%99%A8)/"/>
    <id>http://yoursite.com/2016/01/22/【转载】教你制作完美的Favicon图标(附神器)/</id>
    <published>2016-01-22T09:27:17.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>本文转载自<a href="http://www.uisdc.com/design-perfect-favicon-icon" target="_blank" rel="noopener">设计小测试！教你制作完美的Favicon图标(附神器)</a></em><br>Favicon，常被称为网页小图标、网站缩略图标或者收藏夹图标，是网站在浏览器和收藏夹中除标题外的重要识别方式。今天的这篇文章来自设计师Philippe Bernard，他以小测试的形式为我们详细介绍了Favicon的相关知识。在文末，Philippe 还为我们介绍了他设计的在线Favicon制作工具<a href="http://realfavicongenerator.net/" target="_blank" rel="noopener">RealFaviconGenerator</a>(自备梯子)。<br>Favicon最早于1999年出现在IE5上，并且在几个月之后由W3C纳入标准，作为代表网站的小图标。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/favicon-in-desktop-browsers1.jpg" alt=""><br>随后，绝大多数的桌面端浏览器跟随这一趋势，开始以各自的方式使用Favicon。为网站随便做个小图标嘛，一点都不炫酷，能有多复杂？事实真的如此嘛？</p><p>让我们通过一个小测试来了解一下Favicon。<br><em>问：Favicon的图标文件长啥样？</em><br>A：标准尺寸应该是16×16吧。<br>B：好象什么时候标准更新为32×32~<br>C：视网膜屏幕开始流行了！现在应该用64×64！<br>D：以上答案都是扯淡。</p><p>答：D。Favicon.ico的格式最初是由微软和其他一系列厂商共同制定标准。微软建议使用16×16、32×32 和 48×48。是的，没错，一个ICO格式文件可以包含多个图片哟~</p><p>桌面浏览器中经常在选项卡中使用Favicon，在标准的显示器上，16×16的分辨率就够看了：<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/windows_chrome_16x16_32x32_48x48_tab1.png" alt=""></p><p>截至目前，16×16 的Favicon.ico 在谷歌浏览器的标签中，看起来还很不错。<br>可是，16×16 的Favicon.ico添加到桌面上就不好看了。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/windows_chrome_16x16_taskbar1.png" alt=""><br>将16×16 的Favicon.ico添加到任务栏的效果。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/windows_chrome_16x16_desktop1.png" alt=""><br>16×16 的Favicon.ico 添加到桌面的效果，并不理想。<br>所以，当Favicon包含多个图片之后，展示效果会好很多。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/windows_chrome_16x16_32x32_48x48_taskbar.png" alt=""><br>当使用包含16×16，32×32以及48×48 多尺寸图片的Favicon之后，任务栏的显示效果就好多了，看起来更像是本地应用了。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/windows_chrome_16x16_32x32_48x48_desktop.png" alt=""><br>包含16×16，32×32以及48×48 多尺寸图片的Favicon 应用到桌面上，效果完美。</p><p><em>问：那么Favicon.png的意义何在？</em><br>当我们深入探讨Favicon的时候，始终绕不过Favicon.png这个文件，人们一直对它心存疑虑。它究竟是什么？<br>A：它是为那些不支持Favicon.ico这种文件而生的图标，比如Firefox？<br>B：一个高分辨率的图标。要知道，高分辨率的屏幕越来越多了。<br>C：这上一个历史遗留的产物。现在有更加现代的图标替代它。<br>D：well，这是一个非常复杂的事儿。</p><p>答：D。随着HTML5的推行，Favicon.ico 逐渐显得不那么有用了。不同大小属性的图片可以被同一个图片的不同版本所替代，而PNG格式图片正好可以胜任。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">type</span>=<span class="string">"image/png"</span> <span class="attr">href</span>=<span class="string">"/favicon-16x16.png"</span> <span class="attr">sizes</span>=<span class="string">"16x16"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">type</span>=<span class="string">"image/png"</span> <span class="attr">href</span>=<span class="string">"/favicon-32x32.png"</span> <span class="attr">sizes</span>=<span class="string">"32x32"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">type</span>=<span class="string">"image/png"</span> <span class="attr">href</span>=<span class="string">"/favicon-96x96.png"</span> <span class="attr">sizes</span>=<span class="string">"96x96"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>那么，我们应该怎样声明呢？<br>接下来，我们要面对的真相可能并不那么令人满意。尽管所有的桌面浏览器都在支持Favicon.ico文件，但是这个文件终究是过时的。你依然可以继续使用Favicon.ico，它也仍然会继续正常工作，但坦率地讲，它的局限性越来越明显，相反，PNG更加一致，应用范围更广。<br>Favicon.ico 是为旧版的IE而生，对于其他浏览器和新版的IE，我们倾向于使用PNG图标，那么我们应该怎样设置它的尺寸呢？接下来，我们探讨一下这个问题。</p><p><em>问：在移动平台上我们需要什么样的格式？</em><br>根据AmartInsights的数据显示，超过26%的网站流量是来自智能手机和平板，那么在未来，我们需要使用什么样的格式呢？<br>A：当然是Favicon.ico，截至目前它已经存在15年了。<br>B：PNG格式图标。你都说了要继续探讨这个了~<br>C：Apple Touch Icon<br>D：反正无论如何都不会在ABC中列出正确答案……</p><p>备注：在iPhone,iPad,iTouch的safari上可以使用添加到主屏按钮将网站添加到主屏幕上。apple-touch-icon是IOS设备的私有标签，如果设置了相应apple-touch-icon标签，则添加到主屏上的图标会使用指定的图片。Apple-touch-icon 标签支持sizes属性，可以用来放置对应不同的设备。</p><p>答：D。你需要PNG 图标，也需要Apple Touch Icon，还需要Windows 8 磁贴，最重要的，你需要一个名为 browserconfig.xml 的文件。</p><p>比起传统的桌面端浏览器，移动端平台更加庞杂，屏幕尺寸和分辨率也差异巨大，iOS和Android两家割据，并不是像互联网刚刚兴起的时候WIndows一家独大之时那么容易推广标准。所以，你不用期待一个移动端Favicon 应付所有需求。</p><p><em>问：那么PNG格式应该使用哪些尺寸呢？</em><br>A：96×96，Google TV<br>B：196×196，Android和Chrome<br>C：228×228，Coast，Opera<br>D：以上全部</p><p>答：D。当然，这还不是全部。你还需要为老版的Opera的快速拨号界面准备 160×160 尺寸的图标，而Chrome 网上商店的图标还需要128×128 尺寸的图标。所以，在选取尺寸的时候需要考虑它到底要支持哪些平台。</p><p><em>问：Apple Touch Icon 的尺寸应设定为多少？</em><br>答：早期的时候，你只需要准备57×57的图标就行，但是现在，你需要制作高达152×152 的图标。<br>在iPhone发布之后，Apple Touch icon的尺寸发生过3次变化。<br>首先是iPad的发布。它的屏幕尺寸比iPhone大，图标尺寸也稍有差别。<br>然后是Retina屏幕。这时候屏幕的像素密度是之前的2倍。<br>再就是iOS7的发布。扁平化之后，图标在iPhone和iPad上略有不同。<br>这样一来，iOS上图标尺寸就有了2x2x2=8种规格：<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/apple-touch-icon.png" alt=""><br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/Retina_iPad_57x57.png" alt=""><br>老版的57×57的Apple Touch icon 在视网膜屏幕上的效果很模糊。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/Retina_iPad_152x152.png" alt=""><br>152×152 的Apple Touch icon 在视网膜上效果很清晰。<br>如果你没有猜对Apple Touch icon的正确尺寸，不要自责。在全球最靠前的5000个网站中，能用对Apple Touch icon的不到4%。<br>有人可能会说，制作8个版本的Apple Touch icon没有必要，但是你至少需要备好一个152×152的图标。这能确保运行iOS7的视网膜屏幕iPad能够正常显示图标，而分辨率较低的iOS设备也能按比例缩小，显示效果也不会差。</p><p><em>问：有必要在HTML中声明Apple Touch icon么？</em><br>A：不知道。<br>B：有必要。否则iOS怎么能识别它们？<br>C：没必要。按照Apple的习惯来放置图标就够了，iOS设备无论如何都会找到它们的。<br>D：没有必要，但是……</p><p>答：好吧，答案还是D。考虑到还有其他平台（Andorid，WP等）也会用Apple Touch icon，所以最好还是为之作出声明。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">sizes</span>=<span class="string">"57x57"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-57x57.png"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">sizes</span>=<span class="string">"114x114"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-114x114.png"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">sizes</span>=<span class="string">"72x72"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-72x72.png"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">sizes</span>=<span class="string">"144x144"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-144x144.png"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">sizes</span>=<span class="string">"60x60"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-60x60.png"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">sizes</span>=<span class="string">"120x120"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-120x120.png"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">sizes</span>=<span class="string">"76x76"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-76x76.png"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">sizes</span>=<span class="string">"152x152"</span> <span class="attr">href</span>=<span class="string">"/apple-touch-icon-152x152.png"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>比起高分辨率的PNG图片，Apple Touch icon更流行也更加常见，诸如Android Chrome这样的移动端浏览器也倾向于使用它们。因此，声明它们会相对更安全，以备其他兼容的设备和浏览器随时能够访问它们。</p><p><em>问：怎样才能为 WIndows 8 平板设计一个磁贴？</em><br>A：windows 8 平板是个啥？<br>B：Favicon.ico，这是鲍尔默（微软前CEO）的遗产。<br>C：使用Two msapplication-TileColor 和 msapplication-TileImage meta 标签.<br>D：browserconfig.xml</p><p>答：对于Windows 8.0 和IE 10，答案是C；对于WIndows 8.1和IE 11，答案是D；当然，A差不多也可以说是对的，哈哈~<br>Windows 8.0 中通常是这样声明的：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-TileColor"</span> <span class="attr">content</span>=<span class="string">"#2b5797"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"msapplication-TileImage"</span> <span class="attr">content</span>=<span class="string">"/mstile-144x144.png"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>在Windows 8.1 和 IE 11 中的磁贴则通常是这样声明的：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">browserconfig</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">msapplication</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">tile</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">square70x70logo</span> <span class="attr">src</span>=<span class="string">"/mstile-70x70.png"</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">square150x150logo</span> <span class="attr">src</span>=<span class="string">"/mstile-150x150.png"</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">square310x310logo</span> <span class="attr">src</span>=<span class="string">"/mstile-310x310.png"</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">wide310x150logo</span> <span class="attr">src</span>=<span class="string">"/mstile-310x150.png"</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">TileColor</span>&gt;</span>#2b5797<span class="tag">&lt;/<span class="name">TileColor</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">tile</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">msapplication</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">browserconfig</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>新的Metro Ui拥有一系列全新的设计规范，比如内置的APP都使用了“white silhouettes”。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/w8.png" alt=""><br>Windows 8 桌面的网站磁贴。</p><p><em>问：150×150 尺寸的Logo 磁贴到底要用多大尺寸的？</em><br>A：都说了是150×150的，还会有什么其他的尺寸？<br>B：怎么不能是其他尺寸的？</p><p>答：B，270×270。微软推荐使用更大的尺寸，以兼容更高分辨率的屏幕……</p><p>恭喜你！整个测试到此结束，你都答对了么？<br>这些问题看起来很简单，但是实际上真正深究的话，还是非常刁钻的。单纯使用Favicon.ico的时代已经过去了，虽然还有网站沿袭旧有的习惯，但是常常会导致荒谬的结果。我们可以耗费很长时间来精心雕琢响应式网站，但是如何只是内置一个57×57的 Apple Touch icon，那么网站也只能是在老旧的设备上正常显示。</p><p><em>为移动时代而生的Favicon生成器</em><br>在今天，制作一个符合多平台需求的Favicon是复杂而艰难的。你当然可以在网站根目录中内置一个老派的Favicon.ico，一个32×32的PNG图标和一个152×152的Apple Touch icon。但是，你也可以内置足以应付任何分辨率屏幕的一组图标，只是这样一来，工作量就非常恐怖了。<br>这个时候，你需要RealFaviconGenerator。和传统的Favicon生成器不一样，RealFaviconGenerator主要满足2大需求：编辑图标，和生成代码。<br>不同的平台使用截然不同的界面，所以需要为不同的平台生成不同的图标。RealFaviconGenerator自然不是在线的PS，但是RealFaviconGenerator通过设置可以帮你设计出符合不同平台需求的图标。比如，你可以为iOS设备生成带不透明背景的图标，以及符合Windows 8的白色图标。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/rfg_editor.png" alt=""><br>RealFaviconGenerator 编辑器<br>主要生成图片和相应的HTML代码，其中主要覆盖以下平台：PC/Mac，iOS，Android，Windows 8 等。<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/rfg_result.png" alt=""><br>可用的图片和HTML代码<br>比如，当你提供一个高分辨率的图标，简单几个点击就可以生成如下图标：<br><img src="http://image.uisdc.com/wp-content/uploads/2014/11/rfg.png" alt=""><br>总而言之，在RealFaviconGenerator的帮助之下制作Favicon和10年前一样方便快捷。<br>【<a href="http://www.uisdc.com/tag/%e5%9b%be%e6%a0%87%e8%ae%be%e8%ae%a1" target="_blank" rel="noopener">图标设计</a>学习三部曲】<br>    Step 1：腾讯设计师的新人培训教程！初学者必备！<br>    <a href="http://www.uisdc.com/icon-design-3-key-point" target="_blank" rel="noopener">《传承设计经验！图标设计初阶的3大关键入门知识点！》</a><br>    Step 2：到顶尖UI设计师集聚地吸收经验与灵感！<br>    <a href="http://www.uisdc.com/the-ultimate-guide-to-everything-dribbble" target="_blank" rel="noopener">《设计师必读！玩转Dribbble终极指南》</a><br>    Step 3：每天一练！技巧都学全！<br>    <a href="http://www.uisdc.com/ps-ai-icon" target="_blank" rel="noopener">《PS+AI制作精致可爱的毛线风格图标》</a></p><p><em>原文地址：<a href="http://www.uisdc.com/ps-ai-icon" target="_blank" rel="noopener">http://www.uisdc.com/ps-ai-icon</a></em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;本文转载自&lt;a href=&quot;http://www.uisdc.com/design-perfect-favicon-icon&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;设计小测试！教你制作完美的Favicon图标(附神器)&lt;/a&gt;&lt;/em&gt;&lt;b
      
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
      <category term="Share" scheme="http://yoursite.com/categories/Web/Share/"/>
    
    
      <category term="Favicon" scheme="http://yoursite.com/tags/Favicon/"/>
    
  </entry>
  
  <entry>
    <title>Mac之vim普通命令使用</title>
    <link href="http://yoursite.com/2016/01/22/Mac%E4%B9%8Bvim%E6%99%AE%E9%80%9A%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2016/01/22/Mac之vim普通命令使用/</id>
    <published>2016-01-22T09:09:43.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>高级一些的编辑器，都会包含宏功能，vim当然不能缺少了，在vim中使用宏是非常方便的：</p><p>:qx 开始记录宏，并将结果存入寄存器x<br>q 退出记录模式<br>@x 播放记录在x寄存器中的宏命令<br>稍微解释一下，当在normal模式下输入:qx后，你对文本的所有编辑动作将会被记录下来，再次输入q即退出了记录模<br>式，然后输入@x对刚才记录下来的命令进行重复，此命令后可跟数字，表示要重复多少次，比如@x20，可以重复20次。这个在文本的批处理中是非常有用的。<br>同时编辑多个文件<br>在vim众多的插件中，有一个叫minibuffer的插件，就是下面所说的标签页功能了，可以支持同时编辑多个文件。</p><h1 id="标签命令"><a href="#标签命令" class="headerlink" title="标签命令"></a>标签命令</h1><p>:tabe fn 在一个新的标签页中编辑文件fn<br>gt 切换到下一个标签页<br>gT 切换到上一个标签页<br>:tabr 切换到第一个标签页<br>:tabl 切换到最后一个标签页<br>:tabs [N] 把当前tab移动到第N个tab之后<br>对，正如你所想象的那样，跟eclipse, ue等的标签页是一个意思！</p><h1 id="窗口命令"><a href="#窗口命令" class="headerlink" title="窗口命令"></a>窗口命令</h1><p>ctrl+w s 水平分割窗口<br>ctrl+w w 切换窗口<br>ctrl+w q 退出当前窗口(由于同时有多个文件，此命令不会影响其他窗口)<br>ctrl+w v 垂直分割窗口</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>vim在保存之前不会对文件做实际的修改，只是加载到缓冲区中，对文件的编辑其实是对缓冲区的编辑，直到:w时才会存入物理文件。<br>:e file 把file加载到新的缓冲区中<br>:bn 跳转到下一个缓冲区<br>:bd 删除缓冲区(关闭文件)<br>:sp fn 分割窗口，并将fn加载到新的窗口中</p><h2 id="退出编辑器"><a href="#退出编辑器" class="headerlink" title="退出编辑器"></a>退出编辑器</h2><p>:w 将缓冲区写入文件，即保存修改<br>:wq 保存修改并退出<br>:x 保存修改并退出<br>:q 退出，如果对缓冲区进行过修改，则会提示<br>:q! 强制退出，放弃修改</p><h2 id="查找替换"><a href="#查找替换" class="headerlink" title="查找替换"></a>查找替换</h2><p>/pattern 向后搜索字符串pattern<br>?pattern 向前搜索字符串pattern<br>n 下一个匹配(如果是/搜索，则是向下的下一个，?搜索则是向上的下一个)<br>N 上一个匹配(同上)<br>:%s/old/new/g 搜索整个文件，将所有的old替换为new<br>:%s/old/new/gc 搜索整个文件，将所有的old替换为new，每次都要你确认是否替换</p><h2 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h2><p>dd 删除光标所在行<br>dw 删除一个字(word)<br>x 删除当前字符<br>X 删除前一个字符<br>D 删除到行末<br>yy 复制一行，此命令前可跟数字，标识复制多行，如6yy，表示从当前行开始复制6行<br>yw 复制一个字<br>y$ 复制到行末<br>p 粘贴粘贴板的内容到当前行的下面<br>P 粘贴粘贴板的内容到当前行的上面<br>]p 有缩进的粘贴，vim会自动调节代码的缩进<br>“a 将内容放入/存入a寄存器，可以支持多粘贴板<br>附：比如常用的一个寄存器就是系统寄存器，名称为+，所以从系统粘贴板粘贴到vim中的命令为”+p,注意此处的+不表示操作符，二十一个寄存器。</p><h2 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h2><p>在vim中移动光标跟其他的编辑器中有很大的区别，不过一旦学会了，就会飞速的在文本中移动了。<br>h,j,k,l 左，下，上，右<br>ctrl-f 上翻一页<br>ctrl-b 下翻一页<br>% 跳到与当前括号匹配的括号处，如当前在{，则跳转到与之匹配的}处<br>w 跳到下一个字首，按标点或单词分割<br>W 跳到下一个字首，长跳，如end-of-line被认为是一个字<br>e 跳到下一个字尾<br>E 跳到下一个字尾，长跳<br>b 跳到上一个字<br>B 跳到上一个字，长跳<br>0 跳至行首，不管有无缩进，就是跳到第0个字符<br>^ 跳至行首的第一个字符<br>$ 跳至行尾<br>gg 跳至文件的第一行<br>gd 跳至当前光标所在的变量的声明处<br>[N]G 跳到第N行，如0G，就等价于gg，100G就是第100行<br>fx 在当前行中找x字符，找到了就跳转至<br>; 重复上一个f命令，而不用重复的输入fx<br>tx 与fx类似，但是只是跳转到x的前一个字符处<br>Fx 跟fx的方向相反<br>),( 跳转到上/下一个语句<br>* 查找光标所在处的单词，向下查找<br># 查找光标所在处的单词，向上查找<br>`. 跳转至上次编辑位置</p><h2 id="在屏幕上移动"><a href="#在屏幕上移动" class="headerlink" title="在屏幕上移动"></a>在屏幕上移动</h2><p>H 移动光标到当前屏幕上最上边的一行<br>M 移动光标到当前屏幕上中间的一行<br>L 移动光标到当前屏幕上最下边的一行</p><h2 id="书签"><a href="#书签" class="headerlink" title="书签"></a>书签</h2><p>ma 把当前位置存成标签a<br>`a 跳转到标签a处</p><h2 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h2><p>r 替换一个字符<br>J 将下一行和当前行连接为一行<br>cc 删除当前行并进入编辑模式<br>cw 删除当前字，并进入编辑模式<br>c$ 擦除从当前位置至行末的内容，并进入编辑模式<br>s 删除当前字符并进入编辑模式<br>S 删除光标所在行并进入编辑模式<br>xp 交换当前字符和下一个字符<br>u 撤销<br>ctrl+r 重做<br>. 重复上一个编辑命令<br>~ 切换大小写，当前字符<br>g~iw 切换当前字的大小写<br>gUiw 将当前字变成大写<br>guiw 将当前字变成小写<br>>&gt; 将当前行右移一个单位<br>&lt;&lt; 将当前行左移一个单位(一个tab符)<br>== 自动缩进当前行</p><h1 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h1><p>i 从当前光标处进入插入模式<br>I 进入插入模式，并置光标于行首<br>a 追加模式，置光标于当前光标之后<br>A 追加模式，置光标于行末<br>o 在当前行之下新加一行，并进入插入模式<br>O 在当前行之上新加一行，并进入插入模式<br>Esc 退出插入模式</p><h1 id="可视模式"><a href="#可视模式" class="headerlink" title="可视模式"></a>可视模式</h1><h2 id="标记文本"><a href="#标记文本" class="headerlink" title="标记文本"></a>标记文本</h2><p>v 进入可视模式，单字符模式<br>V 进入可视模式，行模式<br>ctrl+v 进入可视模式，列模式，类似于UE的列模式<br>o 跳转光标到选中块的另一个端点<br>U 将选中块中的内容转成大写<br>O 跳转光标到块的另一个端点<br>aw 选中一个字<br>ab 选中括号中的所有内容，包括括号本身<br>aB 选中{}括号中的所有内容<br>ib 选中括号中的内容，不含括号<br>iB 选中{}中的内容，不含{}</p><h2 id="对标记进行动作"><a href="#对标记进行动作" class="headerlink" title="对标记进行动作"></a>对标记进行动作</h2><p>> 块右移<br>&lt; 块左移<br>y 复制块<br>d 删除块<br>~ 切换块中内容的大小写 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;高级一些的编辑器，都会包含宏功能，vim当然不能缺少了，在vim中使用宏是非常方便的：&lt;/p&gt;
&lt;p&gt;:qx 开始记录宏，并将结果存入寄存器x&lt;br&gt;q 退出记录模式&lt;br&gt;@x 播放记录在x寄存器中的宏命令&lt;br&gt;稍微解释一下，当在normal模式下输入:qx后，你对文本
      
    
    </summary>
    
      <category term="MAC技巧" scheme="http://yoursite.com/categories/MAC%E6%8A%80%E5%B7%A7/"/>
    
      <category term="vim" scheme="http://yoursite.com/categories/MAC%E6%8A%80%E5%B7%A7/vim/"/>
    
    
      <category term="MAC" scheme="http://yoursite.com/tags/MAC/"/>
    
      <category term="vim" scheme="http://yoursite.com/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>加速Android Studio/Gradle构建</title>
    <link href="http://yoursite.com/2016/01/22/%E5%8A%A0%E9%80%9FAndroid-Studio-Gradle%E6%9E%84%E5%BB%BA/"/>
    <id>http://yoursite.com/2016/01/22/加速Android-Studio-Gradle构建/</id>
    <published>2016-01-22T08:57:17.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开启gradle单独的守护进程"><a href="#开启gradle单独的守护进程" class="headerlink" title="开启gradle单独的守护进程"></a>开启gradle单独的守护进程</h1><p>在下面的目录下面创建<code>gradle.properties</code>文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">`/home/&amp;lt;username&amp;gt;/.gradle/` (Linux)</span><br><span class="line">`/Users/&amp;lt;username&amp;gt;/.gradle/` (Mac)</span><br><span class="line">`C:\Users\&amp;lt;username&amp;gt;\.gradle` (Windows)</span><br></pre></td></tr></table></figure></p><p>并在文件中增加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.gradle.daemon=<span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>同时修改项目下的<code>gradle.properties</code>文件也可以优化：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Project-wide Gradle settings.</span></span><br><span class="line"><span class="comment"># IDE (e.g. Android Studio) users:</span></span><br><span class="line"><span class="comment"># Settings specified in this file will override any Gradle settings</span></span><br><span class="line"><span class="comment"># configured through the IDE.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For more details on how to configure your build environment visit</span></span><br><span class="line"><span class="comment"># http://www.gradle.org/docs/current/userguide/build_environment.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The Gradle daemon aims to improve the startup and execution time of Gradle.</span></span><br><span class="line"><span class="comment"># When set to true the Gradle daemon is to run the build.</span></span><br><span class="line"><span class="comment"># <span class="doctag">TODO:</span> disable daemon on CI, since builds should be clean and reliable on servers</span></span><br><span class="line">org.gradle.daemon=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specifies the JVM arguments used for the daemon process.</span></span><br><span class="line"><span class="comment"># The setting is particularly useful for tweaking memory settings.</span></span><br><span class="line"><span class="comment"># Default value: -Xmx10248m -XX:MaxPermSize=256m</span></span><br><span class="line">org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># When configured, Gradle will run in incubating parallel mode.</span></span><br><span class="line"><span class="comment"># This option should only be used with decoupled projects. More details, visit</span></span><br><span class="line"><span class="comment"># http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects</span></span><br><span class="line">org.gradle.parallel=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enables new incubating mode that makes Gradle selective when configuring projects. </span></span><br><span class="line"><span class="comment"># Only relevant projects are configured which results in faster builds for large multi-projects.</span></span><br><span class="line"><span class="comment"># http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:configuration_on_demand</span></span><br><span class="line">org.gradle.configureondemand=<span class="literal">true</span>&lt;/pre&gt;</span><br><span class="line">&amp;nbsp;</span><br></pre></td></tr></table></figure></p><p>同时上面的这些参数也可以配置到前面的用户目录下的gradle.properties文件里，那样就不是针对一个项目生效，而是针对所有项目生效。<br>上面的配置文件主要就是做， 增大gradle运行的java虚拟机的大小，让gradle在编译的时候使用独立进程，让gradle可以平行的运行。</p><h1 id="修改android-studio配置"><a href="#修改android-studio配置" class="headerlink" title="修改android studio配置"></a>修改android studio配置</h1><p>在android studio的配置中，开启offline模式，以及修改配置。实际上的配置和上面的一大段一样，主要是在这个地方配置的只会在ide构建的时候生效，命令行构建不会生效。<br><img src="images/as_gradle_offline.png" alt="as_gradle_offline"><br><img src="images/as_gradle_config.png" alt="as_gradle_config"></p><h1 id="命令行构建"><a href="#命令行构建" class="headerlink" title="命令行构建"></a>命令行构建</h1><p>基于上面的配置，命令行构建时在命令后面加上这个参数即可 –daemon –parallel –offline。</p><h1 id="引入依赖库时使用aar"><a href="#引入依赖库时使用aar" class="headerlink" title="引入依赖库时使用aar"></a>引入依赖库时使用aar</h1><p>使用网上第三方的依赖库时尽量使用aar，可以在maven<a href="http://gradleplease.appspot.com/" target="_blank" rel="noopener">http://gradleplease.appspot.com/</a>或者github<a href="https://github.com/Goddchen/mvn-repo" target="_blank" rel="noopener">https://github.com/Goddchen/mvn-repo</a>搜索。<br>自己的库模块也可以打包成aar，关于这个可以参考stormzhang的文章<a href="http://www.stormzhang.com/android/2015/03/01/android-reference-local-aar/" target="_blank" rel="noopener">http://www.stormzhang.com/android/2015/03/01/android-reference-local-aar/</a>。</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>经过这样一番折腾，我原来需要4，5分钟才能构建完成的项目，现在只需要30秒左右就可以构建完成了。当然了，如果你这样还是不可以的话，那么，你应该换电脑了，ssd的硬盘，更大的内存，必须的上了。<br><strong>原文地址：<a href="http://blog.isming.me/2015/03/18/android-build-speed-up/" target="_blank" rel="noopener">加速Android Studio/Gradle构建</a>，转载请注明出处。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;开启gradle单独的守护进程&quot;&gt;&lt;a href=&quot;#开启gradle单独的守护进程&quot; class=&quot;headerlink&quot; title=&quot;开启gradle单独的守护进程&quot;&gt;&lt;/a&gt;开启gradle单独的守护进程&lt;/h1&gt;&lt;p&gt;在下面的目录下面创建&lt;code&gt;gr
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Android/Code/"/>
    
    
      <category term="Android Stuido" scheme="http://yoursite.com/tags/Android-Stuido/"/>
    
      <category term="Gradle" scheme="http://yoursite.com/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>【转载】Android模块化编程之引用本地的aar</title>
    <link href="http://yoursite.com/2016/01/22/Android%E6%A8%A1%E5%9D%97%E5%8C%96%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%BC%95%E7%94%A8%E6%9C%AC%E5%9C%B0%E7%9A%84aar/"/>
    <id>http://yoursite.com/2016/01/22/Android模块化编程之引用本地的aar/</id>
    <published>2016-01-22T08:48:02.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本文转载自<a href="http://www.stormzhang.com/android/2015/03/01/android-reference-local-aar/" target="_blank" rel="noopener">Android模块化编程之引用本地的aar</a></strong><br>随着项目越来越多，代码的复用就变得异常重要，这时候就要进行模块化编程，就是把一些通用的组件或者类库做成单独的模块，其他项目直接进行引用就好。针对Android开发最常见的就是Android Library，在Gradle出现之前引用Android Library的方式也很繁琐，但是有了Gradle一切变得非常简单方便。</p><h1 id="aar"><a href="#aar" class="headerlink" title="aar"></a>aar</h1><p>何为aar？大家都知道jar文件把，如果你有一个Android Library项目，可以很容易的导出jar文件，然后在其他项目中很方便的引用，aar和jar类似，区别就是一个Android Library项目导出的jar文件不能包含资源文件，比如一些drawable文件、xml资源文件之类的，所以这就有很大的限制，在gradle之前我们要引用带资源文件的Android Library必须要把整个library导入进来进行引用，但是有了gradle之后，Android Library项目可以直接导出成aar，然后其他项目像引用jar的方式直接方便的引用。</p><h1 id="导出aar"><a href="#导出aar" class="headerlink" title="导出aar"></a>导出aar</h1><p>首先Android Library项目的gradle脚本只需要在开头声明<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.library'</span></span><br></pre></td></tr></table></figure></p><p>之后就和导出apk文件一样的方法，执行 ./gradlew assembleRelease，然后就可以在 build/outputs/aar 文件夹里生成aar文件</p><h1 id="引用本地的aar"><a href="#引用本地的aar" class="headerlink" title="引用本地的aar"></a>引用本地的aar</h1><p>生成aar之后下一步就是如何引用本地的aar文件？本地的aar文件并没有像引用jar文件这么简单，官方也没有提供解决方案。好在国外的一些前辈总结出了方法，下面就以test.aar文件为例来详述下方法</p><ul><li>1、把aar文件放在一个文件目录内，比如就放在libs目录内</li><li><p>2、在app的build.gradle文件添加如下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">repositories &#123;</span><br><span class="line">    flatDir &#123;</span><br><span class="line">        dirs <span class="string">'libs'</span> <span class="comment">//this way we can find the .aar file in libs folder</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>3、之后在其他项目中添加一句gradle依赖便方便的引用了该library</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile(name:<span class="string">'test'</span>, <span class="attr">ext</span>:<span class="string">'aar'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>以上方法亲测有效。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>当然通过gradle最普遍的方法是把aar上传到mavenCentral或者jcenter，引用的话更方便，但是对于一些公司内部library不想公开，而传统的引用library方式又太繁琐，引用本地的aar文件这种方式会非常方便合适，之后通用的模块只需要做成library，不管更新还是修改只需要打包成aar，然后供其他项目使用就好了，对Android开发来说这是提升代码复用非常有效的一个手段。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;本文转载自&lt;a href=&quot;http://www.stormzhang.com/android/2015/03/01/android-reference-local-aar/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android模块
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Android/Code/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="AAR" scheme="http://yoursite.com/tags/AAR/"/>
    
      <category term="模块化" scheme="http://yoursite.com/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客添加Bilibili视频标签</title>
    <link href="http://yoursite.com/2016/01/22/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0Bilibili%E8%A7%86%E9%A2%91%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2016/01/22/Hexo博客添加Bilibili视频标签/</id>
    <published>2016-01-22T08:40:08.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>在终端中进入博客文件夹下<br>输入命令：<code>$ cnpm install hexo-tag-bilibili</code><br>安装好之后，在站点的配置文件_config.yml中加入以下内容<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># bilibili</span><br><span class="line">bilibili:</span><br><span class="line">  height: 640</span><br><span class="line">  width: 480</span><br></pre></td></tr></table></figure></p><p>在文章中使用的时候：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bilibili [av_id] %&#125;</span><br><span class="line">or</span><br><span class="line">&#123;% bilibili [av_id] [page] %&#125;</span><br></pre></td></tr></table></figure></p><p>例如:<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bilibili 2333333 3 %&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在终端中进入博客文件夹下&lt;br&gt;输入命令：&lt;code&gt;$ cnpm install hexo-tag-bilibili&lt;/code&gt;&lt;br&gt;安装好之后，在站点的配置文件_config.yml中加入以下内容&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;
      
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Web/Code/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Bilibili" scheme="http://yoursite.com/tags/Bilibili/"/>
    
  </entry>
  
  <entry>
    <title>uTorrent新手必看</title>
    <link href="http://yoursite.com/2016/01/22/uTorrent%E6%96%B0%E6%89%8B%E5%BF%85%E7%9C%8B/"/>
    <id>http://yoursite.com/2016/01/22/uTorrent新手必看/</id>
    <published>2016-01-22T08:29:39.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新手请看：可连接状态为“否”的解决方法"><a href="#新手请看：可连接状态为“否”的解决方法" class="headerlink" title="新手请看：可连接状态为“否”的解决方法"></a>新手请看：可连接状态为“否”的解决方法</h1><h2 id="1、连接状态为“否”是什么意思？"><a href="#1、连接状态为“否”是什么意思？" class="headerlink" title="1、连接状态为“否”是什么意思？"></a>1、连接状态为“否”是什么意思？</h2><p>连接状态为“否”不是说你的PT客户端连不上TRACKER服务器，而是说外网的同时下载的用户无法连接到你，不能跟你交换数据了，也就是说你只能单向地发送数据和取数据，这会大大地影响你的下载和上传速度。2、连接状态为“否”的原因是什么？<br>原因概括地说是网络设置问题，通常会因为防火墙阻挡、路由未设置、端口映射不正确等原因。</p><h2 id="2、连接状态为“否”有什么影响？"><a href="#2、连接状态为“否”有什么影响？" class="headerlink" title="2、连接状态为“否”有什么影响？"></a>2、连接状态为“否”有什么影响？</h2><p>简单地说只影响速度，其他没有影响。</p><h2 id="3、如何确认我的网络设置是否正确？"><a href="#3、如何确认我的网络设置是否正确？" class="headerlink" title="3、如何确认我的网络设置是否正确？"></a>3、如何确认我的网络设置是否正确？</h2><p>如果对站里反馈的连接状态有疑问，可以自己来测试一下，方法有二：<br>测试前先保证你已经打开PT客户端，并正常运行，记下你的IP地址和PT使用的端口号。<br>A、借用EMULE的端口测试，打开<a href="http://www.emule.org.cn/porttest/，输入你的PT客户端所使用的端口号，看看是否能测试成功。" target="_blank" rel="noopener">http://www.emule.org.cn/porttest/，输入你的PT客户端所使用的端口号，看看是否能测试成功。</a><br>B、让你的朋友在外部测试你的PT端口号。假设你的IP地址是1.2.3.4,端口号为6666，让你的朋友运行 TELNET 1.2.3.4 6666 ，如果连接失败，说明端口未正确设置。</p><h2 id="4、如何正确设置网络？"><a href="#4、如何正确设置网络？" class="headerlink" title="4、如何正确设置网络？"></a>4、如何正确设置网络？</h2><p>ADSL用户及通过路由上网的兄弟请参考第7条<br>公司内网用户：公司内网一般无法正确路由，需由网管在路由或防火墙上作设置，网管更专业。但有些公司是用NAT透明代理方式的，PT不会受到限制。<br>校园网用户：与公司网类似，多数校园网是内网，通过路由和网关接入互联网，无解，除非你搞定网管。IPV6的用户如何设置，因没有合适环境未研究，请有办法的兄弟跟贴。</p><h2 id="5、连接“否”会不会影响上传下载流量的统计？"><a href="#5、连接“否”会不会影响上传下载流量的统计？" class="headerlink" title="5、连接“否”会不会影响上传下载流量的统计？"></a>5、连接“否”会不会影响上传下载流量的统计？</h2><p>连接状态不影响流量统计，上传下载是通过TRACKER服务器进行的，与此无关。</p><h2 id="6、ADSL用户设置路由器"><a href="#6、ADSL用户设置路由器" class="headerlink" title="6、ADSL用户设置路由器"></a>6、ADSL用户设置路由器</h2><p>以下内容由网络收集转载而来，仅供参考，因各种环境不同请大家根据自己的实际情况操作</p><h1 id="内网ADSL-端口映射准备工作-新手必看！"><a href="#内网ADSL-端口映射准备工作-新手必看！" class="headerlink" title="内网ADSL 端口映射准备工作!新手必看！"></a>内网ADSL 端口映射准备工作!新手必看！</h1><p>Quote:<br>首先，确定你的ADSL是公网还是内网？<br>判断公网还是内网的方法：</p><p>用ipconfig查：</p><ul><li>（1）Windows 9x/Me用户<br>用鼠标选择“开始”-&gt;“程序”-&gt;“MS-DOS方式”，打开一个DOS命令行窗口，执行：ipconfig</li><li>（2）Windows NT/2000/XP用户<br>用鼠标选择“开始”-&gt;“程序”-&gt;“附件”-&gt;“命令提示符”，打开一个DOS命令行窗口，执行：ipconfig</li></ul><p>Ethernet adapter 本地连接:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Connection-specific DNS Suffix . :</span><br><span class="line">Description . . . . . . . . . . . : Realtek RTL8139/810x Family Fast Ethernet</span><br><span class="line">NIC</span><br><span class="line">Physical Address. . . . . . . . . : 00-11-D8-EB-8B-A8</span><br><span class="line">DHCP Enabled. . . . . . . . . . . : No</span><br><span class="line">IP Address. . . . . . . . . . . . : 192.168.1.250 就是你电脑的IP地址</span><br><span class="line">Subnet Mask . . . . . . . . . . . : 255.255.255.0 子网掩码</span><br><span class="line">Default Gateway . . . . . . . . . : 192.168.1.1 网关，也就是你路由器的IP地址！</span><br><span class="line">DNS Servers . . . . . . . . . . . : 202.96.134.133</span><br><span class="line">202.96.128.68</span><br></pre></td></tr></table></figure></p><p>如果你的IP是以下三种基本上判定为内网：<br>10.x.x.x；172.x.x.x；192.168.x.x。</p><p>现在我们找到了路由器的IP地址后，可以直接在浏览器地址栏输入路由器的IP，进入路由器的设置界面！进行端口映射！</p><p>其次，是否支持并开启了路由？<br>现在大部分ＡＤＳＬ支持路由功能，这个应该没有问题。这里要确定你的ＡＤＳＬ的路由是否已经开启。有一点需要明确的就是开启路由与端口映射的关系：是因为开启了路由才需要作端口映射。<br>因此对于ＡＤＳＬ公网用户：</p><ul><li>1、如果没有开启路由功能，则无需再作端口映射。只要打开防火墙相应端口就没有问题。</li><li>2、如果是通过ＡＤＳＬ路由自动拨号或者共享上网的，即变为内网用户，则有必要进行端口映射。请继续。</li></ul><p>最后，获得ＡＤＳＬ默认ＩＰ的地址，以及用户名与密码。<br>在做端口映射前，请大家详细看说明书，特别是有关NAT方面的设置。这样会让你少走很多弯路，也许很有可能你在看完说明书就已经找到的解决问题的方法。有一点需要说明的是，很多附带的说明书都比较粗略地提到这方面的信息，这就需要你到该产品的主页上去查找。</p><p>这里根据我的ADSL的设置以及网友们的成功经验。特地把ADSL分为有Virtual Server（虚拟服务器）设置和只有NAT（端口映射）设置的两种。</p><p>在IE中输入你的默认ＩＰ地址（比如：10.0.0.2或192.168.1.1），通过用户名和密码进入ADSL的Web页设置。端口映射便开始了</p><p>如果你是电信送的ADSL就有可能在WEB页里面找不到Virtual Server（虚拟服务器）或NAT（端口映射）设置</p><p>我们还可以用telnet（远程连接）的方法设置<br>在“运行”里输入 telnet 192.168.1.1 在 LOGON PASSWORD: 输入密码后所有的设置选项都出来了</p><p>此方法可以适用所有DASL（不包括USB接口的）<br>分享率：1,949.277</p><p>教程]UT简易设置教程<br>参考版本 uTorrent 2.0.1 build 19248</p><p>凡是使用UT 2.0.1的用户，请将高级设置中的net.calc_overhead要设置为false，否则UT的流量统计将包括网络开销，但网络开销不是真正的流量</p><p>如果想看完整版本的介绍，请移步<br>[教程]uTorrent安装设置指南及绿化方法</p><p>隐私信息<br>自动检查更新 ： 不勾<br>更新到beta版本 ： 不勾<br>在检测更新时发送详细信息(总是匿名) ： 勾选</p><p>说明：建议大家不要更新到BETA版本。另外虽然工作人员相当努力，但是对新版本的支持还是会有一定的延迟，所以请取消自动更新，避免更新后提示为”banned client”(被禁客户端)。<br>如要更新请到官网下载或者手动更新，具体方法为：菜单栏上，帮助-&gt;检查更新，此时需注意ChinaHDTV是否已经支持新版本。</p><p>下载任务<br>未完成文件添加.!ut后缀 ： ？<br>这个根据自己的喜好选择。对于想预览文件的朋友就不要勾选这个选项了，毕竟更改了文件扩展名，很多时候会不方便。</p><p>活动时避免进入待机状态 ： 勾选<br>对于电脑会自动进入待机状态的同学，请务必勾选，避免因为长时间无人看守而待机，使得电脑断开网络连接最终使得UT无法下载及上传</p><p>监听端口<br>添加系统防火墙例外 ： 勾选<br>这个一定要勾选，重要性就不多说什么了。你说你把系统自带的防火墙禁用了？好吧，你不勾选也行……<br>每次启动后使用随即端口 ： 不勾<br>没有必要在每次启动UT的时候都更换一个端口，使用一个确定的端口的效果会更好。除非你有特殊的需求</p><p>这里的端口号选择，尽量避免和一些常用软件的默认端口冲突，可以考虑8000以上的高段端口，或者让UT随即一个端口，如果对自己有信心，也可以自己设置一个端口。<br>对于ADSL用户，由于部分ISP会封锁端口，这里的端口尽量避免使用6881—6999、8881—8889、16881—16889端口</p><p>队列设置<br>最大的活动任务数(上传或下载) ： 20<br>最大的活动下载数 ： 5<br>UT本身此处的设置值比较小，需要自己改动。另外说明一下，活动任务不是指所有的任务，而是指到达一定传输速度的任务，所以一般来说20已经能满足要求了。</p><p>出现排队的现象就是因为这里的设置值过小，请设当增大设置值</p><p>做种目标<br>做种任务的优先级高于下载任务 ： 勾选<br>说明一下，UT默认分享率为150%。我比较喜欢整数，所以改为了200%，截图时忘记改回去了……大家请见谅</p><p>当uTorrent达到做种目标时<br>限制上传速度为 ： 不勾</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;新手请看：可连接状态为“否”的解决方法&quot;&gt;&lt;a href=&quot;#新手请看：可连接状态为“否”的解决方法&quot; class=&quot;headerlink&quot; title=&quot;新手请看：可连接状态为“否”的解决方法&quot;&gt;&lt;/a&gt;新手请看：可连接状态为“否”的解决方法&lt;/h1&gt;&lt;h2 i
      
    
    </summary>
    
      <category term="Software" scheme="http://yoursite.com/categories/Software/"/>
    
      <category term="uTorrent" scheme="http://yoursite.com/categories/Software/uTorrent/"/>
    
    
      <category term="uTorrent" scheme="http://yoursite.com/tags/uTorrent/"/>
    
      <category term="BT" scheme="http://yoursite.com/tags/BT/"/>
    
  </entry>
  
  <entry>
    <title>Hexo静态博客的“High一下”娱乐功能</title>
    <link href="http://yoursite.com/2016/01/22/Hexo%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%9A%84%E2%80%9CHigh%E4%B8%80%E4%B8%8B%E2%80%9D%E5%A8%B1%E4%B9%90%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2016/01/22/Hexo静态博客的“High一下”娱乐功能/</id>
    <published>2016-01-22T08:13:50.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个High一下的功能之前在一位博主的Hexo博客上看到了，觉得很好玩，于是追寻了出处，发现了这样一篇教程：<br><a href="http://zipperary.com/2013/11/19/give-it-a-high/" target="_blank" rel="noopener">http://zipperary.com/2013/11/19/give-it-a-high/</a><br>具体内容：<br>在Hexo/themes/light/layout/_partial/header.ejs中的<code>&lt;ul&gt;</code>标签内部，增加一对<code>&lt;li&gt;</code>标签，并把如下内容拷贝进去：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">"把这个链接拖到你的Chrome收藏夹工具栏中"</span> <span class="attr">href</span>=<span class="string">'javascript:(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">function c() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.createElement("link");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("type", "text/css");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("rel", "stylesheet");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("href", f);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("class", l);</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.appendChild(e)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function h() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.getElementsByClassName(l);</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var t = 0; t &lt; e.length; t++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.removeChild(e[t])</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function p() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.createElement("div");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("class", a);</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.appendChild(e);</span></span></span><br><span class="line"><span class="tag"><span class="string">setTimeout(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.removeChild(e)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, 100)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function d(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">return &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">height : e.offsetHeight,</span></span></span><br><span class="line"><span class="tag"><span class="string">width : e.offsetWidth</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function v(i) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var s = d(i);</span></span></span><br><span class="line"><span class="tag"><span class="string">return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function m(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var t = e;</span></span></span><br><span class="line"><span class="tag"><span class="string">var n = 0;</span></span></span><br><span class="line"><span class="tag"><span class="string">while (!!t) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">n += t.offsetTop;</span></span></span><br><span class="line"><span class="tag"><span class="string">t = t.offsetParent</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">return n</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function g() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.documentElement;</span></span></span><br><span class="line"><span class="tag"><span class="string">if (!!window.innerWidth) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">return window.innerHeight</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125; else if (e &amp;&amp; !isNaN(e.clientHeight)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">return e.clientHeight</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">return 0</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function y() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">if (window.pageYOffset) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">return window.pageYOffset</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">return Math.max(document.documentElement.scrollTop, document.body.scrollTop)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function E(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var t = m(e);</span></span></span><br><span class="line"><span class="tag"><span class="string">return t &gt;= w &amp;&amp; t &lt;= b + w</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function S() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.createElement("audio");</span></span></span><br><span class="line"><span class="tag"><span class="string">e.setAttribute("class", l);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.src = i;</span></span></span><br><span class="line"><span class="tag"><span class="string">e.loop = false;</span></span></span><br><span class="line"><span class="tag"><span class="string">e.addEventListener("canplay", function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">setTimeout(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">x(k)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, 500);</span></span></span><br><span class="line"><span class="tag"><span class="string">setTimeout(function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">N();</span></span></span><br><span class="line"><span class="tag"><span class="string">p();</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var e = 0; e &lt; O.length; e++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">T(O[e])</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, 15500)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, true);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.addEventListener("ended", function() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">N();</span></span></span><br><span class="line"><span class="tag"><span class="string">h()</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;, true);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.innerHTML = " &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;";</span></span></span><br><span class="line"><span class="tag"><span class="string">document.body.appendChild(e);</span></span></span><br><span class="line"><span class="tag"><span class="string">e.play()</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function x(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">e.className += " " + s + " " + o</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function T(e) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">e.className += " " + s + " " + u[Math.floor(Math.random() * u.length)]</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">function N() &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var e = document.getElementsByClassName(s);</span></span></span><br><span class="line"><span class="tag"><span class="string">var t = new RegExp("\\b" + s + "\\b");</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var n = 0; n &lt; e.length; ) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">e[n].className = e[n].className.replace(t, "")</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string"> </span></span></span><br><span class="line"><span class="tag"><span class="string">var e = 30;</span></span></span><br><span class="line"><span class="tag"><span class="string">var t = 30;</span></span></span><br><span class="line"><span class="tag"><span class="string">var n = 350;</span></span></span><br><span class="line"><span class="tag"><span class="string">var r = 350;</span></span></span><br><span class="line"><span class="tag"><span class="string">var i = "//101.44.1.121/files/4254000003589B7A/yinyueshiting.baidu.com/data2/music/134379742/1201250291429761661128.mp3";</span></span></span><br><span class="line"><span class="tag"><span class="string">var s = "mw-harlem_shake_me";</span></span></span><br><span class="line"><span class="tag"><span class="string">var o = "im_first";</span></span></span><br><span class="line"><span class="tag"><span class="string">var u = ["im_drunk", "im_baked", "im_trippin", "im_blown"];</span></span></span><br><span class="line"><span class="tag"><span class="string">var a = "mw-strobe_light";</span></span></span><br><span class="line"><span class="tag"><span class="string">var f = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css";</span></span></span><br><span class="line"><span class="tag"><span class="string">var l = "mw_added_css";</span></span></span><br><span class="line"><span class="tag"><span class="string">var b = g();</span></span></span><br><span class="line"><span class="tag"><span class="string">var w = y();</span></span></span><br><span class="line"><span class="tag"><span class="string">var C = document.getElementsByTagName("*");</span></span></span><br><span class="line"><span class="tag"><span class="string">var k = null;</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var L = 0; L &lt; C.length; L++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var A = C[L];</span></span></span><br><span class="line"><span class="tag"><span class="string">if (v(A)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">if (E(A)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">k = A;</span></span></span><br><span class="line"><span class="tag"><span class="string">break</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">if (A === null) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">console.warn("Could not find a node of the right size. Please try a different page.");</span></span></span><br><span class="line"><span class="tag"><span class="string">return</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">c();</span></span></span><br><span class="line"><span class="tag"><span class="string">S();</span></span></span><br><span class="line"><span class="tag"><span class="string">var O = [];</span></span></span><br><span class="line"><span class="tag"><span class="string">for (var L = 0; L &lt; C.length; L++) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">var A = C[L];</span></span></span><br><span class="line"><span class="tag"><span class="string">if (v(A)) &#123;</span></span></span><br><span class="line"><span class="tag"><span class="string">O.push(A)</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;</span></span></span><br><span class="line"><span class="tag"><span class="string">&#125;)()    '</span>&gt;</span>High一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>代码块的内容不需要再做任何修改。<br>为了便于直观理解，截图如下：<br><img src="http://ww2.sinaimg.cn/large/5e8cb366jw1eapjmnclddj20ky0h440w.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个High一下的功能之前在一位博主的Hexo博客上看到了，觉得很好玩，于是追寻了出处，发现了这样一篇教程：&lt;br&gt;&lt;a href=&quot;http://zipperary.com/2013/11/19/give-it-a-high/&quot; target=&quot;_blank&quot; rel=&quot;
      
    
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/categories/Web/"/>
    
      <category term="Code" scheme="http://yoursite.com/categories/Web/Code/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="High一下" scheme="http://yoursite.com/tags/High%E4%B8%80%E4%B8%8B/"/>
    
  </entry>
  
  <entry>
    <title>PT站大全--我个人主要是混交大葡萄的</title>
    <link href="http://yoursite.com/2016/01/22/PT%E7%AB%99%E5%A4%A7%E5%85%A8-%E6%88%91%E4%B8%AA%E4%BA%BA%E4%B8%BB%E8%A6%81%E6%98%AF%E6%B7%B7%E4%BA%A4%E5%A4%A7%E8%91%A1%E8%90%84%E7%9A%84/"/>
    <id>http://yoursite.com/2016/01/22/PT站大全-我个人主要是混交大葡萄的/</id>
    <published>2016-01-22T07:23:32.000Z</published>
    <updated>2017-02-21T09:43:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="国内著名PT站点"><a href="#国内著名PT站点" class="headerlink" title="国内著名PT站点"></a>国内著名PT站点</h1><h2 id="HDchina-高清中国"><a href="#HDchina-高清中国" class="headerlink" title="HDchina 高清中国"></a>HDchina 高清中国</h2><p><a href="http://hdchina.org/login.php" target="_blank" rel="noopener">http://hdchina.org/login.php</a><br>国内pt网站老大，这个不用介绍了吧！</p><h2 id="CHDBits-CHD高清联盟"><a href="#CHDBits-CHD高清联盟" class="headerlink" title="CHDBits CHD高清联盟"></a>CHDBits CHD高清联盟</h2><p><a href="http://chdbits.org/login.php" target="_blank" rel="noopener">http://chdbits.org/login.php</a><br>以前做高清论坛很牛，后来好想闹分家了，pt网站内资源不错更新快。</p><h2 id="CCFBits"><a href="#CCFBits" class="headerlink" title="CCFBits"></a>CCFBits</h2><p><a href="https://ccfbits.org" target="_blank" rel="noopener">https://ccfbits.org</a><br>不错的一个pt网站，不知道怎么描述了，其实大家资源都差不多。</p><h2 id="HDStar-思路高清"><a href="#HDStar-思路高清" class="headerlink" title="HDStar 思路高清"></a>HDStar 思路高清</h2><p><a href="http://www.hdstar.org/" target="_blank" rel="noopener">http://www.hdstar.org/</a><br>感觉还行吧，自己上去看看吧，pt网站内资源更新还是很快的做种的也多。</p><h2 id="HDRoad-思路"><a href="#HDRoad-思路" class="headerlink" title="HDRoad 思路"></a>HDRoad 思路</h2><p><a href="http://hdroad.org/" target="_blank" rel="noopener">http://hdroad.org/</a><br>这pt网站不知道怎么介绍了，分家后的思路自己看。呵呵</p><h2 id="U2动漫乐园"><a href="#U2动漫乐园" class="headerlink" title="U2动漫乐园"></a>U2动漫乐园</h2><p><a href="http://u2.dmhy.org/" target="_blank" rel="noopener">http://u2.dmhy.org/</a><br>动漫方面的pt网站，内容很多。</p><h2 id="HDCity-高清城市"><a href="#HDCity-高清城市" class="headerlink" title="HDCity 高清城市"></a>HDCity 高清城市</h2><p><a href="http://www.hdcity.org/" target="_blank" rel="noopener">http://www.hdcity.org/</a><br>和上面都一样，pt网站内资源更新快，种子多。</p><h2 id="纪录片之家"><a href="#纪录片之家" class="headerlink" title="纪录片之家"></a>纪录片之家</h2><p><a href="http://www.jlpzj.com/" target="_blank" rel="noopener">http://www.jlpzj.com/</a><br>很不错的一个资源网，也是不定时开发注册。</p><h2 id="中国高清网"><a href="#中国高清网" class="headerlink" title="中国高清网"></a>中国高清网</h2><p><a href="http://www.chinahdtv.org" target="_blank" rel="noopener">http://www.chinahdtv.org</a><br>这pt网站不知道是否还有开放，关注。</p><h2 id="TTG"><a href="#TTG" class="headerlink" title="TTG"></a>TTG</h2><p><a href="http://ttg.im/" target="_blank" rel="noopener">http://ttg.im/</a><br>PT网站中的老牌，可是人气好像不怎么样。</p><h2 id="ping2pig"><a href="#ping2pig" class="headerlink" title="ping2pig"></a>ping2pig</h2><p><a href="http://pig2pig.com/login.php" target="_blank" rel="noopener">http://pig2pig.com/login.php</a><br>这个pt网站也不错</p><h2 id="皇后高清"><a href="#皇后高清" class="headerlink" title="皇后高清"></a>皇后高清</h2><p><a href="http://pt.kinghou.com" target="_blank" rel="noopener">http://pt.kinghou.com</a><br>皇后高品质pt网站</p><h2 id="ptshow"><a href="#ptshow" class="headerlink" title="ptshow"></a>ptshow</h2><p><a href="http://www.ptshow.net/login.php" target="_blank" rel="noopener">http://www.ptshow.net/login.php</a><br>ptshow以前这pt网站很不错，现在好像很少更新了</p><h2 id="ourdisc"><a href="#ourdisc" class="headerlink" title="ourdisc"></a>ourdisc</h2><p><a href="http://bt.ourdisc.net/" target="_blank" rel="noopener">http://bt.ourdisc.net/</a><br>还有这个我常用的pt网站</p><h2 id="TorrentCCF-CCF官方PT"><a href="#TorrentCCF-CCF官方PT" class="headerlink" title="TorrentCCF CCF官方PT"></a>TorrentCCF CCF官方PT</h2><p><a href="http://et8.org/login.php" target="_blank" rel="noopener">http://et8.org/login.php</a><br>pt网站后起之秀</p><h2 id="HDBits"><a href="#HDBits" class="headerlink" title="HDBits"></a>HDBits</h2><p><a href="http://hdbits.cn/login.php" target="_blank" rel="noopener">http://hdbits.cn/login.php</a></p><h2 id="3E帝国"><a href="#3E帝国" class="headerlink" title="3E帝国"></a>3E帝国</h2><p><a href="http://pt.3e-online.com/login.php" target="_blank" rel="noopener">http://pt.3e-online.com/login.php</a></p><h2 id="影视帝国"><a href="#影视帝国" class="headerlink" title="影视帝国"></a>影视帝国</h2><p><a href="http://dg.pt1118.com" target="_blank" rel="noopener">http://dg.pt1118.com</a></p><h2 id="高清第一"><a href="#高清第一" class="headerlink" title="高清第一"></a>高清第一</h2><p><a href="http://www.hd001.org/login.php" target="_blank" rel="noopener">http://www.hd001.org/login.php</a></p><h2 id="HDPVPT"><a href="#HDPVPT" class="headerlink" title="HDPVPT"></a>HDPVPT</h2><p><a href="http://88197.westhost.cn/login.php" target="_blank" rel="noopener">http://88197.westhost.cn/login.php</a><br>高清MV为主的pt站</p><h2 id="立体世界资源站"><a href="#立体世界资源站" class="headerlink" title="立体世界资源站"></a>立体世界资源站</h2><p><a href="http://www.3d4dnet.com/" target="_blank" rel="noopener">http://www.3d4dnet.com/</a><br>以3D为主的pt站，新站来的，现在3d电影那么流行哦。</p><h2 id="CMCT"><a href="#CMCT" class="headerlink" title="CMCT"></a>CMCT</h2><p><a href="http://pt.hdcmct.com/signup.php" target="_blank" rel="noopener">http://pt.hdcmct.com/signup.php</a><br>自己看看吧！</p><h2 id="电影岛"><a href="#电影岛" class="headerlink" title="电影岛"></a>电影岛</h2><p><a href="http://pt.dydao.com/login.php" target="_blank" rel="noopener">http://pt.dydao.com/login.php</a><br>新站点</p><h2 id="圣域PT站"><a href="#圣域PT站" class="headerlink" title="圣域PT站"></a>圣域PT站</h2><p><a href="http://www.cnscg.org" target="_blank" rel="noopener">http://www.cnscg.org</a><br>以前很牛的一个BT站，后来关闭了，现在开PT站了。</p><h2 id="60group"><a href="#60group" class="headerlink" title="60group"></a>60group</h2><p><a href="http://pt.60group.com/index.php" target="_blank" rel="noopener">http://pt.60group.com/index.php</a><br>一个软件站，才推出的，暂时没什么人气</p><h2 id="乐透社"><a href="#乐透社" class="headerlink" title="乐透社"></a>乐透社</h2><p><a href="http://www.1up.cn/forum.php" target="_blank" rel="noopener">http://www.1up.cn/forum.php</a><br>小水管的乐园</p><h1 id="教育网PT站"><a href="#教育网PT站" class="headerlink" title="教育网PT站"></a>教育网PT站</h1><h2 id="北邮人BT"><a href="#北邮人BT" class="headerlink" title="北邮人BT"></a>北邮人BT</h2><p><a href="http://bt.byr.cn" target="_blank" rel="noopener">http://bt.byr.cn</a><br>北邮人作为一个教育网的PT大站，各种资源还是相当丰富的，同时支持IPv6和IPv4，速度很可观，出种速度很快</p><h2 id="六维空间（东北大学）"><a href="#六维空间（东北大学）" class="headerlink" title="六维空间（东北大学）"></a>六维空间（东北大学）</h2><p><a href="http://bt.neu6.edu.cn" target="_blank" rel="noopener">http://bt.neu6.edu.cn</a><br>这个PT站只支持ipv6，资源应该是教育网最多的，人很多，据说注册会员有10万之巨,，一个热门资源几千人挂种的场景蔚为壮观，出种速度极快，资源更新也快，各个大站的资源基本都会被第一时间转过去,外校人员注册时需要手机，用于接收验证吧和以后找回密码，不收费。</p><h2 id="晨光（北交大）"><a href="#晨光（北交大）" class="headerlink" title="晨光（北交大）"></a>晨光（北交大）</h2><p><a href="http://cgbt.cn/" target="_blank" rel="noopener">http://cgbt.cn/</a><br>这个PT站也是纯ipv6，资源极其丰富出种速度特别快，各种热门资源都有，学习方面的资源也挺多，教育网四大PT站之一。</p><h2 id="上交葡萄PT站"><a href="#上交葡萄PT站" class="headerlink" title="上交葡萄PT站"></a>上交葡萄PT站</h2><p><a href="http://pt.sjtu.edu.cn/" target="_blank" rel="noopener">http://pt.sjtu.edu.cn/</a><br>上交葡萄是我较早接触的一个PT站，依托上交优越的网络条件发展很迅速，资源还挺丰富，人气也挺旺，热门资源转的很快，各种资源转载集散地。</p><h2 id="兰州高校PT站"><a href="#兰州高校PT站" class="headerlink" title="兰州高校PT站"></a>兰州高校PT站</h2><p><a href="http://www.lzgxbbs.com/pt/login.php" target="_blank" rel="noopener">http://www.lzgxbbs.com/pt/login.php</a><br>校园站</p><h2 id="HUDbt（华中科技）"><a href="#HUDbt（华中科技）" class="headerlink" title="HUDbt（华中科技）"></a>HUDbt（华中科技）</h2><p><a href="http://www.kmgtp.org" target="_blank" rel="noopener">http://www.kmgtp.org</a><br>华中科技大学HUDbt创建于2009年3月中旬，位于教育网华中地区，支持IPv6和IPv4。</p><h2 id="TB-乐乎（上海大学）"><a href="#TB-乐乎（上海大学）" class="headerlink" title="TB 乐乎（上海大学）"></a>TB 乐乎（上海大学）</h2><p><a href="http://bt.shu6.edu.cn" target="_blank" rel="noopener">http://bt.shu6.edu.cn</a><br>上 海大学的乐乎PT站创建于2009年2月，支持IPv6和IPv4。 这个站的唯一的优点就是速度好，因为里面很多很多西安高校的用户，以陕师大，长安大学，西北农林和交大居多。里面的资源及其混乱，质量参差不齐，各种枪 版，各种rmvb满天飞，这是我见过的PT站里面最混乱的一个了。</p><h2 id="我爱威六-纯V6"><a href="#我爱威六-纯V6" class="headerlink" title="我爱威六(纯V6)"></a>我爱威六(纯V6)</h2><p><a href="http://www.52v6.com" target="_blank" rel="noopener">http://www.52v6.com</a><br>北京科技大学这个站人气还不错，界面跟六维很像</p><h2 id="西大PT站"><a href="#西大PT站" class="headerlink" title="西大PT站"></a>西大PT站</h2><p><a href="http://www.btswu.cn" target="_blank" rel="noopener">http://www.btswu.cn</a><br>西南大学</p><h2 id="北师大BT"><a href="#北师大BT" class="headerlink" title="北师大BT"></a>北师大BT</h2><p><a href="http://bt.bnu.edu.cn" target="_blank" rel="noopener">http://bt.bnu.edu.cn</a><br>北京师范大学</p><h2 id="BBSBT"><a href="#BBSBT" class="headerlink" title="BBSBT"></a>BBSBT</h2><p><a href="http://bbsbt.cupl.edu.cn" target="_blank" rel="noopener">http://bbsbt.cupl.edu.cn</a><br>中国政法大学</p><h2 id="红满堂PT站"><a href="#红满堂PT站" class="headerlink" title="红满堂PT站"></a>红满堂PT站</h2><p><a href="http://tracker.ipv6.scau.edu.cn" target="_blank" rel="noopener">http://tracker.ipv6.scau.edu.cn</a><br>华南农业大学</p><h2 id="未来花园BT"><a href="#未来花园BT" class="headerlink" title="未来花园BT"></a>未来花园BT</h2><p><a href="http://bt.buaa6.edu.cn/" target="_blank" rel="noopener">http://bt.buaa6.edu.cn/</a><br>北京航空航天大学</p><h2 id="天地人大PT站"><a href="#天地人大PT站" class="headerlink" title="天地人大PT站"></a>天地人大PT站</h2><p><a href="http://download.tdrd.org" target="_blank" rel="noopener">http://download.tdrd.org</a><br>中国人民大学</p><h2 id="民主湖pt"><a href="#民主湖pt" class="headerlink" title="民主湖pt"></a>民主湖pt</h2><p><a href="http://bt.cqumzh.cn" target="_blank" rel="noopener">http://bt.cqumzh.cn</a><br>重庆大学 刚升级，只对校内开放</p><h2 id="NexusHD"><a href="#NexusHD" class="headerlink" title="NexusHD"></a>NexusHD</h2><p><a href="http://www.nexushd.org" target="_blank" rel="noopener">http://www.nexushd.org</a><br>浙江大学 只对校内开放</p><h2 id="银杏园BT"><a href="#银杏园BT" class="headerlink" title="银杏园BT"></a>银杏园BT</h2><p><a href="http://yxybt.cmc6.edu.cn" target="_blank" rel="noopener">http://yxybt.cmc6.edu.cn</a><br>成都医学院</p><h2 id="NKBT"><a href="#NKBT" class="headerlink" title="NKBT"></a>NKBT</h2><p><a href="http://bt.nankai.edu.cn" target="_blank" rel="noopener">http://bt.nankai.edu.cn</a><br>南开大学</p><h2 id="极速之星"><a href="#极速之星" class="headerlink" title="极速之星"></a>极速之星</h2><p><a href="http://bitpt.cn" target="_blank" rel="noopener">http://bitpt.cn</a><br>北京理工大学</p><h2 id="幻想PT"><a href="#幻想PT" class="headerlink" title="幻想PT"></a>幻想PT</h2><p><a href="http://pt.swufe6.edu.cn" target="_blank" rel="noopener">http://pt.swufe6.edu.cn</a><br>西南财经大学</p><h2 id="华翔PT"><a href="#华翔PT" class="headerlink" title="华翔PT"></a>华翔PT</h2><p><a href="http://ipv6.flypt.org/" target="_blank" rel="noopener">http://ipv6.flypt.org/</a><br>华北电力大学</p><h2 id="紫荆站PT"><a href="#紫荆站PT" class="headerlink" title="紫荆站PT"></a>紫荆站PT</h2><p><a href="http://zijingbt.njuftp.org" target="_blank" rel="noopener">http://zijingbt.njuftp.org</a><br>南京大学</p><h2 id="美美PT"><a href="#美美PT" class="headerlink" title="美美PT"></a>美美PT</h2><p><a href="http://www.jlumm.com" target="_blank" rel="noopener">http://www.jlumm.com</a><br>吉林大学</p><h2 id="陶园PT"><a href="#陶园PT" class="headerlink" title="陶园PT"></a>陶园PT</h2><p><a href="http://pt.scnu.edu.cn" target="_blank" rel="noopener">http://pt.scnu.edu.cn</a><br>华南师范大学</p><h2 id="睿思BT"><a href="#睿思BT" class="headerlink" title="睿思BT"></a>睿思BT</h2><p><a href="http://resource.xidian.edu.cn" target="_blank" rel="noopener">http://resource.xidian.edu.cn</a><br>西安电子科技大学 新开的</p><h2 id="樱花BT"><a href="#樱花BT" class="headerlink" title="樱花BT"></a>樱花BT</h2><p><a href="http://bt.buct6.edu.cn" target="_blank" rel="noopener">http://bt.buct6.edu.cn</a><br>北京化工大学</p><h2 id="五色土PT"><a href="#五色土PT" class="headerlink" title="五色土PT"></a>五色土PT</h2><p><a href="http://pt.cau.edu.cn" target="_blank" rel="noopener">http://pt.cau.edu.cn</a><br>中国农业大学</p><h1 id="国外著名PT名站"><a href="#国外著名PT名站" class="headerlink" title="国外著名PT名站"></a>国外著名PT名站</h1><h2 id="PT站大哥-HDB"><a href="#PT站大哥-HDB" class="headerlink" title="PT站大哥 HDB"></a>PT站大哥 HDB</h2><p><a href="http://hdbits.org/" target="_blank" rel="noopener">http://hdbits.org/</a><br>关闭注册，也不对中国开放邀请注册，所以大家不要去想了。</p><p><a href="http://sdbits.org/" target="_blank" rel="noopener">http://sdbits.org/</a><br>HDB姐妹站.电影.dvd.x264</p><p><a href="http://www.hd-corea.org/" target="_blank" rel="noopener">http://www.hd-corea.org/</a><br>韩国BtS，韩剧电影MV音乐，地址已经换了，还要修改hosts才能访问,</p><h2 id="Torrentleech"><a href="#Torrentleech" class="headerlink" title="Torrentleech"></a>Torrentleech</h2><p><a href="http://www.torrentleech.org/" target="_blank" rel="noopener">http://www.torrentleech.org/</a><br>综合0Day站有16万用户，资源覆盖面比较广，什么东西都有,需要邀请注册</p><h2 id="SceneTorrents"><a href="#SceneTorrents" class="headerlink" title="SceneTorrents"></a>SceneTorrents</h2><p><a href="http://www.scenetorrents.org/" target="_blank" rel="noopener">http://www.scenetorrents.org/</a><br>综合0Day站,和上站一样，资源覆盖面比较广，什么东西都有,需要邀请注册。</p><h2 id="SceneLife"><a href="#SceneLife" class="headerlink" title="SceneLife"></a>SceneLife</h2><p><a href="http://scenelife.net/" target="_blank" rel="noopener">http://scenelife.net/</a><br>综合0Day站,和上站一样广,什么东西都有,需要邀请注册。</p><h2 id="scc"><a href="#scc" class="headerlink" title="scc"></a>scc</h2><p><a href="http://www.sceneaccess.org/" target="_blank" rel="noopener">http://www.sceneaccess.org/</a><br>0Day站,电影.音乐,电视剧分成三个版面,资源更新快，需要邀请注册.</p><h2 id="revtt"><a href="#revtt" class="headerlink" title="revtt"></a>revtt</h2><p><a href="http://www.revolutiontt.net/" target="_blank" rel="noopener">http://www.revolutiontt.net/</a><br>综合0Day站,和上站一样广,什么东西都有,需要邀请注册。</p><h2 id="Torrent-Damage"><a href="#Torrent-Damage" class="headerlink" title="Torrent Damage"></a>Torrent Damage</h2><p><a href="http://www.torrent-damage.net/" target="_blank" rel="noopener">http://www.torrent-damage.net/</a><br>0ADY小组站点，0day综合站，需要邀请注册</p><p><a href="http://www.bit-hdtv.com/" target="_blank" rel="noopener">http://www.bit-hdtv.com/</a><br>原盘数量已经达到501片，有点赶超HDC的意思，需要邀请注册。</p><h2 id="hd-bits"><a href="#hd-bits" class="headerlink" title="hd-bits"></a>hd-bits</h2><p><a href="http://www.hd-bits.ro/signup.php" target="_blank" rel="noopener">http://www.hd-bits.ro/signup.php</a><br>这个pt站兄弟们都说是HDB山寨版，有自己小组，作品不错免费种子多，现在开放注册<br>每月必须10G流量，不然T了</p><p><a href="http://www.bitmetv.org/" target="_blank" rel="noopener">http://www.bitmetv.org/</a><br>电视剧下载站，这个pt网站出连续剧比较快，需要邀请注册.</p><p><a href="http://www.tvtorrents.com/" target="_blank" rel="noopener">http://www.tvtorrents.com/</a><br>电视节目下载站,需要邀请注册，这个pt网站打开超级慢，加入也不想要。</p><p><a href="http://tv.torrents.ro/" target="_blank" rel="noopener">http://tv.torrents.ro/</a><br>电视节目下载站，各站点出片相差不过几分钟时间，这个站也是很快的.开放注册</p><h2 id="HD-Club-乌克兰第一高清"><a href="#HD-Club-乌克兰第一高清" class="headerlink" title="HD-Club 乌克兰第一高清"></a>HD-Club 乌克兰第一高清</h2><p><a href="http://tracker.hdclub.com.ua" target="_blank" rel="noopener">http://tracker.hdclub.com.ua</a><br>免费资源很多，有自己的制作小组。我主要下点演唱会香港片原盘等。现在还开放注册,很容易生存，可能人多关系3天就上传了64G。这个pt站推介大家混。</p><p><a href="http://hdtracker.ru/" target="_blank" rel="noopener">http://hdtracker.ru/</a><br>俄罗斯第一高清，原盘数量已经达到336，高清资源总体不错。经常开放注册….</p><p><a href="http://www.hdsource.org/" target="_blank" rel="noopener">http://www.hdsource.org/</a><br>德国第一高清</p><h2 id="hdf-法国第一高清"><a href="#hdf-法国第一高清" class="headerlink" title="hdf 法国第一高清"></a>hdf 法国第一高清</h2><p><a href="http://www.hdfrench.com/" target="_blank" rel="noopener">http://www.hdfrench.com/</a><br>有制作小组，免费1080P高清电影原盘等都很多(720P几乎绝迹)。注册送10G流量.开放注册</p><h2 id="hd-t"><a href="#hd-t" class="headerlink" title="hd-t"></a>hd-t</h2><p><a href="http://www.hd-torrents.org/" target="_blank" rel="noopener">http://www.hd-torrents.org/</a><br>这个不记得是罗马尼亚还是哪里的了<br>有制作小组，有很多几M的资源，小水管可以慢慢挂慢慢换流量，部分XXX资源下载按双倍计算下载要小心别下XXX，需要邀请注册。</p><p><a href="http://awesome-hd.com/" target="_blank" rel="noopener">http://awesome-hd.com/</a><br>这个pt网站以前还不错，由于数据丢失3次，账号又要第三次重练我对它已经失去信心了，需要邀请注册</p><p><a href="http://asiandvdclub.org/" target="_blank" rel="noopener">http://asiandvdclub.org/</a><br>ADC 亚洲DVD俱乐部 这个是DVD老大 喜欢香港片朋友一定要加 开放注册<br>需要修改hosts文件才能访问<br>C:\WINDOWS\system32\drivers\etc 下hosts文件添加以下内容<br>127.0.0.1 localhost<br>85.11.25.78 asiandvdclub.org<br>85.11.25.78 www.asiandvdclub.org<br>85.11.25.78 announce.asiandvdclub.org</p><p><a href="http://www.thedvdclub.org/" target="_blank" rel="noopener">http://www.thedvdclub.org/</a><br>老牌DVD站，有上站ADC加此站基本DVD无忧了，经常开放注册.</p><h2 id="韩国黑猫"><a href="#韩国黑猫" class="headerlink" title="韩国黑猫"></a>韩国黑猫</h2><p><a href="http://bittalk.org/" target="_blank" rel="noopener">http://bittalk.org/</a><br>需要邀请注册，邀请很容易拿到，在论坛 经常发邀请，也可以直接索取，这个站很怕事很低调，所以没什么人气，下载东西很慢，挂种子有积分。</p><p><a href="http://www.waffles.fm/" target="_blank" rel="noopener">http://www.waffles.fm/</a><br>这个音乐站种子数量已经达到25W，超级难混，没有seedbox等被BAN吧。</p><p><a href="http://what.cd/" target="_blank" rel="noopener">http://what.cd/</a><br>这个是音乐第一下载大站,里面的邀请区最强大的，可以索求各种邀请。混到PU有SCC邀请</p><p><a href="http://vipmusic.org/" target="_blank" rel="noopener">http://vipmusic.org/</a><br>音乐下载站，种子接近2W，喜欢音乐加入这个站点不错.需要邀请注册.</p><p><a href="http://www.music-vid.com/" target="_blank" rel="noopener">http://www.music-vid.com/</a><br>MV下载站只要以欧美MV为主.日韩华语暂时没有发现.MV收集狂不错的选择,需要邀请注册，由于邀请有连坐牢，估计不是亲兄弟，都不发给你。</p><p><a href="http://btmusic.eu/" target="_blank" rel="noopener">http://btmusic.eu/</a><br>无损flac音乐站,不允许发表有损格式,需要邀请注册。</p><p><a href="http://tracker.elektronik.ro" target="_blank" rel="noopener">http://tracker.elektronik.ro</a><br>音乐好站</p><p><a href="http://www.blackcats-games.net/" target="_blank" rel="noopener">http://www.blackcats-games.net/</a><br>黑猫全球最大的游戏综合站，LOLG上已经清晰著名了站点资源，需要邀请注册.</p><p><a href="http://www.bitme.org/" target="_blank" rel="noopener">http://www.bitme.org/</a><br>教育学习资料站，各种教学资料很全，需要邀请注册.</p><p><a href="http://x264.me/" target="_blank" rel="noopener">http://x264.me/</a><br>资源高清电影.dvdRIP,站点特色很多DVDrip-x264,原盘没有发现。需要邀请注册。</p><h2 id="Thor’sLand"><a href="#Thor’sLand" class="headerlink" title="Thor’sLand"></a>Thor’sLand</h2><p><a href="http://ethor.net/" target="_blank" rel="noopener">http://ethor.net/</a></p><h2 id="0ADY电影综合站"><a href="#0ADY电影综合站" class="headerlink" title="0ADY电影综合站"></a>0ADY电影综合站</h2><p><a href="http://www.iplay.ro/" target="_blank" rel="noopener">http://www.iplay.ro/</a><br>xvid.x264.HDTV.音乐，需要邀请注册.</p><p><a href="http://www.cosmoneo.com/" target="_blank" rel="noopener">http://www.cosmoneo.com/</a><br>泰 国站点06年开站,种子已经达到4W多,很有可能是泰国第一站,主要韩国,中国,日本,DVD为主,高清资源比较少只有200多种子,找了找泰国本国高清 竟然没看到一个,给人感觉泰国还没步入高清时代。咱们连接速度也很慢,试了几个种子最快10多K,我看这个环境我是没办法生存了……..</p><h2 id="BWT"><a href="#BWT" class="headerlink" title="BWT"></a>BWT</h2><p><a href="http://www.bwtorrents.com/" target="_blank" rel="noopener">http://www.bwtorrents.com/</a><br>印度宝莱坞 主要以印度及周边国家体育电影电视音乐MV等，论坛形式PT</p><p><strong>本帖转自第一纳斯网</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;国内著名PT站点&quot;&gt;&lt;a href=&quot;#国内著名PT站点&quot; class=&quot;headerlink&quot; title=&quot;国内著名PT站点&quot;&gt;&lt;/a&gt;国内著名PT站点&lt;/h1&gt;&lt;h2 id=&quot;HDchina-高清中国&quot;&gt;&lt;a href=&quot;#HDchina-高清中国&quot; cla
      
    
    </summary>
    
      <category term="Share" scheme="http://yoursite.com/categories/Share/"/>
    
      <category term="Website" scheme="http://yoursite.com/categories/Share/Website/"/>
    
    
      <category term="PT站" scheme="http://yoursite.com/tags/PT%E7%AB%99/"/>
    
      <category term="交大葡萄园" scheme="http://yoursite.com/tags/%E4%BA%A4%E5%A4%A7%E8%91%A1%E8%90%84%E5%9B%AD/"/>
    
  </entry>
  
</feed>
